// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: viewercontroller.proto

#include "viewercontroller.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace osirixgrpc {

inline constexpr ViewerControllerNewROIRequest_Rect::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : origin_x_{0},
        origin_y_{0},
        height_{0},
        width_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ViewerControllerNewROIRequest_Rect::ViewerControllerNewROIRequest_Rect(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ViewerControllerNewROIRequest_RectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewerControllerNewROIRequest_RectDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewerControllerNewROIRequest_RectDefaultTypeInternal() {}
  union {
    ViewerControllerNewROIRequest_Rect _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewerControllerNewROIRequest_RectDefaultTypeInternal _ViewerControllerNewROIRequest_Rect_default_instance_;

inline constexpr ViewerControllerNewROIRequest_Point2D::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : x_{0},
        y_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ViewerControllerNewROIRequest_Point2D::ViewerControllerNewROIRequest_Point2D(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ViewerControllerNewROIRequest_Point2DDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewerControllerNewROIRequest_Point2DDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewerControllerNewROIRequest_Point2DDefaultTypeInternal() {}
  union {
    ViewerControllerNewROIRequest_Point2D _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewerControllerNewROIRequest_Point2DDefaultTypeInternal _ViewerControllerNewROIRequest_Point2D_default_instance_;

inline constexpr ViewerControllerNewROIRequest_Color::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : r_{0},
        g_{0},
        b_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ViewerControllerNewROIRequest_Color::ViewerControllerNewROIRequest_Color(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ViewerControllerNewROIRequest_ColorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewerControllerNewROIRequest_ColorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewerControllerNewROIRequest_ColorDefaultTypeInternal() {}
  union {
    ViewerControllerNewROIRequest_Color _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewerControllerNewROIRequest_ColorDefaultTypeInternal _ViewerControllerNewROIRequest_Color_default_instance_;

inline constexpr ViewerControllerNewROIRequest_Buffer::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : buffer_{},
        rows_{0},
        columns_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ViewerControllerNewROIRequest_Buffer::ViewerControllerNewROIRequest_Buffer(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ViewerControllerNewROIRequest_BufferDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewerControllerNewROIRequest_BufferDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewerControllerNewROIRequest_BufferDefaultTypeInternal() {}
  union {
    ViewerControllerNewROIRequest_Buffer _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewerControllerNewROIRequest_BufferDefaultTypeInternal _ViewerControllerNewROIRequest_Buffer_default_instance_;

inline constexpr ViewerControllerWLWWResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_{nullptr},
        wl_{0},
        ww_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ViewerControllerWLWWResponse::ViewerControllerWLWWResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ViewerControllerWLWWResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewerControllerWLWWResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewerControllerWLWWResponseDefaultTypeInternal() {}
  union {
    ViewerControllerWLWWResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewerControllerWLWWResponseDefaultTypeInternal _ViewerControllerWLWWResponse_default_instance_;

inline constexpr ViewerControllerVRControllersResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        vr_controllers_{},
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ViewerControllerVRControllersResponse::ViewerControllerVRControllersResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ViewerControllerVRControllersResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewerControllerVRControllersResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewerControllerVRControllersResponseDefaultTypeInternal() {}
  union {
    ViewerControllerVRControllersResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewerControllerVRControllersResponseDefaultTypeInternal _ViewerControllerVRControllersResponse_default_instance_;

inline constexpr ViewerControllerTitleResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ViewerControllerTitleResponse::ViewerControllerTitleResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ViewerControllerTitleResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewerControllerTitleResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewerControllerTitleResponseDefaultTypeInternal() {}
  union {
    ViewerControllerTitleResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewerControllerTitleResponseDefaultTypeInternal _ViewerControllerTitleResponse_default_instance_;

inline constexpr ViewerControllerSetWLWWRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        viewer_controller_{nullptr},
        wl_{0},
        ww_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ViewerControllerSetWLWWRequest::ViewerControllerSetWLWWRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ViewerControllerSetWLWWRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewerControllerSetWLWWRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewerControllerSetWLWWRequestDefaultTypeInternal() {}
  union {
    ViewerControllerSetWLWWRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewerControllerSetWLWWRequestDefaultTypeInternal _ViewerControllerSetWLWWRequest_default_instance_;

inline constexpr ViewerControllerSetMovieIdxRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        viewer_controller_{nullptr},
        movie_idx_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ViewerControllerSetMovieIdxRequest::ViewerControllerSetMovieIdxRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ViewerControllerSetMovieIdxRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewerControllerSetMovieIdxRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewerControllerSetMovieIdxRequestDefaultTypeInternal() {}
  union {
    ViewerControllerSetMovieIdxRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewerControllerSetMovieIdxRequestDefaultTypeInternal _ViewerControllerSetMovieIdxRequest_default_instance_;

inline constexpr ViewerControllerSetIdxRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        viewer_controller_{nullptr},
        idx_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ViewerControllerSetIdxRequest::ViewerControllerSetIdxRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ViewerControllerSetIdxRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewerControllerSetIdxRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewerControllerSetIdxRequestDefaultTypeInternal() {}
  union {
    ViewerControllerSetIdxRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewerControllerSetIdxRequestDefaultTypeInternal _ViewerControllerSetIdxRequest_default_instance_;

inline constexpr ViewerControllerSelectedROIsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        rois_{},
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ViewerControllerSelectedROIsResponse::ViewerControllerSelectedROIsResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ViewerControllerSelectedROIsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewerControllerSelectedROIsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewerControllerSelectedROIsResponseDefaultTypeInternal() {}
  union {
    ViewerControllerSelectedROIsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewerControllerSelectedROIsResponseDefaultTypeInternal _ViewerControllerSelectedROIsResponse_default_instance_;

inline constexpr ViewerControllerResampleViewerControllerRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        viewer_controller_{nullptr},
        fixed_viewer_controller_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ViewerControllerResampleViewerControllerRequest::ViewerControllerResampleViewerControllerRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ViewerControllerResampleViewerControllerRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewerControllerResampleViewerControllerRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewerControllerResampleViewerControllerRequestDefaultTypeInternal() {}
  union {
    ViewerControllerResampleViewerControllerRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewerControllerResampleViewerControllerRequestDefaultTypeInternal _ViewerControllerResampleViewerControllerRequest_default_instance_;

inline constexpr ViewerControllerROIsWithNameResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        rois_{},
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ViewerControllerROIsWithNameResponse::ViewerControllerROIsWithNameResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ViewerControllerROIsWithNameResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewerControllerROIsWithNameResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewerControllerROIsWithNameResponseDefaultTypeInternal() {}
  union {
    ViewerControllerROIsWithNameResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewerControllerROIsWithNameResponseDefaultTypeInternal _ViewerControllerROIsWithNameResponse_default_instance_;

inline constexpr ViewerControllerROIsWithNameRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        viewer_controller_{nullptr},
        movie_idx_{0},
        in_4d_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ViewerControllerROIsWithNameRequest::ViewerControllerROIsWithNameRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ViewerControllerROIsWithNameRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewerControllerROIsWithNameRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewerControllerROIsWithNameRequestDefaultTypeInternal() {}
  union {
    ViewerControllerROIsWithNameRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewerControllerROIsWithNameRequestDefaultTypeInternal _ViewerControllerROIsWithNameRequest_default_instance_;

inline constexpr ViewerControllerROIListResponse_ROISlice::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rois_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ViewerControllerROIListResponse_ROISlice::ViewerControllerROIListResponse_ROISlice(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ViewerControllerROIListResponse_ROISliceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewerControllerROIListResponse_ROISliceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewerControllerROIListResponse_ROISliceDefaultTypeInternal() {}
  union {
    ViewerControllerROIListResponse_ROISlice _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewerControllerROIListResponse_ROISliceDefaultTypeInternal _ViewerControllerROIListResponse_ROISlice_default_instance_;

inline constexpr ViewerControllerROIListRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        viewer_controller_{nullptr},
        movie_idx_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ViewerControllerROIListRequest::ViewerControllerROIListRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ViewerControllerROIListRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewerControllerROIListRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewerControllerROIListRequestDefaultTypeInternal() {}
  union {
    ViewerControllerROIListRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewerControllerROIListRequestDefaultTypeInternal _ViewerControllerROIListRequest_default_instance_;

inline constexpr ViewerControllerPixListResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        pix_{},
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ViewerControllerPixListResponse::ViewerControllerPixListResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ViewerControllerPixListResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewerControllerPixListResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewerControllerPixListResponseDefaultTypeInternal() {}
  union {
    ViewerControllerPixListResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewerControllerPixListResponseDefaultTypeInternal _ViewerControllerPixListResponse_default_instance_;

inline constexpr ViewerControllerPixListRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        viewer_controller_{nullptr},
        movie_idx_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ViewerControllerPixListRequest::ViewerControllerPixListRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ViewerControllerPixListRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewerControllerPixListRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewerControllerPixListRequestDefaultTypeInternal() {}
  union {
    ViewerControllerPixListRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewerControllerPixListRequestDefaultTypeInternal _ViewerControllerPixListRequest_default_instance_;

inline constexpr ViewerControllerOpenVRViewerForModeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_{nullptr},
        vr_controller_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ViewerControllerOpenVRViewerForModeResponse::ViewerControllerOpenVRViewerForModeResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ViewerControllerOpenVRViewerForModeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewerControllerOpenVRViewerForModeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewerControllerOpenVRViewerForModeResponseDefaultTypeInternal() {}
  union {
    ViewerControllerOpenVRViewerForModeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewerControllerOpenVRViewerForModeResponseDefaultTypeInternal _ViewerControllerOpenVRViewerForModeResponse_default_instance_;

inline constexpr ViewerControllerOpenVRViewerForModeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mode_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        viewer_controller_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ViewerControllerOpenVRViewerForModeRequest::ViewerControllerOpenVRViewerForModeRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ViewerControllerOpenVRViewerForModeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewerControllerOpenVRViewerForModeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewerControllerOpenVRViewerForModeRequestDefaultTypeInternal() {}
  union {
    ViewerControllerOpenVRViewerForModeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewerControllerOpenVRViewerForModeRequestDefaultTypeInternal _ViewerControllerOpenVRViewerForModeRequest_default_instance_;

inline constexpr ViewerControllerNewROIResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_{nullptr},
        roi_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ViewerControllerNewROIResponse::ViewerControllerNewROIResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ViewerControllerNewROIResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewerControllerNewROIResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewerControllerNewROIResponseDefaultTypeInternal() {}
  union {
    ViewerControllerNewROIResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewerControllerNewROIResponseDefaultTypeInternal _ViewerControllerNewROIResponse_default_instance_;

inline constexpr ViewerControllerNewROIRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        points_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        viewer_controller_{nullptr},
        color_{nullptr},
        buffer_{nullptr},
        rectangle_{nullptr},
        itype_{0},
        position_{0},
        movie_idx_{0},
        buffer_position_x_{0},
        buffer_position_y_{0},
        thickness_{0},
        opacity_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ViewerControllerNewROIRequest::ViewerControllerNewROIRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ViewerControllerNewROIRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewerControllerNewROIRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewerControllerNewROIRequestDefaultTypeInternal() {}
  union {
    ViewerControllerNewROIRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewerControllerNewROIRequestDefaultTypeInternal _ViewerControllerNewROIRequest_default_instance_;

inline constexpr ViewerControllerMovieIdxResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_{nullptr},
        movie_idx_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ViewerControllerMovieIdxResponse::ViewerControllerMovieIdxResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ViewerControllerMovieIdxResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewerControllerMovieIdxResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewerControllerMovieIdxResponseDefaultTypeInternal() {}
  union {
    ViewerControllerMovieIdxResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewerControllerMovieIdxResponseDefaultTypeInternal _ViewerControllerMovieIdxResponse_default_instance_;

inline constexpr ViewerControllerModalityResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        modality_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ViewerControllerModalityResponse::ViewerControllerModalityResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ViewerControllerModalityResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewerControllerModalityResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewerControllerModalityResponseDefaultTypeInternal() {}
  union {
    ViewerControllerModalityResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewerControllerModalityResponseDefaultTypeInternal _ViewerControllerModalityResponse_default_instance_;

inline constexpr ViewerControllerMaxMovieIdxResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_{nullptr},
        max_movie_idx_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ViewerControllerMaxMovieIdxResponse::ViewerControllerMaxMovieIdxResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ViewerControllerMaxMovieIdxResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewerControllerMaxMovieIdxResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewerControllerMaxMovieIdxResponseDefaultTypeInternal() {}
  union {
    ViewerControllerMaxMovieIdxResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewerControllerMaxMovieIdxResponseDefaultTypeInternal _ViewerControllerMaxMovieIdxResponse_default_instance_;

inline constexpr ViewerControllerIsDataVolumicResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_{nullptr},
        is_volumic_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ViewerControllerIsDataVolumicResponse::ViewerControllerIsDataVolumicResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ViewerControllerIsDataVolumicResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewerControllerIsDataVolumicResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewerControllerIsDataVolumicResponseDefaultTypeInternal() {}
  union {
    ViewerControllerIsDataVolumicResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewerControllerIsDataVolumicResponseDefaultTypeInternal _ViewerControllerIsDataVolumicResponse_default_instance_;

inline constexpr ViewerControllerIsDataVolumicRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        viewer_controller_{nullptr},
        in_4d_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ViewerControllerIsDataVolumicRequest::ViewerControllerIsDataVolumicRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ViewerControllerIsDataVolumicRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewerControllerIsDataVolumicRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewerControllerIsDataVolumicRequestDefaultTypeInternal() {}
  union {
    ViewerControllerIsDataVolumicRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewerControllerIsDataVolumicRequestDefaultTypeInternal _ViewerControllerIsDataVolumicRequest_default_instance_;

inline constexpr ViewerControllerIdxResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_{nullptr},
        idx_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ViewerControllerIdxResponse::ViewerControllerIdxResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ViewerControllerIdxResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewerControllerIdxResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewerControllerIdxResponseDefaultTypeInternal() {}
  union {
    ViewerControllerIdxResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewerControllerIdxResponseDefaultTypeInternal _ViewerControllerIdxResponse_default_instance_;

inline constexpr ViewerControllerCurDCMResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_{nullptr},
        pix_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ViewerControllerCurDCMResponse::ViewerControllerCurDCMResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ViewerControllerCurDCMResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewerControllerCurDCMResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewerControllerCurDCMResponseDefaultTypeInternal() {}
  union {
    ViewerControllerCurDCMResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewerControllerCurDCMResponseDefaultTypeInternal _ViewerControllerCurDCMResponse_default_instance_;

inline constexpr ViewerControllerCopyViewerWindowRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        viewer_controller_{nullptr},
        in_4d_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ViewerControllerCopyViewerWindowRequest::ViewerControllerCopyViewerWindowRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ViewerControllerCopyViewerWindowRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewerControllerCopyViewerWindowRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewerControllerCopyViewerWindowRequestDefaultTypeInternal() {}
  union {
    ViewerControllerCopyViewerWindowRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewerControllerCopyViewerWindowRequestDefaultTypeInternal _ViewerControllerCopyViewerWindowRequest_default_instance_;

inline constexpr ViewerControllerBlendingControllerResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_{nullptr},
        blending_viewer_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ViewerControllerBlendingControllerResponse::ViewerControllerBlendingControllerResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ViewerControllerBlendingControllerResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewerControllerBlendingControllerResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewerControllerBlendingControllerResponseDefaultTypeInternal() {}
  union {
    ViewerControllerBlendingControllerResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewerControllerBlendingControllerResponseDefaultTypeInternal _ViewerControllerBlendingControllerResponse_default_instance_;

inline constexpr ViewerControllerROIListResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        roi_slices_{},
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ViewerControllerROIListResponse::ViewerControllerROIListResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ViewerControllerROIListResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewerControllerROIListResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewerControllerROIListResponseDefaultTypeInternal() {}
  union {
    ViewerControllerROIListResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewerControllerROIListResponseDefaultTypeInternal _ViewerControllerROIListResponse_default_instance_;
}  // namespace osirixgrpc
static ::_pb::Metadata file_level_metadata_viewercontroller_2eproto[32];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_viewercontroller_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_viewercontroller_2eproto = nullptr;
const ::uint32_t TableStruct_viewercontroller_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerPixListResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerPixListResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerPixListResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerPixListResponse, _impl_.pix_),
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerROIListResponse_ROISlice, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerROIListResponse_ROISlice, _impl_.rois_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerROIListResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerROIListResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerROIListResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerROIListResponse, _impl_.roi_slices_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIResponse, _impl_.roi_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerCurDCMResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerCurDCMResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerCurDCMResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerCurDCMResponse, _impl_.pix_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerROIsWithNameResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerROIsWithNameResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerROIsWithNameResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerROIsWithNameResponse, _impl_.rois_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerSelectedROIsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerSelectedROIsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerSelectedROIsResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerSelectedROIsResponse, _impl_.rois_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerIsDataVolumicResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerIsDataVolumicResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerIsDataVolumicResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerIsDataVolumicResponse, _impl_.is_volumic_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerBlendingControllerResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerBlendingControllerResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerBlendingControllerResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerBlendingControllerResponse, _impl_.blending_viewer_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerVRControllersResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerVRControllersResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerVRControllersResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerVRControllersResponse, _impl_.vr_controllers_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerTitleResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerTitleResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerTitleResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerTitleResponse, _impl_.title_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerModalityResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerModalityResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerModalityResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerModalityResponse, _impl_.modality_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerMovieIdxResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerMovieIdxResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerMovieIdxResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerMovieIdxResponse, _impl_.movie_idx_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerMaxMovieIdxResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerMaxMovieIdxResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerMaxMovieIdxResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerMaxMovieIdxResponse, _impl_.max_movie_idx_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerIdxResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerIdxResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerIdxResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerIdxResponse, _impl_.idx_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerWLWWResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerWLWWResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerWLWWResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerWLWWResponse, _impl_.wl_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerWLWWResponse, _impl_.ww_),
    0,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerOpenVRViewerForModeResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerOpenVRViewerForModeResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerOpenVRViewerForModeResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerOpenVRViewerForModeResponse, _impl_.vr_controller_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerPixListRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerPixListRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerPixListRequest, _impl_.viewer_controller_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerPixListRequest, _impl_.movie_idx_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerROIListRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerROIListRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerROIListRequest, _impl_.viewer_controller_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerROIListRequest, _impl_.movie_idx_),
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest_Buffer, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest_Buffer, _impl_.buffer_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest_Buffer, _impl_.rows_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest_Buffer, _impl_.columns_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest_Point2D, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest_Point2D, _impl_.x_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest_Point2D, _impl_.y_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest_Color, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest_Color, _impl_.r_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest_Color, _impl_.g_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest_Color, _impl_.b_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest_Rect, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest_Rect, _impl_.origin_x_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest_Rect, _impl_.origin_y_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest_Rect, _impl_.height_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest_Rect, _impl_.width_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest, _impl_.viewer_controller_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest, _impl_.itype_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest, _impl_.position_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest, _impl_.movie_idx_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest, _impl_.buffer_position_x_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest, _impl_.buffer_position_y_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest, _impl_.color_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest, _impl_.thickness_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest, _impl_.opacity_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest, _impl_.buffer_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest, _impl_.points_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest, _impl_.rectangle_),
    0,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    1,
    ~0u,
    ~0u,
    2,
    ~0u,
    3,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerROIsWithNameRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerROIsWithNameRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerROIsWithNameRequest, _impl_.viewer_controller_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerROIsWithNameRequest, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerROIsWithNameRequest, _impl_.movie_idx_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerROIsWithNameRequest, _impl_.in_4d_),
    0,
    ~0u,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerResampleViewerControllerRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerResampleViewerControllerRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerResampleViewerControllerRequest, _impl_.viewer_controller_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerResampleViewerControllerRequest, _impl_.fixed_viewer_controller_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerCopyViewerWindowRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerCopyViewerWindowRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerCopyViewerWindowRequest, _impl_.viewer_controller_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerCopyViewerWindowRequest, _impl_.in_4d_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerSetMovieIdxRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerSetMovieIdxRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerSetMovieIdxRequest, _impl_.viewer_controller_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerSetMovieIdxRequest, _impl_.movie_idx_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerIsDataVolumicRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerIsDataVolumicRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerIsDataVolumicRequest, _impl_.viewer_controller_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerIsDataVolumicRequest, _impl_.in_4d_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerSetIdxRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerSetIdxRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerSetIdxRequest, _impl_.viewer_controller_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerSetIdxRequest, _impl_.idx_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerSetWLWWRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerSetWLWWRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerSetWLWWRequest, _impl_.viewer_controller_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerSetWLWWRequest, _impl_.wl_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerSetWLWWRequest, _impl_.ww_),
    0,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerOpenVRViewerForModeRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerOpenVRViewerForModeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerOpenVRViewerForModeRequest, _impl_.viewer_controller_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerOpenVRViewerForModeRequest, _impl_.mode_),
    0,
    ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::osirixgrpc::ViewerControllerPixListResponse)},
        {12, -1, -1, sizeof(::osirixgrpc::ViewerControllerROIListResponse_ROISlice)},
        {21, 31, -1, sizeof(::osirixgrpc::ViewerControllerROIListResponse)},
        {33, 43, -1, sizeof(::osirixgrpc::ViewerControllerNewROIResponse)},
        {45, 55, -1, sizeof(::osirixgrpc::ViewerControllerCurDCMResponse)},
        {57, 67, -1, sizeof(::osirixgrpc::ViewerControllerROIsWithNameResponse)},
        {69, 79, -1, sizeof(::osirixgrpc::ViewerControllerSelectedROIsResponse)},
        {81, 91, -1, sizeof(::osirixgrpc::ViewerControllerIsDataVolumicResponse)},
        {93, 103, -1, sizeof(::osirixgrpc::ViewerControllerBlendingControllerResponse)},
        {105, 115, -1, sizeof(::osirixgrpc::ViewerControllerVRControllersResponse)},
        {117, 127, -1, sizeof(::osirixgrpc::ViewerControllerTitleResponse)},
        {129, 139, -1, sizeof(::osirixgrpc::ViewerControllerModalityResponse)},
        {141, 151, -1, sizeof(::osirixgrpc::ViewerControllerMovieIdxResponse)},
        {153, 163, -1, sizeof(::osirixgrpc::ViewerControllerMaxMovieIdxResponse)},
        {165, 175, -1, sizeof(::osirixgrpc::ViewerControllerIdxResponse)},
        {177, 188, -1, sizeof(::osirixgrpc::ViewerControllerWLWWResponse)},
        {191, 201, -1, sizeof(::osirixgrpc::ViewerControllerOpenVRViewerForModeResponse)},
        {203, 213, -1, sizeof(::osirixgrpc::ViewerControllerPixListRequest)},
        {215, 225, -1, sizeof(::osirixgrpc::ViewerControllerROIListRequest)},
        {227, -1, -1, sizeof(::osirixgrpc::ViewerControllerNewROIRequest_Buffer)},
        {238, -1, -1, sizeof(::osirixgrpc::ViewerControllerNewROIRequest_Point2D)},
        {248, -1, -1, sizeof(::osirixgrpc::ViewerControllerNewROIRequest_Color)},
        {259, -1, -1, sizeof(::osirixgrpc::ViewerControllerNewROIRequest_Rect)},
        {271, 292, -1, sizeof(::osirixgrpc::ViewerControllerNewROIRequest)},
        {305, 317, -1, sizeof(::osirixgrpc::ViewerControllerROIsWithNameRequest)},
        {321, 331, -1, sizeof(::osirixgrpc::ViewerControllerResampleViewerControllerRequest)},
        {333, 343, -1, sizeof(::osirixgrpc::ViewerControllerCopyViewerWindowRequest)},
        {345, 355, -1, sizeof(::osirixgrpc::ViewerControllerSetMovieIdxRequest)},
        {357, 367, -1, sizeof(::osirixgrpc::ViewerControllerIsDataVolumicRequest)},
        {369, 379, -1, sizeof(::osirixgrpc::ViewerControllerSetIdxRequest)},
        {381, 392, -1, sizeof(::osirixgrpc::ViewerControllerSetWLWWRequest)},
        {395, 405, -1, sizeof(::osirixgrpc::ViewerControllerOpenVRViewerForModeRequest)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::osirixgrpc::_ViewerControllerPixListResponse_default_instance_._instance,
    &::osirixgrpc::_ViewerControllerROIListResponse_ROISlice_default_instance_._instance,
    &::osirixgrpc::_ViewerControllerROIListResponse_default_instance_._instance,
    &::osirixgrpc::_ViewerControllerNewROIResponse_default_instance_._instance,
    &::osirixgrpc::_ViewerControllerCurDCMResponse_default_instance_._instance,
    &::osirixgrpc::_ViewerControllerROIsWithNameResponse_default_instance_._instance,
    &::osirixgrpc::_ViewerControllerSelectedROIsResponse_default_instance_._instance,
    &::osirixgrpc::_ViewerControllerIsDataVolumicResponse_default_instance_._instance,
    &::osirixgrpc::_ViewerControllerBlendingControllerResponse_default_instance_._instance,
    &::osirixgrpc::_ViewerControllerVRControllersResponse_default_instance_._instance,
    &::osirixgrpc::_ViewerControllerTitleResponse_default_instance_._instance,
    &::osirixgrpc::_ViewerControllerModalityResponse_default_instance_._instance,
    &::osirixgrpc::_ViewerControllerMovieIdxResponse_default_instance_._instance,
    &::osirixgrpc::_ViewerControllerMaxMovieIdxResponse_default_instance_._instance,
    &::osirixgrpc::_ViewerControllerIdxResponse_default_instance_._instance,
    &::osirixgrpc::_ViewerControllerWLWWResponse_default_instance_._instance,
    &::osirixgrpc::_ViewerControllerOpenVRViewerForModeResponse_default_instance_._instance,
    &::osirixgrpc::_ViewerControllerPixListRequest_default_instance_._instance,
    &::osirixgrpc::_ViewerControllerROIListRequest_default_instance_._instance,
    &::osirixgrpc::_ViewerControllerNewROIRequest_Buffer_default_instance_._instance,
    &::osirixgrpc::_ViewerControllerNewROIRequest_Point2D_default_instance_._instance,
    &::osirixgrpc::_ViewerControllerNewROIRequest_Color_default_instance_._instance,
    &::osirixgrpc::_ViewerControllerNewROIRequest_Rect_default_instance_._instance,
    &::osirixgrpc::_ViewerControllerNewROIRequest_default_instance_._instance,
    &::osirixgrpc::_ViewerControllerROIsWithNameRequest_default_instance_._instance,
    &::osirixgrpc::_ViewerControllerResampleViewerControllerRequest_default_instance_._instance,
    &::osirixgrpc::_ViewerControllerCopyViewerWindowRequest_default_instance_._instance,
    &::osirixgrpc::_ViewerControllerSetMovieIdxRequest_default_instance_._instance,
    &::osirixgrpc::_ViewerControllerIsDataVolumicRequest_default_instance_._instance,
    &::osirixgrpc::_ViewerControllerSetIdxRequest_default_instance_._instance,
    &::osirixgrpc::_ViewerControllerSetWLWWRequest_default_instance_._instance,
    &::osirixgrpc::_ViewerControllerOpenVRViewerForModeRequest_default_instance_._instance,
};
const char descriptor_table_protodef_viewercontroller_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\026viewercontroller.proto\022\nosirixgrpc\032\017ut"
    "ilities.proto\032\013types.proto\"f\n\037ViewerCont"
    "rollerPixListResponse\022\"\n\006status\030\001 \001(\0132\022."
    "osirixgrpc.Status\022\037\n\003pix\030\002 \003(\0132\022.osirixg"
    "rpc.DCMPix\"\272\001\n\037ViewerControllerROIListRe"
    "sponse\022\"\n\006status\030\001 \001(\0132\022.osirixgrpc.Stat"
    "us\022H\n\nroi_slices\030\002 \003(\01324.osirixgrpc.View"
    "erControllerROIListResponse.ROISlice\032)\n\010"
    "ROISlice\022\035\n\004rois\030\001 \003(\0132\017.osirixgrpc.ROI\""
    "b\n\036ViewerControllerNewROIResponse\022\"\n\006sta"
    "tus\030\001 \001(\0132\022.osirixgrpc.Status\022\034\n\003roi\030\002 \001"
    "(\0132\017.osirixgrpc.ROI\"e\n\036ViewerControllerC"
    "urDCMResponse\022\"\n\006status\030\001 \001(\0132\022.osirixgr"
    "pc.Status\022\037\n\003pix\030\002 \001(\0132\022.osirixgrpc.DCMP"
    "ix\"i\n$ViewerControllerROIsWithNameRespon"
    "se\022\"\n\006status\030\001 \001(\0132\022.osirixgrpc.Status\022\035"
    "\n\004rois\030\002 \003(\0132\017.osirixgrpc.ROI\"i\n$ViewerC"
    "ontrollerSelectedROIsResponse\022\"\n\006status\030"
    "\001 \001(\0132\022.osirixgrpc.Status\022\035\n\004rois\030\002 \003(\0132"
    "\017.osirixgrpc.ROI\"_\n%ViewerControllerIsDa"
    "taVolumicResponse\022\"\n\006status\030\001 \001(\0132\022.osir"
    "ixgrpc.Status\022\022\n\nis_volumic\030\002 \001(\010\"\207\001\n*Vi"
    "ewerControllerBlendingControllerResponse"
    "\022\"\n\006status\030\001 \001(\0132\022.osirixgrpc.Status\0225\n\017"
    "blending_viewer\030\002 \001(\0132\034.osirixgrpc.Viewe"
    "rController\"}\n%ViewerControllerVRControl"
    "lersResponse\022\"\n\006status\030\001 \001(\0132\022.osirixgrp"
    "c.Status\0220\n\016vr_controllers\030\002 \003(\0132\030.osiri"
    "xgrpc.VRController\"R\n\035ViewerControllerTi"
    "tleResponse\022\"\n\006status\030\001 \001(\0132\022.osirixgrpc"
    ".Status\022\r\n\005title\030\002 \001(\t\"X\n ViewerControll"
    "erModalityResponse\022\"\n\006status\030\001 \001(\0132\022.osi"
    "rixgrpc.Status\022\020\n\010modality\030\002 \001(\t\"Y\n View"
    "erControllerMovieIdxResponse\022\"\n\006status\030\001"
    " \001(\0132\022.osirixgrpc.Status\022\021\n\tmovie_idx\030\002 "
    "\001(\005\"`\n#ViewerControllerMaxMovieIdxRespon"
    "se\022\"\n\006status\030\001 \001(\0132\022.osirixgrpc.Status\022\025"
    "\n\rmax_movie_idx\030\002 \001(\005\"N\n\033ViewerControlle"
    "rIdxResponse\022\"\n\006status\030\001 \001(\0132\022.osirixgrp"
    "c.Status\022\013\n\003idx\030\002 \001(\005\"Z\n\034ViewerControlle"
    "rWLWWResponse\022\"\n\006status\030\001 \001(\0132\022.osirixgr"
    "pc.Status\022\n\n\002wl\030\002 \001(\002\022\n\n\002ww\030\003 \001(\002\"\202\001\n+Vi"
    "ewerControllerOpenVRViewerForModeRespons"
    "e\022\"\n\006status\030\001 \001(\0132\022.osirixgrpc.Status\022/\n"
    "\rvr_controller\030\002 \001(\0132\030.osirixgrpc.VRCont"
    "roller\"l\n\036ViewerControllerPixListRequest"
    "\0227\n\021viewer_controller\030\001 \001(\0132\034.osirixgrpc"
    ".ViewerController\022\021\n\tmovie_idx\030\002 \001(\005\"l\n\036"
    "ViewerControllerROIListRequest\0227\n\021viewer"
    "_controller\030\001 \001(\0132\034.osirixgrpc.ViewerCon"
    "troller\022\021\n\tmovie_idx\030\002 \001(\005\"\313\005\n\035ViewerCon"
    "trollerNewROIRequest\0227\n\021viewer_controlle"
    "r\030\001 \001(\0132\034.osirixgrpc.ViewerController\022\r\n"
    "\005itype\030\002 \001(\005\022\014\n\004name\030\003 \001(\t\022\020\n\010position\030\004"
    " \001(\005\022\021\n\tmovie_idx\030\005 \001(\005\022\031\n\021buffer_positi"
    "on_x\030\006 \001(\005\022\031\n\021buffer_position_y\030\007 \001(\005\022>\n"
    "\005color\030\010 \001(\0132/.osirixgrpc.ViewerControll"
    "erNewROIRequest.Color\022\021\n\tthickness\030\t \001(\002"
    "\022\017\n\007opacity\030\n \001(\002\022@\n\006buffer\030\013 \001(\01320.osir"
    "ixgrpc.ViewerControllerNewROIRequest.Buf"
    "fer\022A\n\006points\030\014 \003(\01321.osirixgrpc.ViewerC"
    "ontrollerNewROIRequest.Point2D\022A\n\trectan"
    "gle\030\r \001(\0132..osirixgrpc.ViewerControllerN"
    "ewROIRequest.Rect\0327\n\006Buffer\022\016\n\006buffer\030\001 "
    "\003(\010\022\014\n\004rows\030\002 \001(\005\022\017\n\007columns\030\003 \001(\005\032\037\n\007Po"
    "int2D\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\032(\n\005Color\022\t\n\001"
    "r\030\001 \001(\005\022\t\n\001g\030\002 \001(\005\022\t\n\001b\030\003 \001(\005\032I\n\004Rect\022\020\n"
    "\010origin_x\030\001 \001(\002\022\020\n\010origin_y\030\002 \001(\002\022\016\n\006hei"
    "ght\030\003 \001(\002\022\r\n\005width\030\004 \001(\002\"\216\001\n#ViewerContr"
    "ollerROIsWithNameRequest\0227\n\021viewer_contr"
    "oller\030\001 \001(\0132\034.osirixgrpc.ViewerControlle"
    "r\022\014\n\004name\030\002 \001(\t\022\021\n\tmovie_idx\030\003 \001(\005\022\r\n\005in"
    "_4d\030\004 \001(\010\"\251\001\n/ViewerControllerResampleVi"
    "ewerControllerRequest\0227\n\021viewer_controll"
    "er\030\001 \001(\0132\034.osirixgrpc.ViewerController\022="
    "\n\027fixed_viewer_controller\030\002 \001(\0132\034.osirix"
    "grpc.ViewerController\"q\n\'ViewerControlle"
    "rCopyViewerWindowRequest\0227\n\021viewer_contr"
    "oller\030\001 \001(\0132\034.osirixgrpc.ViewerControlle"
    "r\022\r\n\005in_4d\030\002 \001(\010\"p\n\"ViewerControllerSetM"
    "ovieIdxRequest\0227\n\021viewer_controller\030\001 \001("
    "\0132\034.osirixgrpc.ViewerController\022\021\n\tmovie"
    "_idx\030\002 \001(\005\"n\n$ViewerControllerIsDataVolu"
    "micRequest\0227\n\021viewer_controller\030\001 \001(\0132\034."
    "osirixgrpc.ViewerController\022\r\n\005in_4d\030\002 \001"
    "(\010\"e\n\035ViewerControllerSetIdxRequest\0227\n\021v"
    "iewer_controller\030\001 \001(\0132\034.osirixgrpc.View"
    "erController\022\013\n\003idx\030\002 \001(\005\"q\n\036ViewerContr"
    "ollerSetWLWWRequest\0227\n\021viewer_controller"
    "\030\001 \001(\0132\034.osirixgrpc.ViewerController\022\n\n\002"
    "wl\030\002 \001(\002\022\n\n\002ww\030\003 \001(\002\"s\n*ViewerController"
    "OpenVRViewerForModeRequest\0227\n\021viewer_con"
    "troller\030\001 \001(\0132\034.osirixgrpc.ViewerControl"
    "ler\022\014\n\004mode\030\002 \001(\tb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_viewercontroller_2eproto_deps[2] =
    {
        &::descriptor_table_types_2eproto,
        &::descriptor_table_utilities_2eproto,
};
static ::absl::once_flag descriptor_table_viewercontroller_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_viewercontroller_2eproto = {
    false,
    false,
    3745,
    descriptor_table_protodef_viewercontroller_2eproto,
    "viewercontroller.proto",
    &descriptor_table_viewercontroller_2eproto_once,
    descriptor_table_viewercontroller_2eproto_deps,
    2,
    32,
    schemas,
    file_default_instances,
    TableStruct_viewercontroller_2eproto::offsets,
    file_level_metadata_viewercontroller_2eproto,
    file_level_enum_descriptors_viewercontroller_2eproto,
    file_level_service_descriptors_viewercontroller_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_viewercontroller_2eproto_getter() {
  return &descriptor_table_viewercontroller_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_viewercontroller_2eproto(&descriptor_table_viewercontroller_2eproto);
namespace osirixgrpc {
// ===================================================================

class ViewerControllerPixListResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ViewerControllerPixListResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ViewerControllerPixListResponse, _impl_._has_bits_);
  static const ::osirixgrpc::Status& status(const ViewerControllerPixListResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osirixgrpc::Status& ViewerControllerPixListResponse::_Internal::status(const ViewerControllerPixListResponse* msg) {
  return *msg->_impl_.status_;
}
void ViewerControllerPixListResponse::clear_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void ViewerControllerPixListResponse::clear_pix() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pix_.Clear();
}
ViewerControllerPixListResponse::ViewerControllerPixListResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerPixListResponse)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerPixListResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        pix_{visibility, arena, from.pix_} {}

ViewerControllerPixListResponse::ViewerControllerPixListResponse(
    ::google::protobuf::Arena* arena,
    const ViewerControllerPixListResponse& from)
    : ::google::protobuf::Message(arena) {
  ViewerControllerPixListResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::osirixgrpc::Status>(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerPixListResponse)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerPixListResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        pix_{visibility, arena} {}

inline void ViewerControllerPixListResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
ViewerControllerPixListResponse::~ViewerControllerPixListResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerPixListResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ViewerControllerPixListResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.status_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ViewerControllerPixListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerPixListResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.pix_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ViewerControllerPixListResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> ViewerControllerPixListResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ViewerControllerPixListResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ViewerControllerPixListResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .osirixgrpc.DCMPix pix = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(ViewerControllerPixListResponse, _impl_.pix_)}},
    // .osirixgrpc.Status status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerPixListResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osirixgrpc.Status status = 1;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerPixListResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .osirixgrpc.DCMPix pix = 2;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerPixListResponse, _impl_.pix_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::Status>()},
    {::_pbi::TcParser::GetTable<::osirixgrpc::DCMPix>()},
  }}, {{
  }},
};

::uint8_t* ViewerControllerPixListResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerPixListResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // repeated .osirixgrpc.DCMPix pix = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_pix_size()); i < n; i++) {
    const auto& repfield = this->_internal_pix().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerPixListResponse)
  return target;
}

::size_t ViewerControllerPixListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerPixListResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .osirixgrpc.DCMPix pix = 2;
  total_size += 1UL * this->_internal_pix_size();
  for (const auto& msg : this->_internal_pix()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .osirixgrpc.Status status = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.status_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ViewerControllerPixListResponse::_class_data_ = {
    ViewerControllerPixListResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ViewerControllerPixListResponse::GetClassData() const {
  return &_class_data_;
}

void ViewerControllerPixListResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ViewerControllerPixListResponse*>(&to_msg);
  auto& from = static_cast<const ViewerControllerPixListResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerPixListResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_pix()->MergeFrom(
      from._internal_pix());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_status()->::osirixgrpc::Status::MergeFrom(
        from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ViewerControllerPixListResponse::CopyFrom(const ViewerControllerPixListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerPixListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ViewerControllerPixListResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ViewerControllerPixListResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ViewerControllerPixListResponse::InternalSwap(ViewerControllerPixListResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.pix_.InternalSwap(&other->_impl_.pix_);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata ViewerControllerPixListResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_viewercontroller_2eproto_getter, &descriptor_table_viewercontroller_2eproto_once,
      file_level_metadata_viewercontroller_2eproto[0]);
}
// ===================================================================

class ViewerControllerROIListResponse_ROISlice::_Internal {
 public:
};

void ViewerControllerROIListResponse_ROISlice::clear_rois() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rois_.Clear();
}
ViewerControllerROIListResponse_ROISlice::ViewerControllerROIListResponse_ROISlice(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerROIListResponse.ROISlice)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerROIListResponse_ROISlice::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : rois_{visibility, arena, from.rois_},
        _cached_size_{0} {}

ViewerControllerROIListResponse_ROISlice::ViewerControllerROIListResponse_ROISlice(
    ::google::protobuf::Arena* arena,
    const ViewerControllerROIListResponse_ROISlice& from)
    : ::google::protobuf::Message(arena) {
  ViewerControllerROIListResponse_ROISlice* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerROIListResponse.ROISlice)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerROIListResponse_ROISlice::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : rois_{visibility, arena},
        _cached_size_{0} {}

inline void ViewerControllerROIListResponse_ROISlice::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ViewerControllerROIListResponse_ROISlice::~ViewerControllerROIListResponse_ROISlice() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerROIListResponse.ROISlice)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ViewerControllerROIListResponse_ROISlice::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ViewerControllerROIListResponse_ROISlice::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerROIListResponse.ROISlice)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rois_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ViewerControllerROIListResponse_ROISlice::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ViewerControllerROIListResponse_ROISlice::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ViewerControllerROIListResponse_ROISlice_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .osirixgrpc.ROI rois = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerROIListResponse_ROISlice, _impl_.rois_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .osirixgrpc.ROI rois = 1;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerROIListResponse_ROISlice, _impl_.rois_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::ROI>()},
  }}, {{
  }},
};

::uint8_t* ViewerControllerROIListResponse_ROISlice::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerROIListResponse.ROISlice)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .osirixgrpc.ROI rois = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_rois_size()); i < n; i++) {
    const auto& repfield = this->_internal_rois().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerROIListResponse.ROISlice)
  return target;
}

::size_t ViewerControllerROIListResponse_ROISlice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerROIListResponse.ROISlice)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .osirixgrpc.ROI rois = 1;
  total_size += 1UL * this->_internal_rois_size();
  for (const auto& msg : this->_internal_rois()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ViewerControllerROIListResponse_ROISlice::_class_data_ = {
    ViewerControllerROIListResponse_ROISlice::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ViewerControllerROIListResponse_ROISlice::GetClassData() const {
  return &_class_data_;
}

void ViewerControllerROIListResponse_ROISlice::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ViewerControllerROIListResponse_ROISlice*>(&to_msg);
  auto& from = static_cast<const ViewerControllerROIListResponse_ROISlice&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerROIListResponse.ROISlice)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_rois()->MergeFrom(
      from._internal_rois());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ViewerControllerROIListResponse_ROISlice::CopyFrom(const ViewerControllerROIListResponse_ROISlice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerROIListResponse.ROISlice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ViewerControllerROIListResponse_ROISlice::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ViewerControllerROIListResponse_ROISlice::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ViewerControllerROIListResponse_ROISlice::InternalSwap(ViewerControllerROIListResponse_ROISlice* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.rois_.InternalSwap(&other->_impl_.rois_);
}

::google::protobuf::Metadata ViewerControllerROIListResponse_ROISlice::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_viewercontroller_2eproto_getter, &descriptor_table_viewercontroller_2eproto_once,
      file_level_metadata_viewercontroller_2eproto[1]);
}
// ===================================================================

class ViewerControllerROIListResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ViewerControllerROIListResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ViewerControllerROIListResponse, _impl_._has_bits_);
  static const ::osirixgrpc::Status& status(const ViewerControllerROIListResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osirixgrpc::Status& ViewerControllerROIListResponse::_Internal::status(const ViewerControllerROIListResponse* msg) {
  return *msg->_impl_.status_;
}
void ViewerControllerROIListResponse::clear_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ViewerControllerROIListResponse::ViewerControllerROIListResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerROIListResponse)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerROIListResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        roi_slices_{visibility, arena, from.roi_slices_} {}

ViewerControllerROIListResponse::ViewerControllerROIListResponse(
    ::google::protobuf::Arena* arena,
    const ViewerControllerROIListResponse& from)
    : ::google::protobuf::Message(arena) {
  ViewerControllerROIListResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::osirixgrpc::Status>(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerROIListResponse)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerROIListResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        roi_slices_{visibility, arena} {}

inline void ViewerControllerROIListResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
ViewerControllerROIListResponse::~ViewerControllerROIListResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerROIListResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ViewerControllerROIListResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.status_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ViewerControllerROIListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerROIListResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.roi_slices_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ViewerControllerROIListResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> ViewerControllerROIListResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ViewerControllerROIListResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ViewerControllerROIListResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .osirixgrpc.ViewerControllerROIListResponse.ROISlice roi_slices = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(ViewerControllerROIListResponse, _impl_.roi_slices_)}},
    // .osirixgrpc.Status status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerROIListResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osirixgrpc.Status status = 1;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerROIListResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .osirixgrpc.ViewerControllerROIListResponse.ROISlice roi_slices = 2;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerROIListResponse, _impl_.roi_slices_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::Status>()},
    {::_pbi::TcParser::GetTable<::osirixgrpc::ViewerControllerROIListResponse_ROISlice>()},
  }}, {{
  }},
};

::uint8_t* ViewerControllerROIListResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerROIListResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // repeated .osirixgrpc.ViewerControllerROIListResponse.ROISlice roi_slices = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_roi_slices_size()); i < n; i++) {
    const auto& repfield = this->_internal_roi_slices().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerROIListResponse)
  return target;
}

::size_t ViewerControllerROIListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerROIListResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .osirixgrpc.ViewerControllerROIListResponse.ROISlice roi_slices = 2;
  total_size += 1UL * this->_internal_roi_slices_size();
  for (const auto& msg : this->_internal_roi_slices()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .osirixgrpc.Status status = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.status_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ViewerControllerROIListResponse::_class_data_ = {
    ViewerControllerROIListResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ViewerControllerROIListResponse::GetClassData() const {
  return &_class_data_;
}

void ViewerControllerROIListResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ViewerControllerROIListResponse*>(&to_msg);
  auto& from = static_cast<const ViewerControllerROIListResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerROIListResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_roi_slices()->MergeFrom(
      from._internal_roi_slices());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_status()->::osirixgrpc::Status::MergeFrom(
        from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ViewerControllerROIListResponse::CopyFrom(const ViewerControllerROIListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerROIListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ViewerControllerROIListResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ViewerControllerROIListResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ViewerControllerROIListResponse::InternalSwap(ViewerControllerROIListResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.roi_slices_.InternalSwap(&other->_impl_.roi_slices_);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata ViewerControllerROIListResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_viewercontroller_2eproto_getter, &descriptor_table_viewercontroller_2eproto_once,
      file_level_metadata_viewercontroller_2eproto[2]);
}
// ===================================================================

class ViewerControllerNewROIResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ViewerControllerNewROIResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIResponse, _impl_._has_bits_);
  static const ::osirixgrpc::Status& status(const ViewerControllerNewROIResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::osirixgrpc::ROI& roi(const ViewerControllerNewROIResponse* msg);
  static void set_has_roi(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::osirixgrpc::Status& ViewerControllerNewROIResponse::_Internal::status(const ViewerControllerNewROIResponse* msg) {
  return *msg->_impl_.status_;
}
const ::osirixgrpc::ROI& ViewerControllerNewROIResponse::_Internal::roi(const ViewerControllerNewROIResponse* msg) {
  return *msg->_impl_.roi_;
}
void ViewerControllerNewROIResponse::clear_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void ViewerControllerNewROIResponse::clear_roi() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.roi_ != nullptr) _impl_.roi_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
ViewerControllerNewROIResponse::ViewerControllerNewROIResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerNewROIResponse)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerNewROIResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ViewerControllerNewROIResponse::ViewerControllerNewROIResponse(
    ::google::protobuf::Arena* arena,
    const ViewerControllerNewROIResponse& from)
    : ::google::protobuf::Message(arena) {
  ViewerControllerNewROIResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::osirixgrpc::Status>(arena, *from._impl_.status_)
                : nullptr;
  _impl_.roi_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::osirixgrpc::ROI>(arena, *from._impl_.roi_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerNewROIResponse)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerNewROIResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ViewerControllerNewROIResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, roi_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::roi_));
}
ViewerControllerNewROIResponse::~ViewerControllerNewROIResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerNewROIResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ViewerControllerNewROIResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.status_;
  delete _impl_.roi_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ViewerControllerNewROIResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerNewROIResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.roi_ != nullptr);
      _impl_.roi_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ViewerControllerNewROIResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> ViewerControllerNewROIResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ViewerControllerNewROIResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .osirixgrpc.ROI roi = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIResponse, _impl_.roi_)}},
    // .osirixgrpc.Status status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osirixgrpc.Status status = 1;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .osirixgrpc.ROI roi = 2;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIResponse, _impl_.roi_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::Status>()},
    {::_pbi::TcParser::GetTable<::osirixgrpc::ROI>()},
  }}, {{
  }},
};

::uint8_t* ViewerControllerNewROIResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerNewROIResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // .osirixgrpc.ROI roi = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::roi(this),
        _Internal::roi(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerNewROIResponse)
  return target;
}

::size_t ViewerControllerNewROIResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerNewROIResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .osirixgrpc.Status status = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.status_);
    }

    // .osirixgrpc.ROI roi = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.roi_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ViewerControllerNewROIResponse::_class_data_ = {
    ViewerControllerNewROIResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ViewerControllerNewROIResponse::GetClassData() const {
  return &_class_data_;
}

void ViewerControllerNewROIResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ViewerControllerNewROIResponse*>(&to_msg);
  auto& from = static_cast<const ViewerControllerNewROIResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerNewROIResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_status()->::osirixgrpc::Status::MergeFrom(
          from._internal_status());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_roi()->::osirixgrpc::ROI::MergeFrom(
          from._internal_roi());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ViewerControllerNewROIResponse::CopyFrom(const ViewerControllerNewROIResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerNewROIResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ViewerControllerNewROIResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ViewerControllerNewROIResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ViewerControllerNewROIResponse::InternalSwap(ViewerControllerNewROIResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIResponse, _impl_.roi_)
      + sizeof(ViewerControllerNewROIResponse::_impl_.roi_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIResponse, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata ViewerControllerNewROIResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_viewercontroller_2eproto_getter, &descriptor_table_viewercontroller_2eproto_once,
      file_level_metadata_viewercontroller_2eproto[3]);
}
// ===================================================================

class ViewerControllerCurDCMResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ViewerControllerCurDCMResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ViewerControllerCurDCMResponse, _impl_._has_bits_);
  static const ::osirixgrpc::Status& status(const ViewerControllerCurDCMResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::osirixgrpc::DCMPix& pix(const ViewerControllerCurDCMResponse* msg);
  static void set_has_pix(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::osirixgrpc::Status& ViewerControllerCurDCMResponse::_Internal::status(const ViewerControllerCurDCMResponse* msg) {
  return *msg->_impl_.status_;
}
const ::osirixgrpc::DCMPix& ViewerControllerCurDCMResponse::_Internal::pix(const ViewerControllerCurDCMResponse* msg) {
  return *msg->_impl_.pix_;
}
void ViewerControllerCurDCMResponse::clear_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void ViewerControllerCurDCMResponse::clear_pix() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.pix_ != nullptr) _impl_.pix_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
ViewerControllerCurDCMResponse::ViewerControllerCurDCMResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerCurDCMResponse)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerCurDCMResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ViewerControllerCurDCMResponse::ViewerControllerCurDCMResponse(
    ::google::protobuf::Arena* arena,
    const ViewerControllerCurDCMResponse& from)
    : ::google::protobuf::Message(arena) {
  ViewerControllerCurDCMResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::osirixgrpc::Status>(arena, *from._impl_.status_)
                : nullptr;
  _impl_.pix_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::osirixgrpc::DCMPix>(arena, *from._impl_.pix_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerCurDCMResponse)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerCurDCMResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ViewerControllerCurDCMResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, pix_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::pix_));
}
ViewerControllerCurDCMResponse::~ViewerControllerCurDCMResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerCurDCMResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ViewerControllerCurDCMResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.status_;
  delete _impl_.pix_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ViewerControllerCurDCMResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerCurDCMResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.pix_ != nullptr);
      _impl_.pix_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ViewerControllerCurDCMResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> ViewerControllerCurDCMResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ViewerControllerCurDCMResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ViewerControllerCurDCMResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .osirixgrpc.DCMPix pix = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(ViewerControllerCurDCMResponse, _impl_.pix_)}},
    // .osirixgrpc.Status status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerCurDCMResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osirixgrpc.Status status = 1;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerCurDCMResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .osirixgrpc.DCMPix pix = 2;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerCurDCMResponse, _impl_.pix_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::Status>()},
    {::_pbi::TcParser::GetTable<::osirixgrpc::DCMPix>()},
  }}, {{
  }},
};

::uint8_t* ViewerControllerCurDCMResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerCurDCMResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // .osirixgrpc.DCMPix pix = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::pix(this),
        _Internal::pix(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerCurDCMResponse)
  return target;
}

::size_t ViewerControllerCurDCMResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerCurDCMResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .osirixgrpc.Status status = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.status_);
    }

    // .osirixgrpc.DCMPix pix = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.pix_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ViewerControllerCurDCMResponse::_class_data_ = {
    ViewerControllerCurDCMResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ViewerControllerCurDCMResponse::GetClassData() const {
  return &_class_data_;
}

void ViewerControllerCurDCMResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ViewerControllerCurDCMResponse*>(&to_msg);
  auto& from = static_cast<const ViewerControllerCurDCMResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerCurDCMResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_status()->::osirixgrpc::Status::MergeFrom(
          from._internal_status());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_pix()->::osirixgrpc::DCMPix::MergeFrom(
          from._internal_pix());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ViewerControllerCurDCMResponse::CopyFrom(const ViewerControllerCurDCMResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerCurDCMResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ViewerControllerCurDCMResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ViewerControllerCurDCMResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ViewerControllerCurDCMResponse::InternalSwap(ViewerControllerCurDCMResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerCurDCMResponse, _impl_.pix_)
      + sizeof(ViewerControllerCurDCMResponse::_impl_.pix_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerCurDCMResponse, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata ViewerControllerCurDCMResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_viewercontroller_2eproto_getter, &descriptor_table_viewercontroller_2eproto_once,
      file_level_metadata_viewercontroller_2eproto[4]);
}
// ===================================================================

class ViewerControllerROIsWithNameResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ViewerControllerROIsWithNameResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ViewerControllerROIsWithNameResponse, _impl_._has_bits_);
  static const ::osirixgrpc::Status& status(const ViewerControllerROIsWithNameResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osirixgrpc::Status& ViewerControllerROIsWithNameResponse::_Internal::status(const ViewerControllerROIsWithNameResponse* msg) {
  return *msg->_impl_.status_;
}
void ViewerControllerROIsWithNameResponse::clear_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void ViewerControllerROIsWithNameResponse::clear_rois() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rois_.Clear();
}
ViewerControllerROIsWithNameResponse::ViewerControllerROIsWithNameResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerROIsWithNameResponse)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerROIsWithNameResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        rois_{visibility, arena, from.rois_} {}

ViewerControllerROIsWithNameResponse::ViewerControllerROIsWithNameResponse(
    ::google::protobuf::Arena* arena,
    const ViewerControllerROIsWithNameResponse& from)
    : ::google::protobuf::Message(arena) {
  ViewerControllerROIsWithNameResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::osirixgrpc::Status>(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerROIsWithNameResponse)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerROIsWithNameResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        rois_{visibility, arena} {}

inline void ViewerControllerROIsWithNameResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
ViewerControllerROIsWithNameResponse::~ViewerControllerROIsWithNameResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerROIsWithNameResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ViewerControllerROIsWithNameResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.status_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ViewerControllerROIsWithNameResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerROIsWithNameResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rois_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ViewerControllerROIsWithNameResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> ViewerControllerROIsWithNameResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ViewerControllerROIsWithNameResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ViewerControllerROIsWithNameResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .osirixgrpc.ROI rois = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(ViewerControllerROIsWithNameResponse, _impl_.rois_)}},
    // .osirixgrpc.Status status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerROIsWithNameResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osirixgrpc.Status status = 1;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerROIsWithNameResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .osirixgrpc.ROI rois = 2;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerROIsWithNameResponse, _impl_.rois_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::Status>()},
    {::_pbi::TcParser::GetTable<::osirixgrpc::ROI>()},
  }}, {{
  }},
};

::uint8_t* ViewerControllerROIsWithNameResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerROIsWithNameResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // repeated .osirixgrpc.ROI rois = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_rois_size()); i < n; i++) {
    const auto& repfield = this->_internal_rois().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerROIsWithNameResponse)
  return target;
}

::size_t ViewerControllerROIsWithNameResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerROIsWithNameResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .osirixgrpc.ROI rois = 2;
  total_size += 1UL * this->_internal_rois_size();
  for (const auto& msg : this->_internal_rois()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .osirixgrpc.Status status = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.status_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ViewerControllerROIsWithNameResponse::_class_data_ = {
    ViewerControllerROIsWithNameResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ViewerControllerROIsWithNameResponse::GetClassData() const {
  return &_class_data_;
}

void ViewerControllerROIsWithNameResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ViewerControllerROIsWithNameResponse*>(&to_msg);
  auto& from = static_cast<const ViewerControllerROIsWithNameResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerROIsWithNameResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_rois()->MergeFrom(
      from._internal_rois());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_status()->::osirixgrpc::Status::MergeFrom(
        from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ViewerControllerROIsWithNameResponse::CopyFrom(const ViewerControllerROIsWithNameResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerROIsWithNameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ViewerControllerROIsWithNameResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ViewerControllerROIsWithNameResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ViewerControllerROIsWithNameResponse::InternalSwap(ViewerControllerROIsWithNameResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.rois_.InternalSwap(&other->_impl_.rois_);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata ViewerControllerROIsWithNameResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_viewercontroller_2eproto_getter, &descriptor_table_viewercontroller_2eproto_once,
      file_level_metadata_viewercontroller_2eproto[5]);
}
// ===================================================================

class ViewerControllerSelectedROIsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ViewerControllerSelectedROIsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ViewerControllerSelectedROIsResponse, _impl_._has_bits_);
  static const ::osirixgrpc::Status& status(const ViewerControllerSelectedROIsResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osirixgrpc::Status& ViewerControllerSelectedROIsResponse::_Internal::status(const ViewerControllerSelectedROIsResponse* msg) {
  return *msg->_impl_.status_;
}
void ViewerControllerSelectedROIsResponse::clear_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void ViewerControllerSelectedROIsResponse::clear_rois() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rois_.Clear();
}
ViewerControllerSelectedROIsResponse::ViewerControllerSelectedROIsResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerSelectedROIsResponse)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerSelectedROIsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        rois_{visibility, arena, from.rois_} {}

ViewerControllerSelectedROIsResponse::ViewerControllerSelectedROIsResponse(
    ::google::protobuf::Arena* arena,
    const ViewerControllerSelectedROIsResponse& from)
    : ::google::protobuf::Message(arena) {
  ViewerControllerSelectedROIsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::osirixgrpc::Status>(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerSelectedROIsResponse)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerSelectedROIsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        rois_{visibility, arena} {}

inline void ViewerControllerSelectedROIsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
ViewerControllerSelectedROIsResponse::~ViewerControllerSelectedROIsResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerSelectedROIsResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ViewerControllerSelectedROIsResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.status_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ViewerControllerSelectedROIsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerSelectedROIsResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rois_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ViewerControllerSelectedROIsResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> ViewerControllerSelectedROIsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ViewerControllerSelectedROIsResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ViewerControllerSelectedROIsResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .osirixgrpc.ROI rois = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(ViewerControllerSelectedROIsResponse, _impl_.rois_)}},
    // .osirixgrpc.Status status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerSelectedROIsResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osirixgrpc.Status status = 1;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerSelectedROIsResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .osirixgrpc.ROI rois = 2;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerSelectedROIsResponse, _impl_.rois_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::Status>()},
    {::_pbi::TcParser::GetTable<::osirixgrpc::ROI>()},
  }}, {{
  }},
};

::uint8_t* ViewerControllerSelectedROIsResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerSelectedROIsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // repeated .osirixgrpc.ROI rois = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_rois_size()); i < n; i++) {
    const auto& repfield = this->_internal_rois().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerSelectedROIsResponse)
  return target;
}

::size_t ViewerControllerSelectedROIsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerSelectedROIsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .osirixgrpc.ROI rois = 2;
  total_size += 1UL * this->_internal_rois_size();
  for (const auto& msg : this->_internal_rois()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .osirixgrpc.Status status = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.status_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ViewerControllerSelectedROIsResponse::_class_data_ = {
    ViewerControllerSelectedROIsResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ViewerControllerSelectedROIsResponse::GetClassData() const {
  return &_class_data_;
}

void ViewerControllerSelectedROIsResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ViewerControllerSelectedROIsResponse*>(&to_msg);
  auto& from = static_cast<const ViewerControllerSelectedROIsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerSelectedROIsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_rois()->MergeFrom(
      from._internal_rois());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_status()->::osirixgrpc::Status::MergeFrom(
        from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ViewerControllerSelectedROIsResponse::CopyFrom(const ViewerControllerSelectedROIsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerSelectedROIsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ViewerControllerSelectedROIsResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ViewerControllerSelectedROIsResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ViewerControllerSelectedROIsResponse::InternalSwap(ViewerControllerSelectedROIsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.rois_.InternalSwap(&other->_impl_.rois_);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata ViewerControllerSelectedROIsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_viewercontroller_2eproto_getter, &descriptor_table_viewercontroller_2eproto_once,
      file_level_metadata_viewercontroller_2eproto[6]);
}
// ===================================================================

class ViewerControllerIsDataVolumicResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ViewerControllerIsDataVolumicResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ViewerControllerIsDataVolumicResponse, _impl_._has_bits_);
  static const ::osirixgrpc::Status& status(const ViewerControllerIsDataVolumicResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osirixgrpc::Status& ViewerControllerIsDataVolumicResponse::_Internal::status(const ViewerControllerIsDataVolumicResponse* msg) {
  return *msg->_impl_.status_;
}
void ViewerControllerIsDataVolumicResponse::clear_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ViewerControllerIsDataVolumicResponse::ViewerControllerIsDataVolumicResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerIsDataVolumicResponse)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerIsDataVolumicResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ViewerControllerIsDataVolumicResponse::ViewerControllerIsDataVolumicResponse(
    ::google::protobuf::Arena* arena,
    const ViewerControllerIsDataVolumicResponse& from)
    : ::google::protobuf::Message(arena) {
  ViewerControllerIsDataVolumicResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::osirixgrpc::Status>(arena, *from._impl_.status_)
                : nullptr;
  _impl_.is_volumic_ = from._impl_.is_volumic_;

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerIsDataVolumicResponse)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerIsDataVolumicResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ViewerControllerIsDataVolumicResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, is_volumic_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::is_volumic_));
}
ViewerControllerIsDataVolumicResponse::~ViewerControllerIsDataVolumicResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerIsDataVolumicResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ViewerControllerIsDataVolumicResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.status_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ViewerControllerIsDataVolumicResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerIsDataVolumicResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_.is_volumic_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ViewerControllerIsDataVolumicResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ViewerControllerIsDataVolumicResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ViewerControllerIsDataVolumicResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ViewerControllerIsDataVolumicResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool is_volumic = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ViewerControllerIsDataVolumicResponse, _impl_.is_volumic_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerIsDataVolumicResponse, _impl_.is_volumic_)}},
    // .osirixgrpc.Status status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerIsDataVolumicResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osirixgrpc.Status status = 1;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerIsDataVolumicResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool is_volumic = 2;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerIsDataVolumicResponse, _impl_.is_volumic_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::Status>()},
  }}, {{
  }},
};

::uint8_t* ViewerControllerIsDataVolumicResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerIsDataVolumicResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // bool is_volumic = 2;
  if (this->_internal_is_volumic() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_is_volumic(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerIsDataVolumicResponse)
  return target;
}

::size_t ViewerControllerIsDataVolumicResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerIsDataVolumicResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.status_);
  }

  // bool is_volumic = 2;
  if (this->_internal_is_volumic() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ViewerControllerIsDataVolumicResponse::_class_data_ = {
    ViewerControllerIsDataVolumicResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ViewerControllerIsDataVolumicResponse::GetClassData() const {
  return &_class_data_;
}

void ViewerControllerIsDataVolumicResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ViewerControllerIsDataVolumicResponse*>(&to_msg);
  auto& from = static_cast<const ViewerControllerIsDataVolumicResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerIsDataVolumicResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_status()->::osirixgrpc::Status::MergeFrom(
        from._internal_status());
  }
  if (from._internal_is_volumic() != 0) {
    _this->_internal_set_is_volumic(from._internal_is_volumic());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ViewerControllerIsDataVolumicResponse::CopyFrom(const ViewerControllerIsDataVolumicResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerIsDataVolumicResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ViewerControllerIsDataVolumicResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ViewerControllerIsDataVolumicResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ViewerControllerIsDataVolumicResponse::InternalSwap(ViewerControllerIsDataVolumicResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerIsDataVolumicResponse, _impl_.is_volumic_)
      + sizeof(ViewerControllerIsDataVolumicResponse::_impl_.is_volumic_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerIsDataVolumicResponse, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata ViewerControllerIsDataVolumicResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_viewercontroller_2eproto_getter, &descriptor_table_viewercontroller_2eproto_once,
      file_level_metadata_viewercontroller_2eproto[7]);
}
// ===================================================================

class ViewerControllerBlendingControllerResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ViewerControllerBlendingControllerResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ViewerControllerBlendingControllerResponse, _impl_._has_bits_);
  static const ::osirixgrpc::Status& status(const ViewerControllerBlendingControllerResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::osirixgrpc::ViewerController& blending_viewer(const ViewerControllerBlendingControllerResponse* msg);
  static void set_has_blending_viewer(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::osirixgrpc::Status& ViewerControllerBlendingControllerResponse::_Internal::status(const ViewerControllerBlendingControllerResponse* msg) {
  return *msg->_impl_.status_;
}
const ::osirixgrpc::ViewerController& ViewerControllerBlendingControllerResponse::_Internal::blending_viewer(const ViewerControllerBlendingControllerResponse* msg) {
  return *msg->_impl_.blending_viewer_;
}
void ViewerControllerBlendingControllerResponse::clear_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void ViewerControllerBlendingControllerResponse::clear_blending_viewer() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.blending_viewer_ != nullptr) _impl_.blending_viewer_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
ViewerControllerBlendingControllerResponse::ViewerControllerBlendingControllerResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerBlendingControllerResponse)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerBlendingControllerResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ViewerControllerBlendingControllerResponse::ViewerControllerBlendingControllerResponse(
    ::google::protobuf::Arena* arena,
    const ViewerControllerBlendingControllerResponse& from)
    : ::google::protobuf::Message(arena) {
  ViewerControllerBlendingControllerResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::osirixgrpc::Status>(arena, *from._impl_.status_)
                : nullptr;
  _impl_.blending_viewer_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::osirixgrpc::ViewerController>(arena, *from._impl_.blending_viewer_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerBlendingControllerResponse)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerBlendingControllerResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ViewerControllerBlendingControllerResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, blending_viewer_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::blending_viewer_));
}
ViewerControllerBlendingControllerResponse::~ViewerControllerBlendingControllerResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerBlendingControllerResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ViewerControllerBlendingControllerResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.status_;
  delete _impl_.blending_viewer_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ViewerControllerBlendingControllerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerBlendingControllerResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.blending_viewer_ != nullptr);
      _impl_.blending_viewer_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ViewerControllerBlendingControllerResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> ViewerControllerBlendingControllerResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ViewerControllerBlendingControllerResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ViewerControllerBlendingControllerResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .osirixgrpc.ViewerController blending_viewer = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(ViewerControllerBlendingControllerResponse, _impl_.blending_viewer_)}},
    // .osirixgrpc.Status status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerBlendingControllerResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osirixgrpc.Status status = 1;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerBlendingControllerResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .osirixgrpc.ViewerController blending_viewer = 2;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerBlendingControllerResponse, _impl_.blending_viewer_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::Status>()},
    {::_pbi::TcParser::GetTable<::osirixgrpc::ViewerController>()},
  }}, {{
  }},
};

::uint8_t* ViewerControllerBlendingControllerResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerBlendingControllerResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // .osirixgrpc.ViewerController blending_viewer = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::blending_viewer(this),
        _Internal::blending_viewer(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerBlendingControllerResponse)
  return target;
}

::size_t ViewerControllerBlendingControllerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerBlendingControllerResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .osirixgrpc.Status status = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.status_);
    }

    // .osirixgrpc.ViewerController blending_viewer = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.blending_viewer_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ViewerControllerBlendingControllerResponse::_class_data_ = {
    ViewerControllerBlendingControllerResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ViewerControllerBlendingControllerResponse::GetClassData() const {
  return &_class_data_;
}

void ViewerControllerBlendingControllerResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ViewerControllerBlendingControllerResponse*>(&to_msg);
  auto& from = static_cast<const ViewerControllerBlendingControllerResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerBlendingControllerResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_status()->::osirixgrpc::Status::MergeFrom(
          from._internal_status());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_blending_viewer()->::osirixgrpc::ViewerController::MergeFrom(
          from._internal_blending_viewer());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ViewerControllerBlendingControllerResponse::CopyFrom(const ViewerControllerBlendingControllerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerBlendingControllerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ViewerControllerBlendingControllerResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ViewerControllerBlendingControllerResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ViewerControllerBlendingControllerResponse::InternalSwap(ViewerControllerBlendingControllerResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerBlendingControllerResponse, _impl_.blending_viewer_)
      + sizeof(ViewerControllerBlendingControllerResponse::_impl_.blending_viewer_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerBlendingControllerResponse, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata ViewerControllerBlendingControllerResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_viewercontroller_2eproto_getter, &descriptor_table_viewercontroller_2eproto_once,
      file_level_metadata_viewercontroller_2eproto[8]);
}
// ===================================================================

class ViewerControllerVRControllersResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ViewerControllerVRControllersResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ViewerControllerVRControllersResponse, _impl_._has_bits_);
  static const ::osirixgrpc::Status& status(const ViewerControllerVRControllersResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osirixgrpc::Status& ViewerControllerVRControllersResponse::_Internal::status(const ViewerControllerVRControllersResponse* msg) {
  return *msg->_impl_.status_;
}
void ViewerControllerVRControllersResponse::clear_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void ViewerControllerVRControllersResponse::clear_vr_controllers() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.vr_controllers_.Clear();
}
ViewerControllerVRControllersResponse::ViewerControllerVRControllersResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerVRControllersResponse)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerVRControllersResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        vr_controllers_{visibility, arena, from.vr_controllers_} {}

ViewerControllerVRControllersResponse::ViewerControllerVRControllersResponse(
    ::google::protobuf::Arena* arena,
    const ViewerControllerVRControllersResponse& from)
    : ::google::protobuf::Message(arena) {
  ViewerControllerVRControllersResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::osirixgrpc::Status>(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerVRControllersResponse)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerVRControllersResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        vr_controllers_{visibility, arena} {}

inline void ViewerControllerVRControllersResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
ViewerControllerVRControllersResponse::~ViewerControllerVRControllersResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerVRControllersResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ViewerControllerVRControllersResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.status_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ViewerControllerVRControllersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerVRControllersResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.vr_controllers_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ViewerControllerVRControllersResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> ViewerControllerVRControllersResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ViewerControllerVRControllersResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ViewerControllerVRControllersResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .osirixgrpc.VRController vr_controllers = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(ViewerControllerVRControllersResponse, _impl_.vr_controllers_)}},
    // .osirixgrpc.Status status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerVRControllersResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osirixgrpc.Status status = 1;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerVRControllersResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .osirixgrpc.VRController vr_controllers = 2;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerVRControllersResponse, _impl_.vr_controllers_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::Status>()},
    {::_pbi::TcParser::GetTable<::osirixgrpc::VRController>()},
  }}, {{
  }},
};

::uint8_t* ViewerControllerVRControllersResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerVRControllersResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // repeated .osirixgrpc.VRController vr_controllers = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_vr_controllers_size()); i < n; i++) {
    const auto& repfield = this->_internal_vr_controllers().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerVRControllersResponse)
  return target;
}

::size_t ViewerControllerVRControllersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerVRControllersResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .osirixgrpc.VRController vr_controllers = 2;
  total_size += 1UL * this->_internal_vr_controllers_size();
  for (const auto& msg : this->_internal_vr_controllers()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .osirixgrpc.Status status = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.status_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ViewerControllerVRControllersResponse::_class_data_ = {
    ViewerControllerVRControllersResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ViewerControllerVRControllersResponse::GetClassData() const {
  return &_class_data_;
}

void ViewerControllerVRControllersResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ViewerControllerVRControllersResponse*>(&to_msg);
  auto& from = static_cast<const ViewerControllerVRControllersResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerVRControllersResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_vr_controllers()->MergeFrom(
      from._internal_vr_controllers());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_status()->::osirixgrpc::Status::MergeFrom(
        from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ViewerControllerVRControllersResponse::CopyFrom(const ViewerControllerVRControllersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerVRControllersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ViewerControllerVRControllersResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ViewerControllerVRControllersResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ViewerControllerVRControllersResponse::InternalSwap(ViewerControllerVRControllersResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.vr_controllers_.InternalSwap(&other->_impl_.vr_controllers_);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata ViewerControllerVRControllersResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_viewercontroller_2eproto_getter, &descriptor_table_viewercontroller_2eproto_once,
      file_level_metadata_viewercontroller_2eproto[9]);
}
// ===================================================================

class ViewerControllerTitleResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ViewerControllerTitleResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ViewerControllerTitleResponse, _impl_._has_bits_);
  static const ::osirixgrpc::Status& status(const ViewerControllerTitleResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osirixgrpc::Status& ViewerControllerTitleResponse::_Internal::status(const ViewerControllerTitleResponse* msg) {
  return *msg->_impl_.status_;
}
void ViewerControllerTitleResponse::clear_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ViewerControllerTitleResponse::ViewerControllerTitleResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerTitleResponse)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerTitleResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        title_(arena, from.title_) {}

ViewerControllerTitleResponse::ViewerControllerTitleResponse(
    ::google::protobuf::Arena* arena,
    const ViewerControllerTitleResponse& from)
    : ::google::protobuf::Message(arena) {
  ViewerControllerTitleResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::osirixgrpc::Status>(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerTitleResponse)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerTitleResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        title_(arena) {}

inline void ViewerControllerTitleResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
ViewerControllerTitleResponse::~ViewerControllerTitleResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerTitleResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ViewerControllerTitleResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.title_.Destroy();
  delete _impl_.status_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ViewerControllerTitleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerTitleResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.title_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ViewerControllerTitleResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 54, 2> ViewerControllerTitleResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ViewerControllerTitleResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ViewerControllerTitleResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string title = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerTitleResponse, _impl_.title_)}},
    // .osirixgrpc.Status status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerTitleResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osirixgrpc.Status status = 1;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerTitleResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string title = 2;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerTitleResponse, _impl_.title_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::Status>()},
  }}, {{
    "\50\0\5\0\0\0\0\0"
    "osirixgrpc.ViewerControllerTitleResponse"
    "title"
  }},
};

::uint8_t* ViewerControllerTitleResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerTitleResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // string title = 2;
  if (!this->_internal_title().empty()) {
    const std::string& _s = this->_internal_title();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "osirixgrpc.ViewerControllerTitleResponse.title");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerTitleResponse)
  return target;
}

::size_t ViewerControllerTitleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerTitleResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string title = 2;
  if (!this->_internal_title().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_title());
  }

  // .osirixgrpc.Status status = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.status_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ViewerControllerTitleResponse::_class_data_ = {
    ViewerControllerTitleResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ViewerControllerTitleResponse::GetClassData() const {
  return &_class_data_;
}

void ViewerControllerTitleResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ViewerControllerTitleResponse*>(&to_msg);
  auto& from = static_cast<const ViewerControllerTitleResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerTitleResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_status()->::osirixgrpc::Status::MergeFrom(
        from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ViewerControllerTitleResponse::CopyFrom(const ViewerControllerTitleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerTitleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ViewerControllerTitleResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ViewerControllerTitleResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ViewerControllerTitleResponse::InternalSwap(ViewerControllerTitleResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata ViewerControllerTitleResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_viewercontroller_2eproto_getter, &descriptor_table_viewercontroller_2eproto_once,
      file_level_metadata_viewercontroller_2eproto[10]);
}
// ===================================================================

class ViewerControllerModalityResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ViewerControllerModalityResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ViewerControllerModalityResponse, _impl_._has_bits_);
  static const ::osirixgrpc::Status& status(const ViewerControllerModalityResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osirixgrpc::Status& ViewerControllerModalityResponse::_Internal::status(const ViewerControllerModalityResponse* msg) {
  return *msg->_impl_.status_;
}
void ViewerControllerModalityResponse::clear_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ViewerControllerModalityResponse::ViewerControllerModalityResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerModalityResponse)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerModalityResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        modality_(arena, from.modality_) {}

ViewerControllerModalityResponse::ViewerControllerModalityResponse(
    ::google::protobuf::Arena* arena,
    const ViewerControllerModalityResponse& from)
    : ::google::protobuf::Message(arena) {
  ViewerControllerModalityResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::osirixgrpc::Status>(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerModalityResponse)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerModalityResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        modality_(arena) {}

inline void ViewerControllerModalityResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
ViewerControllerModalityResponse::~ViewerControllerModalityResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerModalityResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ViewerControllerModalityResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.modality_.Destroy();
  delete _impl_.status_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ViewerControllerModalityResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerModalityResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.modality_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ViewerControllerModalityResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 60, 2> ViewerControllerModalityResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ViewerControllerModalityResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ViewerControllerModalityResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string modality = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerModalityResponse, _impl_.modality_)}},
    // .osirixgrpc.Status status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerModalityResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osirixgrpc.Status status = 1;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerModalityResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string modality = 2;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerModalityResponse, _impl_.modality_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::Status>()},
  }}, {{
    "\53\0\10\0\0\0\0\0"
    "osirixgrpc.ViewerControllerModalityResponse"
    "modality"
  }},
};

::uint8_t* ViewerControllerModalityResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerModalityResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // string modality = 2;
  if (!this->_internal_modality().empty()) {
    const std::string& _s = this->_internal_modality();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "osirixgrpc.ViewerControllerModalityResponse.modality");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerModalityResponse)
  return target;
}

::size_t ViewerControllerModalityResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerModalityResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string modality = 2;
  if (!this->_internal_modality().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_modality());
  }

  // .osirixgrpc.Status status = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.status_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ViewerControllerModalityResponse::_class_data_ = {
    ViewerControllerModalityResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ViewerControllerModalityResponse::GetClassData() const {
  return &_class_data_;
}

void ViewerControllerModalityResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ViewerControllerModalityResponse*>(&to_msg);
  auto& from = static_cast<const ViewerControllerModalityResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerModalityResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_modality().empty()) {
    _this->_internal_set_modality(from._internal_modality());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_status()->::osirixgrpc::Status::MergeFrom(
        from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ViewerControllerModalityResponse::CopyFrom(const ViewerControllerModalityResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerModalityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ViewerControllerModalityResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ViewerControllerModalityResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ViewerControllerModalityResponse::InternalSwap(ViewerControllerModalityResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.modality_, &other->_impl_.modality_, arena);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata ViewerControllerModalityResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_viewercontroller_2eproto_getter, &descriptor_table_viewercontroller_2eproto_once,
      file_level_metadata_viewercontroller_2eproto[11]);
}
// ===================================================================

class ViewerControllerMovieIdxResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ViewerControllerMovieIdxResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ViewerControllerMovieIdxResponse, _impl_._has_bits_);
  static const ::osirixgrpc::Status& status(const ViewerControllerMovieIdxResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osirixgrpc::Status& ViewerControllerMovieIdxResponse::_Internal::status(const ViewerControllerMovieIdxResponse* msg) {
  return *msg->_impl_.status_;
}
void ViewerControllerMovieIdxResponse::clear_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ViewerControllerMovieIdxResponse::ViewerControllerMovieIdxResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerMovieIdxResponse)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerMovieIdxResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ViewerControllerMovieIdxResponse::ViewerControllerMovieIdxResponse(
    ::google::protobuf::Arena* arena,
    const ViewerControllerMovieIdxResponse& from)
    : ::google::protobuf::Message(arena) {
  ViewerControllerMovieIdxResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::osirixgrpc::Status>(arena, *from._impl_.status_)
                : nullptr;
  _impl_.movie_idx_ = from._impl_.movie_idx_;

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerMovieIdxResponse)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerMovieIdxResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ViewerControllerMovieIdxResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, movie_idx_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::movie_idx_));
}
ViewerControllerMovieIdxResponse::~ViewerControllerMovieIdxResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerMovieIdxResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ViewerControllerMovieIdxResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.status_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ViewerControllerMovieIdxResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerMovieIdxResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_.movie_idx_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ViewerControllerMovieIdxResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ViewerControllerMovieIdxResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ViewerControllerMovieIdxResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ViewerControllerMovieIdxResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 movie_idx = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ViewerControllerMovieIdxResponse, _impl_.movie_idx_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerMovieIdxResponse, _impl_.movie_idx_)}},
    // .osirixgrpc.Status status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerMovieIdxResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osirixgrpc.Status status = 1;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerMovieIdxResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 movie_idx = 2;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerMovieIdxResponse, _impl_.movie_idx_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::Status>()},
  }}, {{
  }},
};

::uint8_t* ViewerControllerMovieIdxResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerMovieIdxResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // int32 movie_idx = 2;
  if (this->_internal_movie_idx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_movie_idx(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerMovieIdxResponse)
  return target;
}

::size_t ViewerControllerMovieIdxResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerMovieIdxResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.status_);
  }

  // int32 movie_idx = 2;
  if (this->_internal_movie_idx() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_movie_idx());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ViewerControllerMovieIdxResponse::_class_data_ = {
    ViewerControllerMovieIdxResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ViewerControllerMovieIdxResponse::GetClassData() const {
  return &_class_data_;
}

void ViewerControllerMovieIdxResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ViewerControllerMovieIdxResponse*>(&to_msg);
  auto& from = static_cast<const ViewerControllerMovieIdxResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerMovieIdxResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_status()->::osirixgrpc::Status::MergeFrom(
        from._internal_status());
  }
  if (from._internal_movie_idx() != 0) {
    _this->_internal_set_movie_idx(from._internal_movie_idx());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ViewerControllerMovieIdxResponse::CopyFrom(const ViewerControllerMovieIdxResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerMovieIdxResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ViewerControllerMovieIdxResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ViewerControllerMovieIdxResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ViewerControllerMovieIdxResponse::InternalSwap(ViewerControllerMovieIdxResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerMovieIdxResponse, _impl_.movie_idx_)
      + sizeof(ViewerControllerMovieIdxResponse::_impl_.movie_idx_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerMovieIdxResponse, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata ViewerControllerMovieIdxResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_viewercontroller_2eproto_getter, &descriptor_table_viewercontroller_2eproto_once,
      file_level_metadata_viewercontroller_2eproto[12]);
}
// ===================================================================

class ViewerControllerMaxMovieIdxResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ViewerControllerMaxMovieIdxResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ViewerControllerMaxMovieIdxResponse, _impl_._has_bits_);
  static const ::osirixgrpc::Status& status(const ViewerControllerMaxMovieIdxResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osirixgrpc::Status& ViewerControllerMaxMovieIdxResponse::_Internal::status(const ViewerControllerMaxMovieIdxResponse* msg) {
  return *msg->_impl_.status_;
}
void ViewerControllerMaxMovieIdxResponse::clear_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ViewerControllerMaxMovieIdxResponse::ViewerControllerMaxMovieIdxResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerMaxMovieIdxResponse)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerMaxMovieIdxResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ViewerControllerMaxMovieIdxResponse::ViewerControllerMaxMovieIdxResponse(
    ::google::protobuf::Arena* arena,
    const ViewerControllerMaxMovieIdxResponse& from)
    : ::google::protobuf::Message(arena) {
  ViewerControllerMaxMovieIdxResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::osirixgrpc::Status>(arena, *from._impl_.status_)
                : nullptr;
  _impl_.max_movie_idx_ = from._impl_.max_movie_idx_;

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerMaxMovieIdxResponse)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerMaxMovieIdxResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ViewerControllerMaxMovieIdxResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, max_movie_idx_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::max_movie_idx_));
}
ViewerControllerMaxMovieIdxResponse::~ViewerControllerMaxMovieIdxResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerMaxMovieIdxResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ViewerControllerMaxMovieIdxResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.status_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ViewerControllerMaxMovieIdxResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerMaxMovieIdxResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_.max_movie_idx_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ViewerControllerMaxMovieIdxResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ViewerControllerMaxMovieIdxResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ViewerControllerMaxMovieIdxResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ViewerControllerMaxMovieIdxResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 max_movie_idx = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ViewerControllerMaxMovieIdxResponse, _impl_.max_movie_idx_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerMaxMovieIdxResponse, _impl_.max_movie_idx_)}},
    // .osirixgrpc.Status status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerMaxMovieIdxResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osirixgrpc.Status status = 1;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerMaxMovieIdxResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 max_movie_idx = 2;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerMaxMovieIdxResponse, _impl_.max_movie_idx_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::Status>()},
  }}, {{
  }},
};

::uint8_t* ViewerControllerMaxMovieIdxResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerMaxMovieIdxResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // int32 max_movie_idx = 2;
  if (this->_internal_max_movie_idx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_max_movie_idx(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerMaxMovieIdxResponse)
  return target;
}

::size_t ViewerControllerMaxMovieIdxResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerMaxMovieIdxResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.status_);
  }

  // int32 max_movie_idx = 2;
  if (this->_internal_max_movie_idx() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_max_movie_idx());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ViewerControllerMaxMovieIdxResponse::_class_data_ = {
    ViewerControllerMaxMovieIdxResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ViewerControllerMaxMovieIdxResponse::GetClassData() const {
  return &_class_data_;
}

void ViewerControllerMaxMovieIdxResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ViewerControllerMaxMovieIdxResponse*>(&to_msg);
  auto& from = static_cast<const ViewerControllerMaxMovieIdxResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerMaxMovieIdxResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_status()->::osirixgrpc::Status::MergeFrom(
        from._internal_status());
  }
  if (from._internal_max_movie_idx() != 0) {
    _this->_internal_set_max_movie_idx(from._internal_max_movie_idx());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ViewerControllerMaxMovieIdxResponse::CopyFrom(const ViewerControllerMaxMovieIdxResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerMaxMovieIdxResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ViewerControllerMaxMovieIdxResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ViewerControllerMaxMovieIdxResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ViewerControllerMaxMovieIdxResponse::InternalSwap(ViewerControllerMaxMovieIdxResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerMaxMovieIdxResponse, _impl_.max_movie_idx_)
      + sizeof(ViewerControllerMaxMovieIdxResponse::_impl_.max_movie_idx_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerMaxMovieIdxResponse, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata ViewerControllerMaxMovieIdxResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_viewercontroller_2eproto_getter, &descriptor_table_viewercontroller_2eproto_once,
      file_level_metadata_viewercontroller_2eproto[13]);
}
// ===================================================================

class ViewerControllerIdxResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ViewerControllerIdxResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ViewerControllerIdxResponse, _impl_._has_bits_);
  static const ::osirixgrpc::Status& status(const ViewerControllerIdxResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osirixgrpc::Status& ViewerControllerIdxResponse::_Internal::status(const ViewerControllerIdxResponse* msg) {
  return *msg->_impl_.status_;
}
void ViewerControllerIdxResponse::clear_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ViewerControllerIdxResponse::ViewerControllerIdxResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerIdxResponse)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerIdxResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ViewerControllerIdxResponse::ViewerControllerIdxResponse(
    ::google::protobuf::Arena* arena,
    const ViewerControllerIdxResponse& from)
    : ::google::protobuf::Message(arena) {
  ViewerControllerIdxResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::osirixgrpc::Status>(arena, *from._impl_.status_)
                : nullptr;
  _impl_.idx_ = from._impl_.idx_;

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerIdxResponse)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerIdxResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ViewerControllerIdxResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, idx_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::idx_));
}
ViewerControllerIdxResponse::~ViewerControllerIdxResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerIdxResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ViewerControllerIdxResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.status_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ViewerControllerIdxResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerIdxResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_.idx_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ViewerControllerIdxResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ViewerControllerIdxResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ViewerControllerIdxResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ViewerControllerIdxResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 idx = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ViewerControllerIdxResponse, _impl_.idx_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerIdxResponse, _impl_.idx_)}},
    // .osirixgrpc.Status status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerIdxResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osirixgrpc.Status status = 1;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerIdxResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 idx = 2;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerIdxResponse, _impl_.idx_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::Status>()},
  }}, {{
  }},
};

::uint8_t* ViewerControllerIdxResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerIdxResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // int32 idx = 2;
  if (this->_internal_idx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_idx(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerIdxResponse)
  return target;
}

::size_t ViewerControllerIdxResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerIdxResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.status_);
  }

  // int32 idx = 2;
  if (this->_internal_idx() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_idx());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ViewerControllerIdxResponse::_class_data_ = {
    ViewerControllerIdxResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ViewerControllerIdxResponse::GetClassData() const {
  return &_class_data_;
}

void ViewerControllerIdxResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ViewerControllerIdxResponse*>(&to_msg);
  auto& from = static_cast<const ViewerControllerIdxResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerIdxResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_status()->::osirixgrpc::Status::MergeFrom(
        from._internal_status());
  }
  if (from._internal_idx() != 0) {
    _this->_internal_set_idx(from._internal_idx());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ViewerControllerIdxResponse::CopyFrom(const ViewerControllerIdxResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerIdxResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ViewerControllerIdxResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ViewerControllerIdxResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ViewerControllerIdxResponse::InternalSwap(ViewerControllerIdxResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerIdxResponse, _impl_.idx_)
      + sizeof(ViewerControllerIdxResponse::_impl_.idx_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerIdxResponse, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata ViewerControllerIdxResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_viewercontroller_2eproto_getter, &descriptor_table_viewercontroller_2eproto_once,
      file_level_metadata_viewercontroller_2eproto[14]);
}
// ===================================================================

class ViewerControllerWLWWResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ViewerControllerWLWWResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ViewerControllerWLWWResponse, _impl_._has_bits_);
  static const ::osirixgrpc::Status& status(const ViewerControllerWLWWResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osirixgrpc::Status& ViewerControllerWLWWResponse::_Internal::status(const ViewerControllerWLWWResponse* msg) {
  return *msg->_impl_.status_;
}
void ViewerControllerWLWWResponse::clear_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ViewerControllerWLWWResponse::ViewerControllerWLWWResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerWLWWResponse)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerWLWWResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ViewerControllerWLWWResponse::ViewerControllerWLWWResponse(
    ::google::protobuf::Arena* arena,
    const ViewerControllerWLWWResponse& from)
    : ::google::protobuf::Message(arena) {
  ViewerControllerWLWWResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::osirixgrpc::Status>(arena, *from._impl_.status_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, wl_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, wl_),
           offsetof(Impl_, ww_) -
               offsetof(Impl_, wl_) +
               sizeof(Impl_::ww_));

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerWLWWResponse)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerWLWWResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ViewerControllerWLWWResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, ww_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::ww_));
}
ViewerControllerWLWWResponse::~ViewerControllerWLWWResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerWLWWResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ViewerControllerWLWWResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.status_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ViewerControllerWLWWResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerWLWWResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  ::memset(&_impl_.wl_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.ww_) -
      reinterpret_cast<char*>(&_impl_.wl_)) + sizeof(_impl_.ww_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ViewerControllerWLWWResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> ViewerControllerWLWWResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ViewerControllerWLWWResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ViewerControllerWLWWResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .osirixgrpc.Status status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerWLWWResponse, _impl_.status_)}},
    // float wl = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerWLWWResponse, _impl_.wl_)}},
    // float ww = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerWLWWResponse, _impl_.ww_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osirixgrpc.Status status = 1;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerWLWWResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // float wl = 2;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerWLWWResponse, _impl_.wl_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float ww = 3;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerWLWWResponse, _impl_.ww_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::Status>()},
  }}, {{
  }},
};

::uint8_t* ViewerControllerWLWWResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerWLWWResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // float wl = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_wl = this->_internal_wl();
  ::uint32_t raw_wl;
  memcpy(&raw_wl, &tmp_wl, sizeof(tmp_wl));
  if (raw_wl != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_wl(), target);
  }

  // float ww = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_ww = this->_internal_ww();
  ::uint32_t raw_ww;
  memcpy(&raw_ww, &tmp_ww, sizeof(tmp_ww));
  if (raw_ww != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_ww(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerWLWWResponse)
  return target;
}

::size_t ViewerControllerWLWWResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerWLWWResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.status_);
  }

  // float wl = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_wl = this->_internal_wl();
  ::uint32_t raw_wl;
  memcpy(&raw_wl, &tmp_wl, sizeof(tmp_wl));
  if (raw_wl != 0) {
    total_size += 5;
  }

  // float ww = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_ww = this->_internal_ww();
  ::uint32_t raw_ww;
  memcpy(&raw_ww, &tmp_ww, sizeof(tmp_ww));
  if (raw_ww != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ViewerControllerWLWWResponse::_class_data_ = {
    ViewerControllerWLWWResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ViewerControllerWLWWResponse::GetClassData() const {
  return &_class_data_;
}

void ViewerControllerWLWWResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ViewerControllerWLWWResponse*>(&to_msg);
  auto& from = static_cast<const ViewerControllerWLWWResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerWLWWResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_status()->::osirixgrpc::Status::MergeFrom(
        from._internal_status());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_wl = from._internal_wl();
  ::uint32_t raw_wl;
  memcpy(&raw_wl, &tmp_wl, sizeof(tmp_wl));
  if (raw_wl != 0) {
    _this->_internal_set_wl(from._internal_wl());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_ww = from._internal_ww();
  ::uint32_t raw_ww;
  memcpy(&raw_ww, &tmp_ww, sizeof(tmp_ww));
  if (raw_ww != 0) {
    _this->_internal_set_ww(from._internal_ww());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ViewerControllerWLWWResponse::CopyFrom(const ViewerControllerWLWWResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerWLWWResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ViewerControllerWLWWResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ViewerControllerWLWWResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ViewerControllerWLWWResponse::InternalSwap(ViewerControllerWLWWResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerWLWWResponse, _impl_.ww_)
      + sizeof(ViewerControllerWLWWResponse::_impl_.ww_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerWLWWResponse, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata ViewerControllerWLWWResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_viewercontroller_2eproto_getter, &descriptor_table_viewercontroller_2eproto_once,
      file_level_metadata_viewercontroller_2eproto[15]);
}
// ===================================================================

class ViewerControllerOpenVRViewerForModeResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ViewerControllerOpenVRViewerForModeResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ViewerControllerOpenVRViewerForModeResponse, _impl_._has_bits_);
  static const ::osirixgrpc::Status& status(const ViewerControllerOpenVRViewerForModeResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::osirixgrpc::VRController& vr_controller(const ViewerControllerOpenVRViewerForModeResponse* msg);
  static void set_has_vr_controller(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::osirixgrpc::Status& ViewerControllerOpenVRViewerForModeResponse::_Internal::status(const ViewerControllerOpenVRViewerForModeResponse* msg) {
  return *msg->_impl_.status_;
}
const ::osirixgrpc::VRController& ViewerControllerOpenVRViewerForModeResponse::_Internal::vr_controller(const ViewerControllerOpenVRViewerForModeResponse* msg) {
  return *msg->_impl_.vr_controller_;
}
void ViewerControllerOpenVRViewerForModeResponse::clear_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void ViewerControllerOpenVRViewerForModeResponse::clear_vr_controller() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.vr_controller_ != nullptr) _impl_.vr_controller_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
ViewerControllerOpenVRViewerForModeResponse::ViewerControllerOpenVRViewerForModeResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerOpenVRViewerForModeResponse)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerOpenVRViewerForModeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ViewerControllerOpenVRViewerForModeResponse::ViewerControllerOpenVRViewerForModeResponse(
    ::google::protobuf::Arena* arena,
    const ViewerControllerOpenVRViewerForModeResponse& from)
    : ::google::protobuf::Message(arena) {
  ViewerControllerOpenVRViewerForModeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::osirixgrpc::Status>(arena, *from._impl_.status_)
                : nullptr;
  _impl_.vr_controller_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::osirixgrpc::VRController>(arena, *from._impl_.vr_controller_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerOpenVRViewerForModeResponse)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerOpenVRViewerForModeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ViewerControllerOpenVRViewerForModeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, vr_controller_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::vr_controller_));
}
ViewerControllerOpenVRViewerForModeResponse::~ViewerControllerOpenVRViewerForModeResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerOpenVRViewerForModeResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ViewerControllerOpenVRViewerForModeResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.status_;
  delete _impl_.vr_controller_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ViewerControllerOpenVRViewerForModeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerOpenVRViewerForModeResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.vr_controller_ != nullptr);
      _impl_.vr_controller_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ViewerControllerOpenVRViewerForModeResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> ViewerControllerOpenVRViewerForModeResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ViewerControllerOpenVRViewerForModeResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ViewerControllerOpenVRViewerForModeResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .osirixgrpc.VRController vr_controller = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(ViewerControllerOpenVRViewerForModeResponse, _impl_.vr_controller_)}},
    // .osirixgrpc.Status status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerOpenVRViewerForModeResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osirixgrpc.Status status = 1;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerOpenVRViewerForModeResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .osirixgrpc.VRController vr_controller = 2;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerOpenVRViewerForModeResponse, _impl_.vr_controller_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::Status>()},
    {::_pbi::TcParser::GetTable<::osirixgrpc::VRController>()},
  }}, {{
  }},
};

::uint8_t* ViewerControllerOpenVRViewerForModeResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerOpenVRViewerForModeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // .osirixgrpc.VRController vr_controller = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::vr_controller(this),
        _Internal::vr_controller(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerOpenVRViewerForModeResponse)
  return target;
}

::size_t ViewerControllerOpenVRViewerForModeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerOpenVRViewerForModeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .osirixgrpc.Status status = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.status_);
    }

    // .osirixgrpc.VRController vr_controller = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.vr_controller_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ViewerControllerOpenVRViewerForModeResponse::_class_data_ = {
    ViewerControllerOpenVRViewerForModeResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ViewerControllerOpenVRViewerForModeResponse::GetClassData() const {
  return &_class_data_;
}

void ViewerControllerOpenVRViewerForModeResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ViewerControllerOpenVRViewerForModeResponse*>(&to_msg);
  auto& from = static_cast<const ViewerControllerOpenVRViewerForModeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerOpenVRViewerForModeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_status()->::osirixgrpc::Status::MergeFrom(
          from._internal_status());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_vr_controller()->::osirixgrpc::VRController::MergeFrom(
          from._internal_vr_controller());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ViewerControllerOpenVRViewerForModeResponse::CopyFrom(const ViewerControllerOpenVRViewerForModeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerOpenVRViewerForModeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ViewerControllerOpenVRViewerForModeResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ViewerControllerOpenVRViewerForModeResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ViewerControllerOpenVRViewerForModeResponse::InternalSwap(ViewerControllerOpenVRViewerForModeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerOpenVRViewerForModeResponse, _impl_.vr_controller_)
      + sizeof(ViewerControllerOpenVRViewerForModeResponse::_impl_.vr_controller_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerOpenVRViewerForModeResponse, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata ViewerControllerOpenVRViewerForModeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_viewercontroller_2eproto_getter, &descriptor_table_viewercontroller_2eproto_once,
      file_level_metadata_viewercontroller_2eproto[16]);
}
// ===================================================================

class ViewerControllerPixListRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ViewerControllerPixListRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ViewerControllerPixListRequest, _impl_._has_bits_);
  static const ::osirixgrpc::ViewerController& viewer_controller(const ViewerControllerPixListRequest* msg);
  static void set_has_viewer_controller(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osirixgrpc::ViewerController& ViewerControllerPixListRequest::_Internal::viewer_controller(const ViewerControllerPixListRequest* msg) {
  return *msg->_impl_.viewer_controller_;
}
void ViewerControllerPixListRequest::clear_viewer_controller() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.viewer_controller_ != nullptr) _impl_.viewer_controller_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ViewerControllerPixListRequest::ViewerControllerPixListRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerPixListRequest)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerPixListRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ViewerControllerPixListRequest::ViewerControllerPixListRequest(
    ::google::protobuf::Arena* arena,
    const ViewerControllerPixListRequest& from)
    : ::google::protobuf::Message(arena) {
  ViewerControllerPixListRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.viewer_controller_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::osirixgrpc::ViewerController>(arena, *from._impl_.viewer_controller_)
                : nullptr;
  _impl_.movie_idx_ = from._impl_.movie_idx_;

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerPixListRequest)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerPixListRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ViewerControllerPixListRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, viewer_controller_),
           0,
           offsetof(Impl_, movie_idx_) -
               offsetof(Impl_, viewer_controller_) +
               sizeof(Impl_::movie_idx_));
}
ViewerControllerPixListRequest::~ViewerControllerPixListRequest() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerPixListRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ViewerControllerPixListRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.viewer_controller_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ViewerControllerPixListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerPixListRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.viewer_controller_ != nullptr);
    _impl_.viewer_controller_->Clear();
  }
  _impl_.movie_idx_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ViewerControllerPixListRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ViewerControllerPixListRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ViewerControllerPixListRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ViewerControllerPixListRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 movie_idx = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ViewerControllerPixListRequest, _impl_.movie_idx_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerPixListRequest, _impl_.movie_idx_)}},
    // .osirixgrpc.ViewerController viewer_controller = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerPixListRequest, _impl_.viewer_controller_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osirixgrpc.ViewerController viewer_controller = 1;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerPixListRequest, _impl_.viewer_controller_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 movie_idx = 2;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerPixListRequest, _impl_.movie_idx_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::ViewerController>()},
  }}, {{
  }},
};

::uint8_t* ViewerControllerPixListRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerPixListRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.ViewerController viewer_controller = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::viewer_controller(this),
        _Internal::viewer_controller(this).GetCachedSize(), target, stream);
  }

  // int32 movie_idx = 2;
  if (this->_internal_movie_idx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_movie_idx(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerPixListRequest)
  return target;
}

::size_t ViewerControllerPixListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerPixListRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.ViewerController viewer_controller = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.viewer_controller_);
  }

  // int32 movie_idx = 2;
  if (this->_internal_movie_idx() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_movie_idx());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ViewerControllerPixListRequest::_class_data_ = {
    ViewerControllerPixListRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ViewerControllerPixListRequest::GetClassData() const {
  return &_class_data_;
}

void ViewerControllerPixListRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ViewerControllerPixListRequest*>(&to_msg);
  auto& from = static_cast<const ViewerControllerPixListRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerPixListRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_viewer_controller()->::osirixgrpc::ViewerController::MergeFrom(
        from._internal_viewer_controller());
  }
  if (from._internal_movie_idx() != 0) {
    _this->_internal_set_movie_idx(from._internal_movie_idx());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ViewerControllerPixListRequest::CopyFrom(const ViewerControllerPixListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerPixListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ViewerControllerPixListRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ViewerControllerPixListRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ViewerControllerPixListRequest::InternalSwap(ViewerControllerPixListRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerPixListRequest, _impl_.movie_idx_)
      + sizeof(ViewerControllerPixListRequest::_impl_.movie_idx_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerPixListRequest, _impl_.viewer_controller_)>(
          reinterpret_cast<char*>(&_impl_.viewer_controller_),
          reinterpret_cast<char*>(&other->_impl_.viewer_controller_));
}

::google::protobuf::Metadata ViewerControllerPixListRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_viewercontroller_2eproto_getter, &descriptor_table_viewercontroller_2eproto_once,
      file_level_metadata_viewercontroller_2eproto[17]);
}
// ===================================================================

class ViewerControllerROIListRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ViewerControllerROIListRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ViewerControllerROIListRequest, _impl_._has_bits_);
  static const ::osirixgrpc::ViewerController& viewer_controller(const ViewerControllerROIListRequest* msg);
  static void set_has_viewer_controller(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osirixgrpc::ViewerController& ViewerControllerROIListRequest::_Internal::viewer_controller(const ViewerControllerROIListRequest* msg) {
  return *msg->_impl_.viewer_controller_;
}
void ViewerControllerROIListRequest::clear_viewer_controller() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.viewer_controller_ != nullptr) _impl_.viewer_controller_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ViewerControllerROIListRequest::ViewerControllerROIListRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerROIListRequest)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerROIListRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ViewerControllerROIListRequest::ViewerControllerROIListRequest(
    ::google::protobuf::Arena* arena,
    const ViewerControllerROIListRequest& from)
    : ::google::protobuf::Message(arena) {
  ViewerControllerROIListRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.viewer_controller_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::osirixgrpc::ViewerController>(arena, *from._impl_.viewer_controller_)
                : nullptr;
  _impl_.movie_idx_ = from._impl_.movie_idx_;

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerROIListRequest)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerROIListRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ViewerControllerROIListRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, viewer_controller_),
           0,
           offsetof(Impl_, movie_idx_) -
               offsetof(Impl_, viewer_controller_) +
               sizeof(Impl_::movie_idx_));
}
ViewerControllerROIListRequest::~ViewerControllerROIListRequest() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerROIListRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ViewerControllerROIListRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.viewer_controller_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ViewerControllerROIListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerROIListRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.viewer_controller_ != nullptr);
    _impl_.viewer_controller_->Clear();
  }
  _impl_.movie_idx_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ViewerControllerROIListRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ViewerControllerROIListRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ViewerControllerROIListRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ViewerControllerROIListRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 movie_idx = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ViewerControllerROIListRequest, _impl_.movie_idx_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerROIListRequest, _impl_.movie_idx_)}},
    // .osirixgrpc.ViewerController viewer_controller = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerROIListRequest, _impl_.viewer_controller_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osirixgrpc.ViewerController viewer_controller = 1;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerROIListRequest, _impl_.viewer_controller_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 movie_idx = 2;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerROIListRequest, _impl_.movie_idx_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::ViewerController>()},
  }}, {{
  }},
};

::uint8_t* ViewerControllerROIListRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerROIListRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.ViewerController viewer_controller = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::viewer_controller(this),
        _Internal::viewer_controller(this).GetCachedSize(), target, stream);
  }

  // int32 movie_idx = 2;
  if (this->_internal_movie_idx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_movie_idx(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerROIListRequest)
  return target;
}

::size_t ViewerControllerROIListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerROIListRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.ViewerController viewer_controller = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.viewer_controller_);
  }

  // int32 movie_idx = 2;
  if (this->_internal_movie_idx() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_movie_idx());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ViewerControllerROIListRequest::_class_data_ = {
    ViewerControllerROIListRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ViewerControllerROIListRequest::GetClassData() const {
  return &_class_data_;
}

void ViewerControllerROIListRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ViewerControllerROIListRequest*>(&to_msg);
  auto& from = static_cast<const ViewerControllerROIListRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerROIListRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_viewer_controller()->::osirixgrpc::ViewerController::MergeFrom(
        from._internal_viewer_controller());
  }
  if (from._internal_movie_idx() != 0) {
    _this->_internal_set_movie_idx(from._internal_movie_idx());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ViewerControllerROIListRequest::CopyFrom(const ViewerControllerROIListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerROIListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ViewerControllerROIListRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ViewerControllerROIListRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ViewerControllerROIListRequest::InternalSwap(ViewerControllerROIListRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerROIListRequest, _impl_.movie_idx_)
      + sizeof(ViewerControllerROIListRequest::_impl_.movie_idx_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerROIListRequest, _impl_.viewer_controller_)>(
          reinterpret_cast<char*>(&_impl_.viewer_controller_),
          reinterpret_cast<char*>(&other->_impl_.viewer_controller_));
}

::google::protobuf::Metadata ViewerControllerROIListRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_viewercontroller_2eproto_getter, &descriptor_table_viewercontroller_2eproto_once,
      file_level_metadata_viewercontroller_2eproto[18]);
}
// ===================================================================

class ViewerControllerNewROIRequest_Buffer::_Internal {
 public:
};

ViewerControllerNewROIRequest_Buffer::ViewerControllerNewROIRequest_Buffer(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerNewROIRequest.Buffer)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerNewROIRequest_Buffer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : buffer_{visibility, arena, from.buffer_},
        _cached_size_{0} {}

ViewerControllerNewROIRequest_Buffer::ViewerControllerNewROIRequest_Buffer(
    ::google::protobuf::Arena* arena,
    const ViewerControllerNewROIRequest_Buffer& from)
    : ::google::protobuf::Message(arena) {
  ViewerControllerNewROIRequest_Buffer* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, rows_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, rows_),
           offsetof(Impl_, columns_) -
               offsetof(Impl_, rows_) +
               sizeof(Impl_::columns_));

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerNewROIRequest.Buffer)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerNewROIRequest_Buffer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : buffer_{visibility, arena},
        _cached_size_{0} {}

inline void ViewerControllerNewROIRequest_Buffer::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, rows_),
           0,
           offsetof(Impl_, columns_) -
               offsetof(Impl_, rows_) +
               sizeof(Impl_::columns_));
}
ViewerControllerNewROIRequest_Buffer::~ViewerControllerNewROIRequest_Buffer() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerNewROIRequest.Buffer)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ViewerControllerNewROIRequest_Buffer::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ViewerControllerNewROIRequest_Buffer::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerNewROIRequest.Buffer)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.buffer_.Clear();
  ::memset(&_impl_.rows_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.columns_) -
      reinterpret_cast<char*>(&_impl_.rows_)) + sizeof(_impl_.columns_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ViewerControllerNewROIRequest_Buffer::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> ViewerControllerNewROIRequest_Buffer::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ViewerControllerNewROIRequest_Buffer_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated bool buffer = 1;
    {::_pbi::TcParser::FastV8P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest_Buffer, _impl_.buffer_)}},
    // int32 rows = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ViewerControllerNewROIRequest_Buffer, _impl_.rows_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest_Buffer, _impl_.rows_)}},
    // int32 columns = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ViewerControllerNewROIRequest_Buffer, _impl_.columns_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest_Buffer, _impl_.columns_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated bool buffer = 1;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest_Buffer, _impl_.buffer_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedBool)},
    // int32 rows = 2;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest_Buffer, _impl_.rows_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 columns = 3;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest_Buffer, _impl_.columns_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ViewerControllerNewROIRequest_Buffer::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerNewROIRequest.Buffer)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated bool buffer = 1;
  if (this->_internal_buffer_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_buffer(), target);
  }

  // int32 rows = 2;
  if (this->_internal_rows() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_rows(), target);
  }

  // int32 columns = 3;
  if (this->_internal_columns() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_columns(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerNewROIRequest.Buffer)
  return target;
}

::size_t ViewerControllerNewROIRequest_Buffer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerNewROIRequest.Buffer)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bool buffer = 1;
  {
    std::size_t data_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_buffer_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // int32 rows = 2;
  if (this->_internal_rows() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_rows());
  }

  // int32 columns = 3;
  if (this->_internal_columns() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_columns());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ViewerControllerNewROIRequest_Buffer::_class_data_ = {
    ViewerControllerNewROIRequest_Buffer::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ViewerControllerNewROIRequest_Buffer::GetClassData() const {
  return &_class_data_;
}

void ViewerControllerNewROIRequest_Buffer::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ViewerControllerNewROIRequest_Buffer*>(&to_msg);
  auto& from = static_cast<const ViewerControllerNewROIRequest_Buffer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerNewROIRequest.Buffer)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_buffer()->MergeFrom(from._internal_buffer());
  if (from._internal_rows() != 0) {
    _this->_internal_set_rows(from._internal_rows());
  }
  if (from._internal_columns() != 0) {
    _this->_internal_set_columns(from._internal_columns());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ViewerControllerNewROIRequest_Buffer::CopyFrom(const ViewerControllerNewROIRequest_Buffer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerNewROIRequest.Buffer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ViewerControllerNewROIRequest_Buffer::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ViewerControllerNewROIRequest_Buffer::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ViewerControllerNewROIRequest_Buffer::InternalSwap(ViewerControllerNewROIRequest_Buffer* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.buffer_.InternalSwap(&other->_impl_.buffer_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest_Buffer, _impl_.columns_)
      + sizeof(ViewerControllerNewROIRequest_Buffer::_impl_.columns_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest_Buffer, _impl_.rows_)>(
          reinterpret_cast<char*>(&_impl_.rows_),
          reinterpret_cast<char*>(&other->_impl_.rows_));
}

::google::protobuf::Metadata ViewerControllerNewROIRequest_Buffer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_viewercontroller_2eproto_getter, &descriptor_table_viewercontroller_2eproto_once,
      file_level_metadata_viewercontroller_2eproto[19]);
}
// ===================================================================

class ViewerControllerNewROIRequest_Point2D::_Internal {
 public:
};

ViewerControllerNewROIRequest_Point2D::ViewerControllerNewROIRequest_Point2D(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerNewROIRequest.Point2D)
}
ViewerControllerNewROIRequest_Point2D::ViewerControllerNewROIRequest_Point2D(
    ::google::protobuf::Arena* arena, const ViewerControllerNewROIRequest_Point2D& from)
    : ViewerControllerNewROIRequest_Point2D(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerNewROIRequest_Point2D::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ViewerControllerNewROIRequest_Point2D::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, y_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::y_));
}
ViewerControllerNewROIRequest_Point2D::~ViewerControllerNewROIRequest_Point2D() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerNewROIRequest.Point2D)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ViewerControllerNewROIRequest_Point2D::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ViewerControllerNewROIRequest_Point2D::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerNewROIRequest.Point2D)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.y_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.y_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ViewerControllerNewROIRequest_Point2D::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> ViewerControllerNewROIRequest_Point2D::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ViewerControllerNewROIRequest_Point2D_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float y = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest_Point2D, _impl_.y_)}},
    // float x = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest_Point2D, _impl_.x_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float x = 1;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest_Point2D, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float y = 2;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest_Point2D, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ViewerControllerNewROIRequest_Point2D::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerNewROIRequest.Point2D)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float x = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = this->_internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_x(), target);
  }

  // float y = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = this->_internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_y(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerNewROIRequest.Point2D)
  return target;
}

::size_t ViewerControllerNewROIRequest_Point2D::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerNewROIRequest.Point2D)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float x = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = this->_internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    total_size += 5;
  }

  // float y = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = this->_internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ViewerControllerNewROIRequest_Point2D::_class_data_ = {
    ViewerControllerNewROIRequest_Point2D::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ViewerControllerNewROIRequest_Point2D::GetClassData() const {
  return &_class_data_;
}

void ViewerControllerNewROIRequest_Point2D::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ViewerControllerNewROIRequest_Point2D*>(&to_msg);
  auto& from = static_cast<const ViewerControllerNewROIRequest_Point2D&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerNewROIRequest.Point2D)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = from._internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    _this->_internal_set_x(from._internal_x());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = from._internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    _this->_internal_set_y(from._internal_y());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ViewerControllerNewROIRequest_Point2D::CopyFrom(const ViewerControllerNewROIRequest_Point2D& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerNewROIRequest.Point2D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ViewerControllerNewROIRequest_Point2D::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ViewerControllerNewROIRequest_Point2D::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ViewerControllerNewROIRequest_Point2D::InternalSwap(ViewerControllerNewROIRequest_Point2D* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest_Point2D, _impl_.y_)
      + sizeof(ViewerControllerNewROIRequest_Point2D::_impl_.y_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest_Point2D, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata ViewerControllerNewROIRequest_Point2D::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_viewercontroller_2eproto_getter, &descriptor_table_viewercontroller_2eproto_once,
      file_level_metadata_viewercontroller_2eproto[20]);
}
// ===================================================================

class ViewerControllerNewROIRequest_Color::_Internal {
 public:
};

ViewerControllerNewROIRequest_Color::ViewerControllerNewROIRequest_Color(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerNewROIRequest.Color)
}
ViewerControllerNewROIRequest_Color::ViewerControllerNewROIRequest_Color(
    ::google::protobuf::Arena* arena, const ViewerControllerNewROIRequest_Color& from)
    : ViewerControllerNewROIRequest_Color(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerNewROIRequest_Color::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ViewerControllerNewROIRequest_Color::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, r_),
           0,
           offsetof(Impl_, b_) -
               offsetof(Impl_, r_) +
               sizeof(Impl_::b_));
}
ViewerControllerNewROIRequest_Color::~ViewerControllerNewROIRequest_Color() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerNewROIRequest.Color)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ViewerControllerNewROIRequest_Color::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ViewerControllerNewROIRequest_Color::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerNewROIRequest.Color)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.r_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.b_) -
      reinterpret_cast<char*>(&_impl_.r_)) + sizeof(_impl_.b_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ViewerControllerNewROIRequest_Color::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> ViewerControllerNewROIRequest_Color::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ViewerControllerNewROIRequest_Color_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 r = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ViewerControllerNewROIRequest_Color, _impl_.r_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest_Color, _impl_.r_)}},
    // int32 g = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ViewerControllerNewROIRequest_Color, _impl_.g_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest_Color, _impl_.g_)}},
    // int32 b = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ViewerControllerNewROIRequest_Color, _impl_.b_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest_Color, _impl_.b_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 r = 1;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest_Color, _impl_.r_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 g = 2;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest_Color, _impl_.g_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 b = 3;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest_Color, _impl_.b_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ViewerControllerNewROIRequest_Color::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerNewROIRequest.Color)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 r = 1;
  if (this->_internal_r() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_r(), target);
  }

  // int32 g = 2;
  if (this->_internal_g() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_g(), target);
  }

  // int32 b = 3;
  if (this->_internal_b() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_b(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerNewROIRequest.Color)
  return target;
}

::size_t ViewerControllerNewROIRequest_Color::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerNewROIRequest.Color)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 r = 1;
  if (this->_internal_r() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_r());
  }

  // int32 g = 2;
  if (this->_internal_g() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_g());
  }

  // int32 b = 3;
  if (this->_internal_b() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_b());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ViewerControllerNewROIRequest_Color::_class_data_ = {
    ViewerControllerNewROIRequest_Color::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ViewerControllerNewROIRequest_Color::GetClassData() const {
  return &_class_data_;
}

void ViewerControllerNewROIRequest_Color::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ViewerControllerNewROIRequest_Color*>(&to_msg);
  auto& from = static_cast<const ViewerControllerNewROIRequest_Color&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerNewROIRequest.Color)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_r() != 0) {
    _this->_internal_set_r(from._internal_r());
  }
  if (from._internal_g() != 0) {
    _this->_internal_set_g(from._internal_g());
  }
  if (from._internal_b() != 0) {
    _this->_internal_set_b(from._internal_b());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ViewerControllerNewROIRequest_Color::CopyFrom(const ViewerControllerNewROIRequest_Color& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerNewROIRequest.Color)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ViewerControllerNewROIRequest_Color::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ViewerControllerNewROIRequest_Color::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ViewerControllerNewROIRequest_Color::InternalSwap(ViewerControllerNewROIRequest_Color* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest_Color, _impl_.b_)
      + sizeof(ViewerControllerNewROIRequest_Color::_impl_.b_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest_Color, _impl_.r_)>(
          reinterpret_cast<char*>(&_impl_.r_),
          reinterpret_cast<char*>(&other->_impl_.r_));
}

::google::protobuf::Metadata ViewerControllerNewROIRequest_Color::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_viewercontroller_2eproto_getter, &descriptor_table_viewercontroller_2eproto_once,
      file_level_metadata_viewercontroller_2eproto[21]);
}
// ===================================================================

class ViewerControllerNewROIRequest_Rect::_Internal {
 public:
};

ViewerControllerNewROIRequest_Rect::ViewerControllerNewROIRequest_Rect(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerNewROIRequest.Rect)
}
ViewerControllerNewROIRequest_Rect::ViewerControllerNewROIRequest_Rect(
    ::google::protobuf::Arena* arena, const ViewerControllerNewROIRequest_Rect& from)
    : ViewerControllerNewROIRequest_Rect(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerNewROIRequest_Rect::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ViewerControllerNewROIRequest_Rect::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, origin_x_),
           0,
           offsetof(Impl_, width_) -
               offsetof(Impl_, origin_x_) +
               sizeof(Impl_::width_));
}
ViewerControllerNewROIRequest_Rect::~ViewerControllerNewROIRequest_Rect() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerNewROIRequest.Rect)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ViewerControllerNewROIRequest_Rect::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ViewerControllerNewROIRequest_Rect::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerNewROIRequest.Rect)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.origin_x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.width_) -
      reinterpret_cast<char*>(&_impl_.origin_x_)) + sizeof(_impl_.width_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ViewerControllerNewROIRequest_Rect::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> ViewerControllerNewROIRequest_Rect::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ViewerControllerNewROIRequest_Rect_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float width = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest_Rect, _impl_.width_)}},
    // float origin_x = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest_Rect, _impl_.origin_x_)}},
    // float origin_y = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest_Rect, _impl_.origin_y_)}},
    // float height = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest_Rect, _impl_.height_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float origin_x = 1;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest_Rect, _impl_.origin_x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float origin_y = 2;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest_Rect, _impl_.origin_y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float height = 3;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest_Rect, _impl_.height_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float width = 4;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest_Rect, _impl_.width_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ViewerControllerNewROIRequest_Rect::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerNewROIRequest.Rect)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float origin_x = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_origin_x = this->_internal_origin_x();
  ::uint32_t raw_origin_x;
  memcpy(&raw_origin_x, &tmp_origin_x, sizeof(tmp_origin_x));
  if (raw_origin_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_origin_x(), target);
  }

  // float origin_y = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_origin_y = this->_internal_origin_y();
  ::uint32_t raw_origin_y;
  memcpy(&raw_origin_y, &tmp_origin_y, sizeof(tmp_origin_y));
  if (raw_origin_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_origin_y(), target);
  }

  // float height = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_height = this->_internal_height();
  ::uint32_t raw_height;
  memcpy(&raw_height, &tmp_height, sizeof(tmp_height));
  if (raw_height != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_height(), target);
  }

  // float width = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_width = this->_internal_width();
  ::uint32_t raw_width;
  memcpy(&raw_width, &tmp_width, sizeof(tmp_width));
  if (raw_width != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_width(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerNewROIRequest.Rect)
  return target;
}

::size_t ViewerControllerNewROIRequest_Rect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerNewROIRequest.Rect)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float origin_x = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_origin_x = this->_internal_origin_x();
  ::uint32_t raw_origin_x;
  memcpy(&raw_origin_x, &tmp_origin_x, sizeof(tmp_origin_x));
  if (raw_origin_x != 0) {
    total_size += 5;
  }

  // float origin_y = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_origin_y = this->_internal_origin_y();
  ::uint32_t raw_origin_y;
  memcpy(&raw_origin_y, &tmp_origin_y, sizeof(tmp_origin_y));
  if (raw_origin_y != 0) {
    total_size += 5;
  }

  // float height = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_height = this->_internal_height();
  ::uint32_t raw_height;
  memcpy(&raw_height, &tmp_height, sizeof(tmp_height));
  if (raw_height != 0) {
    total_size += 5;
  }

  // float width = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_width = this->_internal_width();
  ::uint32_t raw_width;
  memcpy(&raw_width, &tmp_width, sizeof(tmp_width));
  if (raw_width != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ViewerControllerNewROIRequest_Rect::_class_data_ = {
    ViewerControllerNewROIRequest_Rect::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ViewerControllerNewROIRequest_Rect::GetClassData() const {
  return &_class_data_;
}

void ViewerControllerNewROIRequest_Rect::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ViewerControllerNewROIRequest_Rect*>(&to_msg);
  auto& from = static_cast<const ViewerControllerNewROIRequest_Rect&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerNewROIRequest.Rect)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_origin_x = from._internal_origin_x();
  ::uint32_t raw_origin_x;
  memcpy(&raw_origin_x, &tmp_origin_x, sizeof(tmp_origin_x));
  if (raw_origin_x != 0) {
    _this->_internal_set_origin_x(from._internal_origin_x());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_origin_y = from._internal_origin_y();
  ::uint32_t raw_origin_y;
  memcpy(&raw_origin_y, &tmp_origin_y, sizeof(tmp_origin_y));
  if (raw_origin_y != 0) {
    _this->_internal_set_origin_y(from._internal_origin_y());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_height = from._internal_height();
  ::uint32_t raw_height;
  memcpy(&raw_height, &tmp_height, sizeof(tmp_height));
  if (raw_height != 0) {
    _this->_internal_set_height(from._internal_height());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_width = from._internal_width();
  ::uint32_t raw_width;
  memcpy(&raw_width, &tmp_width, sizeof(tmp_width));
  if (raw_width != 0) {
    _this->_internal_set_width(from._internal_width());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ViewerControllerNewROIRequest_Rect::CopyFrom(const ViewerControllerNewROIRequest_Rect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerNewROIRequest.Rect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ViewerControllerNewROIRequest_Rect::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ViewerControllerNewROIRequest_Rect::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ViewerControllerNewROIRequest_Rect::InternalSwap(ViewerControllerNewROIRequest_Rect* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest_Rect, _impl_.width_)
      + sizeof(ViewerControllerNewROIRequest_Rect::_impl_.width_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest_Rect, _impl_.origin_x_)>(
          reinterpret_cast<char*>(&_impl_.origin_x_),
          reinterpret_cast<char*>(&other->_impl_.origin_x_));
}

::google::protobuf::Metadata ViewerControllerNewROIRequest_Rect::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_viewercontroller_2eproto_getter, &descriptor_table_viewercontroller_2eproto_once,
      file_level_metadata_viewercontroller_2eproto[22]);
}
// ===================================================================

class ViewerControllerNewROIRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ViewerControllerNewROIRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest, _impl_._has_bits_);
  static const ::osirixgrpc::ViewerController& viewer_controller(const ViewerControllerNewROIRequest* msg);
  static void set_has_viewer_controller(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::osirixgrpc::ViewerControllerNewROIRequest_Color& color(const ViewerControllerNewROIRequest* msg);
  static void set_has_color(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::osirixgrpc::ViewerControllerNewROIRequest_Buffer& buffer(const ViewerControllerNewROIRequest* msg);
  static void set_has_buffer(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::osirixgrpc::ViewerControllerNewROIRequest_Rect& rectangle(const ViewerControllerNewROIRequest* msg);
  static void set_has_rectangle(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::osirixgrpc::ViewerController& ViewerControllerNewROIRequest::_Internal::viewer_controller(const ViewerControllerNewROIRequest* msg) {
  return *msg->_impl_.viewer_controller_;
}
const ::osirixgrpc::ViewerControllerNewROIRequest_Color& ViewerControllerNewROIRequest::_Internal::color(const ViewerControllerNewROIRequest* msg) {
  return *msg->_impl_.color_;
}
const ::osirixgrpc::ViewerControllerNewROIRequest_Buffer& ViewerControllerNewROIRequest::_Internal::buffer(const ViewerControllerNewROIRequest* msg) {
  return *msg->_impl_.buffer_;
}
const ::osirixgrpc::ViewerControllerNewROIRequest_Rect& ViewerControllerNewROIRequest::_Internal::rectangle(const ViewerControllerNewROIRequest* msg) {
  return *msg->_impl_.rectangle_;
}
void ViewerControllerNewROIRequest::clear_viewer_controller() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.viewer_controller_ != nullptr) _impl_.viewer_controller_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ViewerControllerNewROIRequest::ViewerControllerNewROIRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerNewROIRequest)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerNewROIRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        points_{visibility, arena, from.points_},
        name_(arena, from.name_) {}

ViewerControllerNewROIRequest::ViewerControllerNewROIRequest(
    ::google::protobuf::Arena* arena,
    const ViewerControllerNewROIRequest& from)
    : ::google::protobuf::Message(arena) {
  ViewerControllerNewROIRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.viewer_controller_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::osirixgrpc::ViewerController>(arena, *from._impl_.viewer_controller_)
                : nullptr;
  _impl_.color_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::osirixgrpc::ViewerControllerNewROIRequest_Color>(arena, *from._impl_.color_)
                : nullptr;
  _impl_.buffer_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::osirixgrpc::ViewerControllerNewROIRequest_Buffer>(arena, *from._impl_.buffer_)
                : nullptr;
  _impl_.rectangle_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::osirixgrpc::ViewerControllerNewROIRequest_Rect>(arena, *from._impl_.rectangle_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, itype_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, itype_),
           offsetof(Impl_, opacity_) -
               offsetof(Impl_, itype_) +
               sizeof(Impl_::opacity_));

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerNewROIRequest)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerNewROIRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        points_{visibility, arena},
        name_(arena) {}

inline void ViewerControllerNewROIRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, viewer_controller_),
           0,
           offsetof(Impl_, opacity_) -
               offsetof(Impl_, viewer_controller_) +
               sizeof(Impl_::opacity_));
}
ViewerControllerNewROIRequest::~ViewerControllerNewROIRequest() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerNewROIRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ViewerControllerNewROIRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  delete _impl_.viewer_controller_;
  delete _impl_.color_;
  delete _impl_.buffer_;
  delete _impl_.rectangle_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ViewerControllerNewROIRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerNewROIRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.points_.Clear();
  _impl_.name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.viewer_controller_ != nullptr);
      _impl_.viewer_controller_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.color_ != nullptr);
      _impl_.color_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.buffer_ != nullptr);
      _impl_.buffer_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.rectangle_ != nullptr);
      _impl_.rectangle_->Clear();
    }
  }
  ::memset(&_impl_.itype_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.opacity_) -
      reinterpret_cast<char*>(&_impl_.itype_)) + sizeof(_impl_.opacity_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ViewerControllerNewROIRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 5, 61, 2> ViewerControllerNewROIRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest, _impl_._has_bits_),
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ViewerControllerNewROIRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .osirixgrpc.ViewerController viewer_controller = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest, _impl_.viewer_controller_)}},
    // int32 itype = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ViewerControllerNewROIRequest, _impl_.itype_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest, _impl_.itype_)}},
    // string name = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest, _impl_.name_)}},
    // int32 position = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ViewerControllerNewROIRequest, _impl_.position_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest, _impl_.position_)}},
    // int32 movie_idx = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ViewerControllerNewROIRequest, _impl_.movie_idx_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest, _impl_.movie_idx_)}},
    // int32 buffer_position_x = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ViewerControllerNewROIRequest, _impl_.buffer_position_x_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest, _impl_.buffer_position_x_)}},
    // int32 buffer_position_y = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ViewerControllerNewROIRequest, _impl_.buffer_position_y_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest, _impl_.buffer_position_y_)}},
    // .osirixgrpc.ViewerControllerNewROIRequest.Color color = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 1, 1, PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest, _impl_.color_)}},
    // float thickness = 9;
    {::_pbi::TcParser::FastF32S1,
     {77, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest, _impl_.thickness_)}},
    // float opacity = 10;
    {::_pbi::TcParser::FastF32S1,
     {85, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest, _impl_.opacity_)}},
    // .osirixgrpc.ViewerControllerNewROIRequest.Buffer buffer = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 2, 2, PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest, _impl_.buffer_)}},
    // repeated .osirixgrpc.ViewerControllerNewROIRequest.Point2D points = 12;
    {::_pbi::TcParser::FastMtR1,
     {98, 63, 3, PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest, _impl_.points_)}},
    // .osirixgrpc.ViewerControllerNewROIRequest.Rect rectangle = 13;
    {::_pbi::TcParser::FastMtS1,
     {106, 3, 4, PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest, _impl_.rectangle_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .osirixgrpc.ViewerController viewer_controller = 1;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest, _impl_.viewer_controller_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 itype = 2;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest, _impl_.itype_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string name = 3;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 position = 4;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest, _impl_.position_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 movie_idx = 5;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest, _impl_.movie_idx_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 buffer_position_x = 6;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest, _impl_.buffer_position_x_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 buffer_position_y = 7;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest, _impl_.buffer_position_y_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .osirixgrpc.ViewerControllerNewROIRequest.Color color = 8;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest, _impl_.color_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // float thickness = 9;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest, _impl_.thickness_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float opacity = 10;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest, _impl_.opacity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // .osirixgrpc.ViewerControllerNewROIRequest.Buffer buffer = 11;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest, _impl_.buffer_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .osirixgrpc.ViewerControllerNewROIRequest.Point2D points = 12;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest, _impl_.points_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .osirixgrpc.ViewerControllerNewROIRequest.Rect rectangle = 13;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest, _impl_.rectangle_), _Internal::kHasBitsOffset + 3, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::ViewerController>()},
    {::_pbi::TcParser::GetTable<::osirixgrpc::ViewerControllerNewROIRequest_Color>()},
    {::_pbi::TcParser::GetTable<::osirixgrpc::ViewerControllerNewROIRequest_Buffer>()},
    {::_pbi::TcParser::GetTable<::osirixgrpc::ViewerControllerNewROIRequest_Point2D>()},
    {::_pbi::TcParser::GetTable<::osirixgrpc::ViewerControllerNewROIRequest_Rect>()},
  }}, {{
    "\50\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0"
    "osirixgrpc.ViewerControllerNewROIRequest"
    "name"
  }},
};

::uint8_t* ViewerControllerNewROIRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerNewROIRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.ViewerController viewer_controller = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::viewer_controller(this),
        _Internal::viewer_controller(this).GetCachedSize(), target, stream);
  }

  // int32 itype = 2;
  if (this->_internal_itype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_itype(), target);
  }

  // string name = 3;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "osirixgrpc.ViewerControllerNewROIRequest.name");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // int32 position = 4;
  if (this->_internal_position() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_position(), target);
  }

  // int32 movie_idx = 5;
  if (this->_internal_movie_idx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_movie_idx(), target);
  }

  // int32 buffer_position_x = 6;
  if (this->_internal_buffer_position_x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_buffer_position_x(), target);
  }

  // int32 buffer_position_y = 7;
  if (this->_internal_buffer_position_y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<7>(
            stream, this->_internal_buffer_position_y(), target);
  }

  // .osirixgrpc.ViewerControllerNewROIRequest.Color color = 8;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, _Internal::color(this),
        _Internal::color(this).GetCachedSize(), target, stream);
  }

  // float thickness = 9;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_thickness = this->_internal_thickness();
  ::uint32_t raw_thickness;
  memcpy(&raw_thickness, &tmp_thickness, sizeof(tmp_thickness));
  if (raw_thickness != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        9, this->_internal_thickness(), target);
  }

  // float opacity = 10;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_opacity = this->_internal_opacity();
  ::uint32_t raw_opacity;
  memcpy(&raw_opacity, &tmp_opacity, sizeof(tmp_opacity));
  if (raw_opacity != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        10, this->_internal_opacity(), target);
  }

  // .osirixgrpc.ViewerControllerNewROIRequest.Buffer buffer = 11;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        11, _Internal::buffer(this),
        _Internal::buffer(this).GetCachedSize(), target, stream);
  }

  // repeated .osirixgrpc.ViewerControllerNewROIRequest.Point2D points = 12;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_points_size()); i < n; i++) {
    const auto& repfield = this->_internal_points().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(12, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .osirixgrpc.ViewerControllerNewROIRequest.Rect rectangle = 13;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        13, _Internal::rectangle(this),
        _Internal::rectangle(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerNewROIRequest)
  return target;
}

::size_t ViewerControllerNewROIRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerNewROIRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .osirixgrpc.ViewerControllerNewROIRequest.Point2D points = 12;
  total_size += 1UL * this->_internal_points_size();
  for (const auto& msg : this->_internal_points()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string name = 3;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // .osirixgrpc.ViewerController viewer_controller = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.viewer_controller_);
    }

    // .osirixgrpc.ViewerControllerNewROIRequest.Color color = 8;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.color_);
    }

    // .osirixgrpc.ViewerControllerNewROIRequest.Buffer buffer = 11;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.buffer_);
    }

    // .osirixgrpc.ViewerControllerNewROIRequest.Rect rectangle = 13;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.rectangle_);
    }

  }
  // int32 itype = 2;
  if (this->_internal_itype() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_itype());
  }

  // int32 position = 4;
  if (this->_internal_position() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_position());
  }

  // int32 movie_idx = 5;
  if (this->_internal_movie_idx() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_movie_idx());
  }

  // int32 buffer_position_x = 6;
  if (this->_internal_buffer_position_x() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_buffer_position_x());
  }

  // int32 buffer_position_y = 7;
  if (this->_internal_buffer_position_y() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_buffer_position_y());
  }

  // float thickness = 9;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_thickness = this->_internal_thickness();
  ::uint32_t raw_thickness;
  memcpy(&raw_thickness, &tmp_thickness, sizeof(tmp_thickness));
  if (raw_thickness != 0) {
    total_size += 5;
  }

  // float opacity = 10;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_opacity = this->_internal_opacity();
  ::uint32_t raw_opacity;
  memcpy(&raw_opacity, &tmp_opacity, sizeof(tmp_opacity));
  if (raw_opacity != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ViewerControllerNewROIRequest::_class_data_ = {
    ViewerControllerNewROIRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ViewerControllerNewROIRequest::GetClassData() const {
  return &_class_data_;
}

void ViewerControllerNewROIRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ViewerControllerNewROIRequest*>(&to_msg);
  auto& from = static_cast<const ViewerControllerNewROIRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerNewROIRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_points()->MergeFrom(
      from._internal_points());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_viewer_controller()->::osirixgrpc::ViewerController::MergeFrom(
          from._internal_viewer_controller());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_color()->::osirixgrpc::ViewerControllerNewROIRequest_Color::MergeFrom(
          from._internal_color());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_buffer()->::osirixgrpc::ViewerControllerNewROIRequest_Buffer::MergeFrom(
          from._internal_buffer());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_rectangle()->::osirixgrpc::ViewerControllerNewROIRequest_Rect::MergeFrom(
          from._internal_rectangle());
    }
  }
  if (from._internal_itype() != 0) {
    _this->_internal_set_itype(from._internal_itype());
  }
  if (from._internal_position() != 0) {
    _this->_internal_set_position(from._internal_position());
  }
  if (from._internal_movie_idx() != 0) {
    _this->_internal_set_movie_idx(from._internal_movie_idx());
  }
  if (from._internal_buffer_position_x() != 0) {
    _this->_internal_set_buffer_position_x(from._internal_buffer_position_x());
  }
  if (from._internal_buffer_position_y() != 0) {
    _this->_internal_set_buffer_position_y(from._internal_buffer_position_y());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_thickness = from._internal_thickness();
  ::uint32_t raw_thickness;
  memcpy(&raw_thickness, &tmp_thickness, sizeof(tmp_thickness));
  if (raw_thickness != 0) {
    _this->_internal_set_thickness(from._internal_thickness());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_opacity = from._internal_opacity();
  ::uint32_t raw_opacity;
  memcpy(&raw_opacity, &tmp_opacity, sizeof(tmp_opacity));
  if (raw_opacity != 0) {
    _this->_internal_set_opacity(from._internal_opacity());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ViewerControllerNewROIRequest::CopyFrom(const ViewerControllerNewROIRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerNewROIRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ViewerControllerNewROIRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ViewerControllerNewROIRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ViewerControllerNewROIRequest::InternalSwap(ViewerControllerNewROIRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.points_.InternalSwap(&other->_impl_.points_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest, _impl_.opacity_)
      + sizeof(ViewerControllerNewROIRequest::_impl_.opacity_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest, _impl_.viewer_controller_)>(
          reinterpret_cast<char*>(&_impl_.viewer_controller_),
          reinterpret_cast<char*>(&other->_impl_.viewer_controller_));
}

::google::protobuf::Metadata ViewerControllerNewROIRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_viewercontroller_2eproto_getter, &descriptor_table_viewercontroller_2eproto_once,
      file_level_metadata_viewercontroller_2eproto[23]);
}
// ===================================================================

class ViewerControllerROIsWithNameRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ViewerControllerROIsWithNameRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ViewerControllerROIsWithNameRequest, _impl_._has_bits_);
  static const ::osirixgrpc::ViewerController& viewer_controller(const ViewerControllerROIsWithNameRequest* msg);
  static void set_has_viewer_controller(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osirixgrpc::ViewerController& ViewerControllerROIsWithNameRequest::_Internal::viewer_controller(const ViewerControllerROIsWithNameRequest* msg) {
  return *msg->_impl_.viewer_controller_;
}
void ViewerControllerROIsWithNameRequest::clear_viewer_controller() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.viewer_controller_ != nullptr) _impl_.viewer_controller_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ViewerControllerROIsWithNameRequest::ViewerControllerROIsWithNameRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerROIsWithNameRequest)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerROIsWithNameRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_) {}

ViewerControllerROIsWithNameRequest::ViewerControllerROIsWithNameRequest(
    ::google::protobuf::Arena* arena,
    const ViewerControllerROIsWithNameRequest& from)
    : ::google::protobuf::Message(arena) {
  ViewerControllerROIsWithNameRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.viewer_controller_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::osirixgrpc::ViewerController>(arena, *from._impl_.viewer_controller_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, movie_idx_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, movie_idx_),
           offsetof(Impl_, in_4d_) -
               offsetof(Impl_, movie_idx_) +
               sizeof(Impl_::in_4d_));

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerROIsWithNameRequest)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerROIsWithNameRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        name_(arena) {}

inline void ViewerControllerROIsWithNameRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, viewer_controller_),
           0,
           offsetof(Impl_, in_4d_) -
               offsetof(Impl_, viewer_controller_) +
               sizeof(Impl_::in_4d_));
}
ViewerControllerROIsWithNameRequest::~ViewerControllerROIsWithNameRequest() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerROIsWithNameRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ViewerControllerROIsWithNameRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  delete _impl_.viewer_controller_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ViewerControllerROIsWithNameRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerROIsWithNameRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.viewer_controller_ != nullptr);
    _impl_.viewer_controller_->Clear();
  }
  ::memset(&_impl_.movie_idx_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.in_4d_) -
      reinterpret_cast<char*>(&_impl_.movie_idx_)) + sizeof(_impl_.in_4d_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ViewerControllerROIsWithNameRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 59, 2> ViewerControllerROIsWithNameRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ViewerControllerROIsWithNameRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ViewerControllerROIsWithNameRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool in_4d = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ViewerControllerROIsWithNameRequest, _impl_.in_4d_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerROIsWithNameRequest, _impl_.in_4d_)}},
    // .osirixgrpc.ViewerController viewer_controller = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerROIsWithNameRequest, _impl_.viewer_controller_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerROIsWithNameRequest, _impl_.name_)}},
    // int32 movie_idx = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ViewerControllerROIsWithNameRequest, _impl_.movie_idx_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerROIsWithNameRequest, _impl_.movie_idx_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osirixgrpc.ViewerController viewer_controller = 1;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerROIsWithNameRequest, _impl_.viewer_controller_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerROIsWithNameRequest, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 movie_idx = 3;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerROIsWithNameRequest, _impl_.movie_idx_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool in_4d = 4;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerROIsWithNameRequest, _impl_.in_4d_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::ViewerController>()},
  }}, {{
    "\56\0\4\0\0\0\0\0"
    "osirixgrpc.ViewerControllerROIsWithNameRequest"
    "name"
  }},
};

::uint8_t* ViewerControllerROIsWithNameRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerROIsWithNameRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.ViewerController viewer_controller = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::viewer_controller(this),
        _Internal::viewer_controller(this).GetCachedSize(), target, stream);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "osirixgrpc.ViewerControllerROIsWithNameRequest.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // int32 movie_idx = 3;
  if (this->_internal_movie_idx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_movie_idx(), target);
  }

  // bool in_4d = 4;
  if (this->_internal_in_4d() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_in_4d(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerROIsWithNameRequest)
  return target;
}

::size_t ViewerControllerROIsWithNameRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerROIsWithNameRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // .osirixgrpc.ViewerController viewer_controller = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.viewer_controller_);
  }

  // int32 movie_idx = 3;
  if (this->_internal_movie_idx() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_movie_idx());
  }

  // bool in_4d = 4;
  if (this->_internal_in_4d() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ViewerControllerROIsWithNameRequest::_class_data_ = {
    ViewerControllerROIsWithNameRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ViewerControllerROIsWithNameRequest::GetClassData() const {
  return &_class_data_;
}

void ViewerControllerROIsWithNameRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ViewerControllerROIsWithNameRequest*>(&to_msg);
  auto& from = static_cast<const ViewerControllerROIsWithNameRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerROIsWithNameRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_viewer_controller()->::osirixgrpc::ViewerController::MergeFrom(
        from._internal_viewer_controller());
  }
  if (from._internal_movie_idx() != 0) {
    _this->_internal_set_movie_idx(from._internal_movie_idx());
  }
  if (from._internal_in_4d() != 0) {
    _this->_internal_set_in_4d(from._internal_in_4d());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ViewerControllerROIsWithNameRequest::CopyFrom(const ViewerControllerROIsWithNameRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerROIsWithNameRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ViewerControllerROIsWithNameRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ViewerControllerROIsWithNameRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ViewerControllerROIsWithNameRequest::InternalSwap(ViewerControllerROIsWithNameRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerROIsWithNameRequest, _impl_.in_4d_)
      + sizeof(ViewerControllerROIsWithNameRequest::_impl_.in_4d_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerROIsWithNameRequest, _impl_.viewer_controller_)>(
          reinterpret_cast<char*>(&_impl_.viewer_controller_),
          reinterpret_cast<char*>(&other->_impl_.viewer_controller_));
}

::google::protobuf::Metadata ViewerControllerROIsWithNameRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_viewercontroller_2eproto_getter, &descriptor_table_viewercontroller_2eproto_once,
      file_level_metadata_viewercontroller_2eproto[24]);
}
// ===================================================================

class ViewerControllerResampleViewerControllerRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ViewerControllerResampleViewerControllerRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ViewerControllerResampleViewerControllerRequest, _impl_._has_bits_);
  static const ::osirixgrpc::ViewerController& viewer_controller(const ViewerControllerResampleViewerControllerRequest* msg);
  static void set_has_viewer_controller(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::osirixgrpc::ViewerController& fixed_viewer_controller(const ViewerControllerResampleViewerControllerRequest* msg);
  static void set_has_fixed_viewer_controller(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::osirixgrpc::ViewerController& ViewerControllerResampleViewerControllerRequest::_Internal::viewer_controller(const ViewerControllerResampleViewerControllerRequest* msg) {
  return *msg->_impl_.viewer_controller_;
}
const ::osirixgrpc::ViewerController& ViewerControllerResampleViewerControllerRequest::_Internal::fixed_viewer_controller(const ViewerControllerResampleViewerControllerRequest* msg) {
  return *msg->_impl_.fixed_viewer_controller_;
}
void ViewerControllerResampleViewerControllerRequest::clear_viewer_controller() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.viewer_controller_ != nullptr) _impl_.viewer_controller_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void ViewerControllerResampleViewerControllerRequest::clear_fixed_viewer_controller() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.fixed_viewer_controller_ != nullptr) _impl_.fixed_viewer_controller_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
ViewerControllerResampleViewerControllerRequest::ViewerControllerResampleViewerControllerRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerResampleViewerControllerRequest)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerResampleViewerControllerRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ViewerControllerResampleViewerControllerRequest::ViewerControllerResampleViewerControllerRequest(
    ::google::protobuf::Arena* arena,
    const ViewerControllerResampleViewerControllerRequest& from)
    : ::google::protobuf::Message(arena) {
  ViewerControllerResampleViewerControllerRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.viewer_controller_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::osirixgrpc::ViewerController>(arena, *from._impl_.viewer_controller_)
                : nullptr;
  _impl_.fixed_viewer_controller_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::osirixgrpc::ViewerController>(arena, *from._impl_.fixed_viewer_controller_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerResampleViewerControllerRequest)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerResampleViewerControllerRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ViewerControllerResampleViewerControllerRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, viewer_controller_),
           0,
           offsetof(Impl_, fixed_viewer_controller_) -
               offsetof(Impl_, viewer_controller_) +
               sizeof(Impl_::fixed_viewer_controller_));
}
ViewerControllerResampleViewerControllerRequest::~ViewerControllerResampleViewerControllerRequest() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerResampleViewerControllerRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ViewerControllerResampleViewerControllerRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.viewer_controller_;
  delete _impl_.fixed_viewer_controller_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ViewerControllerResampleViewerControllerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerResampleViewerControllerRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.viewer_controller_ != nullptr);
      _impl_.viewer_controller_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.fixed_viewer_controller_ != nullptr);
      _impl_.fixed_viewer_controller_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ViewerControllerResampleViewerControllerRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> ViewerControllerResampleViewerControllerRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ViewerControllerResampleViewerControllerRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ViewerControllerResampleViewerControllerRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .osirixgrpc.ViewerController fixed_viewer_controller = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(ViewerControllerResampleViewerControllerRequest, _impl_.fixed_viewer_controller_)}},
    // .osirixgrpc.ViewerController viewer_controller = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerResampleViewerControllerRequest, _impl_.viewer_controller_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osirixgrpc.ViewerController viewer_controller = 1;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerResampleViewerControllerRequest, _impl_.viewer_controller_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .osirixgrpc.ViewerController fixed_viewer_controller = 2;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerResampleViewerControllerRequest, _impl_.fixed_viewer_controller_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::ViewerController>()},
    {::_pbi::TcParser::GetTable<::osirixgrpc::ViewerController>()},
  }}, {{
  }},
};

::uint8_t* ViewerControllerResampleViewerControllerRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerResampleViewerControllerRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.ViewerController viewer_controller = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::viewer_controller(this),
        _Internal::viewer_controller(this).GetCachedSize(), target, stream);
  }

  // .osirixgrpc.ViewerController fixed_viewer_controller = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::fixed_viewer_controller(this),
        _Internal::fixed_viewer_controller(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerResampleViewerControllerRequest)
  return target;
}

::size_t ViewerControllerResampleViewerControllerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerResampleViewerControllerRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .osirixgrpc.ViewerController viewer_controller = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.viewer_controller_);
    }

    // .osirixgrpc.ViewerController fixed_viewer_controller = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.fixed_viewer_controller_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ViewerControllerResampleViewerControllerRequest::_class_data_ = {
    ViewerControllerResampleViewerControllerRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ViewerControllerResampleViewerControllerRequest::GetClassData() const {
  return &_class_data_;
}

void ViewerControllerResampleViewerControllerRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ViewerControllerResampleViewerControllerRequest*>(&to_msg);
  auto& from = static_cast<const ViewerControllerResampleViewerControllerRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerResampleViewerControllerRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_viewer_controller()->::osirixgrpc::ViewerController::MergeFrom(
          from._internal_viewer_controller());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_fixed_viewer_controller()->::osirixgrpc::ViewerController::MergeFrom(
          from._internal_fixed_viewer_controller());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ViewerControllerResampleViewerControllerRequest::CopyFrom(const ViewerControllerResampleViewerControllerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerResampleViewerControllerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ViewerControllerResampleViewerControllerRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ViewerControllerResampleViewerControllerRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ViewerControllerResampleViewerControllerRequest::InternalSwap(ViewerControllerResampleViewerControllerRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerResampleViewerControllerRequest, _impl_.fixed_viewer_controller_)
      + sizeof(ViewerControllerResampleViewerControllerRequest::_impl_.fixed_viewer_controller_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerResampleViewerControllerRequest, _impl_.viewer_controller_)>(
          reinterpret_cast<char*>(&_impl_.viewer_controller_),
          reinterpret_cast<char*>(&other->_impl_.viewer_controller_));
}

::google::protobuf::Metadata ViewerControllerResampleViewerControllerRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_viewercontroller_2eproto_getter, &descriptor_table_viewercontroller_2eproto_once,
      file_level_metadata_viewercontroller_2eproto[25]);
}
// ===================================================================

class ViewerControllerCopyViewerWindowRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ViewerControllerCopyViewerWindowRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ViewerControllerCopyViewerWindowRequest, _impl_._has_bits_);
  static const ::osirixgrpc::ViewerController& viewer_controller(const ViewerControllerCopyViewerWindowRequest* msg);
  static void set_has_viewer_controller(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osirixgrpc::ViewerController& ViewerControllerCopyViewerWindowRequest::_Internal::viewer_controller(const ViewerControllerCopyViewerWindowRequest* msg) {
  return *msg->_impl_.viewer_controller_;
}
void ViewerControllerCopyViewerWindowRequest::clear_viewer_controller() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.viewer_controller_ != nullptr) _impl_.viewer_controller_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ViewerControllerCopyViewerWindowRequest::ViewerControllerCopyViewerWindowRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerCopyViewerWindowRequest)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerCopyViewerWindowRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ViewerControllerCopyViewerWindowRequest::ViewerControllerCopyViewerWindowRequest(
    ::google::protobuf::Arena* arena,
    const ViewerControllerCopyViewerWindowRequest& from)
    : ::google::protobuf::Message(arena) {
  ViewerControllerCopyViewerWindowRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.viewer_controller_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::osirixgrpc::ViewerController>(arena, *from._impl_.viewer_controller_)
                : nullptr;
  _impl_.in_4d_ = from._impl_.in_4d_;

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerCopyViewerWindowRequest)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerCopyViewerWindowRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ViewerControllerCopyViewerWindowRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, viewer_controller_),
           0,
           offsetof(Impl_, in_4d_) -
               offsetof(Impl_, viewer_controller_) +
               sizeof(Impl_::in_4d_));
}
ViewerControllerCopyViewerWindowRequest::~ViewerControllerCopyViewerWindowRequest() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerCopyViewerWindowRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ViewerControllerCopyViewerWindowRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.viewer_controller_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ViewerControllerCopyViewerWindowRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerCopyViewerWindowRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.viewer_controller_ != nullptr);
    _impl_.viewer_controller_->Clear();
  }
  _impl_.in_4d_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ViewerControllerCopyViewerWindowRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ViewerControllerCopyViewerWindowRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ViewerControllerCopyViewerWindowRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ViewerControllerCopyViewerWindowRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool in_4d = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ViewerControllerCopyViewerWindowRequest, _impl_.in_4d_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerCopyViewerWindowRequest, _impl_.in_4d_)}},
    // .osirixgrpc.ViewerController viewer_controller = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerCopyViewerWindowRequest, _impl_.viewer_controller_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osirixgrpc.ViewerController viewer_controller = 1;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerCopyViewerWindowRequest, _impl_.viewer_controller_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool in_4d = 2;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerCopyViewerWindowRequest, _impl_.in_4d_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::ViewerController>()},
  }}, {{
  }},
};

::uint8_t* ViewerControllerCopyViewerWindowRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerCopyViewerWindowRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.ViewerController viewer_controller = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::viewer_controller(this),
        _Internal::viewer_controller(this).GetCachedSize(), target, stream);
  }

  // bool in_4d = 2;
  if (this->_internal_in_4d() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_in_4d(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerCopyViewerWindowRequest)
  return target;
}

::size_t ViewerControllerCopyViewerWindowRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerCopyViewerWindowRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.ViewerController viewer_controller = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.viewer_controller_);
  }

  // bool in_4d = 2;
  if (this->_internal_in_4d() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ViewerControllerCopyViewerWindowRequest::_class_data_ = {
    ViewerControllerCopyViewerWindowRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ViewerControllerCopyViewerWindowRequest::GetClassData() const {
  return &_class_data_;
}

void ViewerControllerCopyViewerWindowRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ViewerControllerCopyViewerWindowRequest*>(&to_msg);
  auto& from = static_cast<const ViewerControllerCopyViewerWindowRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerCopyViewerWindowRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_viewer_controller()->::osirixgrpc::ViewerController::MergeFrom(
        from._internal_viewer_controller());
  }
  if (from._internal_in_4d() != 0) {
    _this->_internal_set_in_4d(from._internal_in_4d());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ViewerControllerCopyViewerWindowRequest::CopyFrom(const ViewerControllerCopyViewerWindowRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerCopyViewerWindowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ViewerControllerCopyViewerWindowRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ViewerControllerCopyViewerWindowRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ViewerControllerCopyViewerWindowRequest::InternalSwap(ViewerControllerCopyViewerWindowRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerCopyViewerWindowRequest, _impl_.in_4d_)
      + sizeof(ViewerControllerCopyViewerWindowRequest::_impl_.in_4d_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerCopyViewerWindowRequest, _impl_.viewer_controller_)>(
          reinterpret_cast<char*>(&_impl_.viewer_controller_),
          reinterpret_cast<char*>(&other->_impl_.viewer_controller_));
}

::google::protobuf::Metadata ViewerControllerCopyViewerWindowRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_viewercontroller_2eproto_getter, &descriptor_table_viewercontroller_2eproto_once,
      file_level_metadata_viewercontroller_2eproto[26]);
}
// ===================================================================

class ViewerControllerSetMovieIdxRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ViewerControllerSetMovieIdxRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ViewerControllerSetMovieIdxRequest, _impl_._has_bits_);
  static const ::osirixgrpc::ViewerController& viewer_controller(const ViewerControllerSetMovieIdxRequest* msg);
  static void set_has_viewer_controller(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osirixgrpc::ViewerController& ViewerControllerSetMovieIdxRequest::_Internal::viewer_controller(const ViewerControllerSetMovieIdxRequest* msg) {
  return *msg->_impl_.viewer_controller_;
}
void ViewerControllerSetMovieIdxRequest::clear_viewer_controller() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.viewer_controller_ != nullptr) _impl_.viewer_controller_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ViewerControllerSetMovieIdxRequest::ViewerControllerSetMovieIdxRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerSetMovieIdxRequest)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerSetMovieIdxRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ViewerControllerSetMovieIdxRequest::ViewerControllerSetMovieIdxRequest(
    ::google::protobuf::Arena* arena,
    const ViewerControllerSetMovieIdxRequest& from)
    : ::google::protobuf::Message(arena) {
  ViewerControllerSetMovieIdxRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.viewer_controller_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::osirixgrpc::ViewerController>(arena, *from._impl_.viewer_controller_)
                : nullptr;
  _impl_.movie_idx_ = from._impl_.movie_idx_;

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerSetMovieIdxRequest)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerSetMovieIdxRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ViewerControllerSetMovieIdxRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, viewer_controller_),
           0,
           offsetof(Impl_, movie_idx_) -
               offsetof(Impl_, viewer_controller_) +
               sizeof(Impl_::movie_idx_));
}
ViewerControllerSetMovieIdxRequest::~ViewerControllerSetMovieIdxRequest() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerSetMovieIdxRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ViewerControllerSetMovieIdxRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.viewer_controller_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ViewerControllerSetMovieIdxRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerSetMovieIdxRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.viewer_controller_ != nullptr);
    _impl_.viewer_controller_->Clear();
  }
  _impl_.movie_idx_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ViewerControllerSetMovieIdxRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ViewerControllerSetMovieIdxRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ViewerControllerSetMovieIdxRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ViewerControllerSetMovieIdxRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 movie_idx = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ViewerControllerSetMovieIdxRequest, _impl_.movie_idx_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerSetMovieIdxRequest, _impl_.movie_idx_)}},
    // .osirixgrpc.ViewerController viewer_controller = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerSetMovieIdxRequest, _impl_.viewer_controller_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osirixgrpc.ViewerController viewer_controller = 1;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerSetMovieIdxRequest, _impl_.viewer_controller_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 movie_idx = 2;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerSetMovieIdxRequest, _impl_.movie_idx_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::ViewerController>()},
  }}, {{
  }},
};

::uint8_t* ViewerControllerSetMovieIdxRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerSetMovieIdxRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.ViewerController viewer_controller = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::viewer_controller(this),
        _Internal::viewer_controller(this).GetCachedSize(), target, stream);
  }

  // int32 movie_idx = 2;
  if (this->_internal_movie_idx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_movie_idx(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerSetMovieIdxRequest)
  return target;
}

::size_t ViewerControllerSetMovieIdxRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerSetMovieIdxRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.ViewerController viewer_controller = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.viewer_controller_);
  }

  // int32 movie_idx = 2;
  if (this->_internal_movie_idx() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_movie_idx());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ViewerControllerSetMovieIdxRequest::_class_data_ = {
    ViewerControllerSetMovieIdxRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ViewerControllerSetMovieIdxRequest::GetClassData() const {
  return &_class_data_;
}

void ViewerControllerSetMovieIdxRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ViewerControllerSetMovieIdxRequest*>(&to_msg);
  auto& from = static_cast<const ViewerControllerSetMovieIdxRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerSetMovieIdxRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_viewer_controller()->::osirixgrpc::ViewerController::MergeFrom(
        from._internal_viewer_controller());
  }
  if (from._internal_movie_idx() != 0) {
    _this->_internal_set_movie_idx(from._internal_movie_idx());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ViewerControllerSetMovieIdxRequest::CopyFrom(const ViewerControllerSetMovieIdxRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerSetMovieIdxRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ViewerControllerSetMovieIdxRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ViewerControllerSetMovieIdxRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ViewerControllerSetMovieIdxRequest::InternalSwap(ViewerControllerSetMovieIdxRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerSetMovieIdxRequest, _impl_.movie_idx_)
      + sizeof(ViewerControllerSetMovieIdxRequest::_impl_.movie_idx_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerSetMovieIdxRequest, _impl_.viewer_controller_)>(
          reinterpret_cast<char*>(&_impl_.viewer_controller_),
          reinterpret_cast<char*>(&other->_impl_.viewer_controller_));
}

::google::protobuf::Metadata ViewerControllerSetMovieIdxRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_viewercontroller_2eproto_getter, &descriptor_table_viewercontroller_2eproto_once,
      file_level_metadata_viewercontroller_2eproto[27]);
}
// ===================================================================

class ViewerControllerIsDataVolumicRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ViewerControllerIsDataVolumicRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ViewerControllerIsDataVolumicRequest, _impl_._has_bits_);
  static const ::osirixgrpc::ViewerController& viewer_controller(const ViewerControllerIsDataVolumicRequest* msg);
  static void set_has_viewer_controller(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osirixgrpc::ViewerController& ViewerControllerIsDataVolumicRequest::_Internal::viewer_controller(const ViewerControllerIsDataVolumicRequest* msg) {
  return *msg->_impl_.viewer_controller_;
}
void ViewerControllerIsDataVolumicRequest::clear_viewer_controller() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.viewer_controller_ != nullptr) _impl_.viewer_controller_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ViewerControllerIsDataVolumicRequest::ViewerControllerIsDataVolumicRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerIsDataVolumicRequest)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerIsDataVolumicRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ViewerControllerIsDataVolumicRequest::ViewerControllerIsDataVolumicRequest(
    ::google::protobuf::Arena* arena,
    const ViewerControllerIsDataVolumicRequest& from)
    : ::google::protobuf::Message(arena) {
  ViewerControllerIsDataVolumicRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.viewer_controller_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::osirixgrpc::ViewerController>(arena, *from._impl_.viewer_controller_)
                : nullptr;
  _impl_.in_4d_ = from._impl_.in_4d_;

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerIsDataVolumicRequest)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerIsDataVolumicRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ViewerControllerIsDataVolumicRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, viewer_controller_),
           0,
           offsetof(Impl_, in_4d_) -
               offsetof(Impl_, viewer_controller_) +
               sizeof(Impl_::in_4d_));
}
ViewerControllerIsDataVolumicRequest::~ViewerControllerIsDataVolumicRequest() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerIsDataVolumicRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ViewerControllerIsDataVolumicRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.viewer_controller_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ViewerControllerIsDataVolumicRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerIsDataVolumicRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.viewer_controller_ != nullptr);
    _impl_.viewer_controller_->Clear();
  }
  _impl_.in_4d_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ViewerControllerIsDataVolumicRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ViewerControllerIsDataVolumicRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ViewerControllerIsDataVolumicRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ViewerControllerIsDataVolumicRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool in_4d = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ViewerControllerIsDataVolumicRequest, _impl_.in_4d_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerIsDataVolumicRequest, _impl_.in_4d_)}},
    // .osirixgrpc.ViewerController viewer_controller = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerIsDataVolumicRequest, _impl_.viewer_controller_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osirixgrpc.ViewerController viewer_controller = 1;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerIsDataVolumicRequest, _impl_.viewer_controller_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool in_4d = 2;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerIsDataVolumicRequest, _impl_.in_4d_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::ViewerController>()},
  }}, {{
  }},
};

::uint8_t* ViewerControllerIsDataVolumicRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerIsDataVolumicRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.ViewerController viewer_controller = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::viewer_controller(this),
        _Internal::viewer_controller(this).GetCachedSize(), target, stream);
  }

  // bool in_4d = 2;
  if (this->_internal_in_4d() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_in_4d(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerIsDataVolumicRequest)
  return target;
}

::size_t ViewerControllerIsDataVolumicRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerIsDataVolumicRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.ViewerController viewer_controller = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.viewer_controller_);
  }

  // bool in_4d = 2;
  if (this->_internal_in_4d() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ViewerControllerIsDataVolumicRequest::_class_data_ = {
    ViewerControllerIsDataVolumicRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ViewerControllerIsDataVolumicRequest::GetClassData() const {
  return &_class_data_;
}

void ViewerControllerIsDataVolumicRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ViewerControllerIsDataVolumicRequest*>(&to_msg);
  auto& from = static_cast<const ViewerControllerIsDataVolumicRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerIsDataVolumicRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_viewer_controller()->::osirixgrpc::ViewerController::MergeFrom(
        from._internal_viewer_controller());
  }
  if (from._internal_in_4d() != 0) {
    _this->_internal_set_in_4d(from._internal_in_4d());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ViewerControllerIsDataVolumicRequest::CopyFrom(const ViewerControllerIsDataVolumicRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerIsDataVolumicRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ViewerControllerIsDataVolumicRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ViewerControllerIsDataVolumicRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ViewerControllerIsDataVolumicRequest::InternalSwap(ViewerControllerIsDataVolumicRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerIsDataVolumicRequest, _impl_.in_4d_)
      + sizeof(ViewerControllerIsDataVolumicRequest::_impl_.in_4d_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerIsDataVolumicRequest, _impl_.viewer_controller_)>(
          reinterpret_cast<char*>(&_impl_.viewer_controller_),
          reinterpret_cast<char*>(&other->_impl_.viewer_controller_));
}

::google::protobuf::Metadata ViewerControllerIsDataVolumicRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_viewercontroller_2eproto_getter, &descriptor_table_viewercontroller_2eproto_once,
      file_level_metadata_viewercontroller_2eproto[28]);
}
// ===================================================================

class ViewerControllerSetIdxRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ViewerControllerSetIdxRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ViewerControllerSetIdxRequest, _impl_._has_bits_);
  static const ::osirixgrpc::ViewerController& viewer_controller(const ViewerControllerSetIdxRequest* msg);
  static void set_has_viewer_controller(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osirixgrpc::ViewerController& ViewerControllerSetIdxRequest::_Internal::viewer_controller(const ViewerControllerSetIdxRequest* msg) {
  return *msg->_impl_.viewer_controller_;
}
void ViewerControllerSetIdxRequest::clear_viewer_controller() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.viewer_controller_ != nullptr) _impl_.viewer_controller_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ViewerControllerSetIdxRequest::ViewerControllerSetIdxRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerSetIdxRequest)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerSetIdxRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ViewerControllerSetIdxRequest::ViewerControllerSetIdxRequest(
    ::google::protobuf::Arena* arena,
    const ViewerControllerSetIdxRequest& from)
    : ::google::protobuf::Message(arena) {
  ViewerControllerSetIdxRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.viewer_controller_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::osirixgrpc::ViewerController>(arena, *from._impl_.viewer_controller_)
                : nullptr;
  _impl_.idx_ = from._impl_.idx_;

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerSetIdxRequest)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerSetIdxRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ViewerControllerSetIdxRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, viewer_controller_),
           0,
           offsetof(Impl_, idx_) -
               offsetof(Impl_, viewer_controller_) +
               sizeof(Impl_::idx_));
}
ViewerControllerSetIdxRequest::~ViewerControllerSetIdxRequest() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerSetIdxRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ViewerControllerSetIdxRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.viewer_controller_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ViewerControllerSetIdxRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerSetIdxRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.viewer_controller_ != nullptr);
    _impl_.viewer_controller_->Clear();
  }
  _impl_.idx_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ViewerControllerSetIdxRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ViewerControllerSetIdxRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ViewerControllerSetIdxRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ViewerControllerSetIdxRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 idx = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ViewerControllerSetIdxRequest, _impl_.idx_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerSetIdxRequest, _impl_.idx_)}},
    // .osirixgrpc.ViewerController viewer_controller = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerSetIdxRequest, _impl_.viewer_controller_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osirixgrpc.ViewerController viewer_controller = 1;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerSetIdxRequest, _impl_.viewer_controller_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 idx = 2;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerSetIdxRequest, _impl_.idx_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::ViewerController>()},
  }}, {{
  }},
};

::uint8_t* ViewerControllerSetIdxRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerSetIdxRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.ViewerController viewer_controller = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::viewer_controller(this),
        _Internal::viewer_controller(this).GetCachedSize(), target, stream);
  }

  // int32 idx = 2;
  if (this->_internal_idx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_idx(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerSetIdxRequest)
  return target;
}

::size_t ViewerControllerSetIdxRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerSetIdxRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.ViewerController viewer_controller = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.viewer_controller_);
  }

  // int32 idx = 2;
  if (this->_internal_idx() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_idx());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ViewerControllerSetIdxRequest::_class_data_ = {
    ViewerControllerSetIdxRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ViewerControllerSetIdxRequest::GetClassData() const {
  return &_class_data_;
}

void ViewerControllerSetIdxRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ViewerControllerSetIdxRequest*>(&to_msg);
  auto& from = static_cast<const ViewerControllerSetIdxRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerSetIdxRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_viewer_controller()->::osirixgrpc::ViewerController::MergeFrom(
        from._internal_viewer_controller());
  }
  if (from._internal_idx() != 0) {
    _this->_internal_set_idx(from._internal_idx());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ViewerControllerSetIdxRequest::CopyFrom(const ViewerControllerSetIdxRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerSetIdxRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ViewerControllerSetIdxRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ViewerControllerSetIdxRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ViewerControllerSetIdxRequest::InternalSwap(ViewerControllerSetIdxRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerSetIdxRequest, _impl_.idx_)
      + sizeof(ViewerControllerSetIdxRequest::_impl_.idx_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerSetIdxRequest, _impl_.viewer_controller_)>(
          reinterpret_cast<char*>(&_impl_.viewer_controller_),
          reinterpret_cast<char*>(&other->_impl_.viewer_controller_));
}

::google::protobuf::Metadata ViewerControllerSetIdxRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_viewercontroller_2eproto_getter, &descriptor_table_viewercontroller_2eproto_once,
      file_level_metadata_viewercontroller_2eproto[29]);
}
// ===================================================================

class ViewerControllerSetWLWWRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ViewerControllerSetWLWWRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ViewerControllerSetWLWWRequest, _impl_._has_bits_);
  static const ::osirixgrpc::ViewerController& viewer_controller(const ViewerControllerSetWLWWRequest* msg);
  static void set_has_viewer_controller(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osirixgrpc::ViewerController& ViewerControllerSetWLWWRequest::_Internal::viewer_controller(const ViewerControllerSetWLWWRequest* msg) {
  return *msg->_impl_.viewer_controller_;
}
void ViewerControllerSetWLWWRequest::clear_viewer_controller() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.viewer_controller_ != nullptr) _impl_.viewer_controller_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ViewerControllerSetWLWWRequest::ViewerControllerSetWLWWRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerSetWLWWRequest)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerSetWLWWRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ViewerControllerSetWLWWRequest::ViewerControllerSetWLWWRequest(
    ::google::protobuf::Arena* arena,
    const ViewerControllerSetWLWWRequest& from)
    : ::google::protobuf::Message(arena) {
  ViewerControllerSetWLWWRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.viewer_controller_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::osirixgrpc::ViewerController>(arena, *from._impl_.viewer_controller_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, wl_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, wl_),
           offsetof(Impl_, ww_) -
               offsetof(Impl_, wl_) +
               sizeof(Impl_::ww_));

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerSetWLWWRequest)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerSetWLWWRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ViewerControllerSetWLWWRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, viewer_controller_),
           0,
           offsetof(Impl_, ww_) -
               offsetof(Impl_, viewer_controller_) +
               sizeof(Impl_::ww_));
}
ViewerControllerSetWLWWRequest::~ViewerControllerSetWLWWRequest() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerSetWLWWRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ViewerControllerSetWLWWRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.viewer_controller_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ViewerControllerSetWLWWRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerSetWLWWRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.viewer_controller_ != nullptr);
    _impl_.viewer_controller_->Clear();
  }
  ::memset(&_impl_.wl_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.ww_) -
      reinterpret_cast<char*>(&_impl_.wl_)) + sizeof(_impl_.ww_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ViewerControllerSetWLWWRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> ViewerControllerSetWLWWRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ViewerControllerSetWLWWRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ViewerControllerSetWLWWRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .osirixgrpc.ViewerController viewer_controller = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerSetWLWWRequest, _impl_.viewer_controller_)}},
    // float wl = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerSetWLWWRequest, _impl_.wl_)}},
    // float ww = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerSetWLWWRequest, _impl_.ww_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osirixgrpc.ViewerController viewer_controller = 1;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerSetWLWWRequest, _impl_.viewer_controller_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // float wl = 2;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerSetWLWWRequest, _impl_.wl_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float ww = 3;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerSetWLWWRequest, _impl_.ww_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::ViewerController>()},
  }}, {{
  }},
};

::uint8_t* ViewerControllerSetWLWWRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerSetWLWWRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.ViewerController viewer_controller = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::viewer_controller(this),
        _Internal::viewer_controller(this).GetCachedSize(), target, stream);
  }

  // float wl = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_wl = this->_internal_wl();
  ::uint32_t raw_wl;
  memcpy(&raw_wl, &tmp_wl, sizeof(tmp_wl));
  if (raw_wl != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_wl(), target);
  }

  // float ww = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_ww = this->_internal_ww();
  ::uint32_t raw_ww;
  memcpy(&raw_ww, &tmp_ww, sizeof(tmp_ww));
  if (raw_ww != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_ww(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerSetWLWWRequest)
  return target;
}

::size_t ViewerControllerSetWLWWRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerSetWLWWRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.ViewerController viewer_controller = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.viewer_controller_);
  }

  // float wl = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_wl = this->_internal_wl();
  ::uint32_t raw_wl;
  memcpy(&raw_wl, &tmp_wl, sizeof(tmp_wl));
  if (raw_wl != 0) {
    total_size += 5;
  }

  // float ww = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_ww = this->_internal_ww();
  ::uint32_t raw_ww;
  memcpy(&raw_ww, &tmp_ww, sizeof(tmp_ww));
  if (raw_ww != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ViewerControllerSetWLWWRequest::_class_data_ = {
    ViewerControllerSetWLWWRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ViewerControllerSetWLWWRequest::GetClassData() const {
  return &_class_data_;
}

void ViewerControllerSetWLWWRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ViewerControllerSetWLWWRequest*>(&to_msg);
  auto& from = static_cast<const ViewerControllerSetWLWWRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerSetWLWWRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_viewer_controller()->::osirixgrpc::ViewerController::MergeFrom(
        from._internal_viewer_controller());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_wl = from._internal_wl();
  ::uint32_t raw_wl;
  memcpy(&raw_wl, &tmp_wl, sizeof(tmp_wl));
  if (raw_wl != 0) {
    _this->_internal_set_wl(from._internal_wl());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_ww = from._internal_ww();
  ::uint32_t raw_ww;
  memcpy(&raw_ww, &tmp_ww, sizeof(tmp_ww));
  if (raw_ww != 0) {
    _this->_internal_set_ww(from._internal_ww());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ViewerControllerSetWLWWRequest::CopyFrom(const ViewerControllerSetWLWWRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerSetWLWWRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ViewerControllerSetWLWWRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ViewerControllerSetWLWWRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ViewerControllerSetWLWWRequest::InternalSwap(ViewerControllerSetWLWWRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerSetWLWWRequest, _impl_.ww_)
      + sizeof(ViewerControllerSetWLWWRequest::_impl_.ww_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerSetWLWWRequest, _impl_.viewer_controller_)>(
          reinterpret_cast<char*>(&_impl_.viewer_controller_),
          reinterpret_cast<char*>(&other->_impl_.viewer_controller_));
}

::google::protobuf::Metadata ViewerControllerSetWLWWRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_viewercontroller_2eproto_getter, &descriptor_table_viewercontroller_2eproto_once,
      file_level_metadata_viewercontroller_2eproto[30]);
}
// ===================================================================

class ViewerControllerOpenVRViewerForModeRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ViewerControllerOpenVRViewerForModeRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ViewerControllerOpenVRViewerForModeRequest, _impl_._has_bits_);
  static const ::osirixgrpc::ViewerController& viewer_controller(const ViewerControllerOpenVRViewerForModeRequest* msg);
  static void set_has_viewer_controller(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osirixgrpc::ViewerController& ViewerControllerOpenVRViewerForModeRequest::_Internal::viewer_controller(const ViewerControllerOpenVRViewerForModeRequest* msg) {
  return *msg->_impl_.viewer_controller_;
}
void ViewerControllerOpenVRViewerForModeRequest::clear_viewer_controller() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.viewer_controller_ != nullptr) _impl_.viewer_controller_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ViewerControllerOpenVRViewerForModeRequest::ViewerControllerOpenVRViewerForModeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerOpenVRViewerForModeRequest)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerOpenVRViewerForModeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        mode_(arena, from.mode_) {}

ViewerControllerOpenVRViewerForModeRequest::ViewerControllerOpenVRViewerForModeRequest(
    ::google::protobuf::Arena* arena,
    const ViewerControllerOpenVRViewerForModeRequest& from)
    : ::google::protobuf::Message(arena) {
  ViewerControllerOpenVRViewerForModeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.viewer_controller_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::osirixgrpc::ViewerController>(arena, *from._impl_.viewer_controller_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerOpenVRViewerForModeRequest)
}
inline PROTOBUF_NDEBUG_INLINE ViewerControllerOpenVRViewerForModeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mode_(arena) {}

inline void ViewerControllerOpenVRViewerForModeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.viewer_controller_ = {};
}
ViewerControllerOpenVRViewerForModeRequest::~ViewerControllerOpenVRViewerForModeRequest() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerOpenVRViewerForModeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ViewerControllerOpenVRViewerForModeRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.mode_.Destroy();
  delete _impl_.viewer_controller_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ViewerControllerOpenVRViewerForModeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerOpenVRViewerForModeRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mode_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.viewer_controller_ != nullptr);
    _impl_.viewer_controller_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ViewerControllerOpenVRViewerForModeRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 66, 2> ViewerControllerOpenVRViewerForModeRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ViewerControllerOpenVRViewerForModeRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ViewerControllerOpenVRViewerForModeRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string mode = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerOpenVRViewerForModeRequest, _impl_.mode_)}},
    // .osirixgrpc.ViewerController viewer_controller = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ViewerControllerOpenVRViewerForModeRequest, _impl_.viewer_controller_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osirixgrpc.ViewerController viewer_controller = 1;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerOpenVRViewerForModeRequest, _impl_.viewer_controller_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string mode = 2;
    {PROTOBUF_FIELD_OFFSET(ViewerControllerOpenVRViewerForModeRequest, _impl_.mode_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::ViewerController>()},
  }}, {{
    "\65\0\4\0\0\0\0\0"
    "osirixgrpc.ViewerControllerOpenVRViewerForModeRequest"
    "mode"
  }},
};

::uint8_t* ViewerControllerOpenVRViewerForModeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerOpenVRViewerForModeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.ViewerController viewer_controller = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::viewer_controller(this),
        _Internal::viewer_controller(this).GetCachedSize(), target, stream);
  }

  // string mode = 2;
  if (!this->_internal_mode().empty()) {
    const std::string& _s = this->_internal_mode();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "osirixgrpc.ViewerControllerOpenVRViewerForModeRequest.mode");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerOpenVRViewerForModeRequest)
  return target;
}

::size_t ViewerControllerOpenVRViewerForModeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerOpenVRViewerForModeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mode = 2;
  if (!this->_internal_mode().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_mode());
  }

  // .osirixgrpc.ViewerController viewer_controller = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.viewer_controller_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ViewerControllerOpenVRViewerForModeRequest::_class_data_ = {
    ViewerControllerOpenVRViewerForModeRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ViewerControllerOpenVRViewerForModeRequest::GetClassData() const {
  return &_class_data_;
}

void ViewerControllerOpenVRViewerForModeRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ViewerControllerOpenVRViewerForModeRequest*>(&to_msg);
  auto& from = static_cast<const ViewerControllerOpenVRViewerForModeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerOpenVRViewerForModeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_mode().empty()) {
    _this->_internal_set_mode(from._internal_mode());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_viewer_controller()->::osirixgrpc::ViewerController::MergeFrom(
        from._internal_viewer_controller());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ViewerControllerOpenVRViewerForModeRequest::CopyFrom(const ViewerControllerOpenVRViewerForModeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerOpenVRViewerForModeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ViewerControllerOpenVRViewerForModeRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ViewerControllerOpenVRViewerForModeRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ViewerControllerOpenVRViewerForModeRequest::InternalSwap(ViewerControllerOpenVRViewerForModeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.mode_, &other->_impl_.mode_, arena);
  swap(_impl_.viewer_controller_, other->_impl_.viewer_controller_);
}

::google::protobuf::Metadata ViewerControllerOpenVRViewerForModeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_viewercontroller_2eproto_getter, &descriptor_table_viewercontroller_2eproto_once,
      file_level_metadata_viewercontroller_2eproto[31]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace osirixgrpc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
