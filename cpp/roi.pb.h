// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: roi.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_roi_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_roi_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "utilities.pb.h"
#include "types.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_roi_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_roi_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_roi_2eproto;
namespace osirixgrpc {
class ROIAreaResponse;
struct ROIAreaResponseDefaultTypeInternal;
extern ROIAreaResponseDefaultTypeInternal _ROIAreaResponse_default_instance_;
class ROICentroidResponse;
struct ROICentroidResponseDefaultTypeInternal;
extern ROICentroidResponseDefaultTypeInternal _ROICentroidResponse_default_instance_;
class ROIColorResponse;
struct ROIColorResponseDefaultTypeInternal;
extern ROIColorResponseDefaultTypeInternal _ROIColorResponse_default_instance_;
class ROIITypeResponse;
struct ROIITypeResponseDefaultTypeInternal;
extern ROIITypeResponseDefaultTypeInternal _ROIITypeResponse_default_instance_;
class ROIMoveRequest;
struct ROIMoveRequestDefaultTypeInternal;
extern ROIMoveRequestDefaultTypeInternal _ROIMoveRequest_default_instance_;
class ROINameResponse;
struct ROINameResponseDefaultTypeInternal;
extern ROINameResponseDefaultTypeInternal _ROINameResponse_default_instance_;
class ROIOpacityResponse;
struct ROIOpacityResponseDefaultTypeInternal;
extern ROIOpacityResponseDefaultTypeInternal _ROIOpacityResponse_default_instance_;
class ROIPixResponse;
struct ROIPixResponseDefaultTypeInternal;
extern ROIPixResponseDefaultTypeInternal _ROIPixResponse_default_instance_;
class ROIPointsResponse;
struct ROIPointsResponseDefaultTypeInternal;
extern ROIPointsResponseDefaultTypeInternal _ROIPointsResponse_default_instance_;
class ROIPointsResponse_Point2D;
struct ROIPointsResponse_Point2DDefaultTypeInternal;
extern ROIPointsResponse_Point2DDefaultTypeInternal _ROIPointsResponse_Point2D_default_instance_;
class ROIRotateRequest;
struct ROIRotateRequestDefaultTypeInternal;
extern ROIRotateRequestDefaultTypeInternal _ROIRotateRequest_default_instance_;
class ROISetColorRequest;
struct ROISetColorRequestDefaultTypeInternal;
extern ROISetColorRequestDefaultTypeInternal _ROISetColorRequest_default_instance_;
class ROISetNameRequest;
struct ROISetNameRequestDefaultTypeInternal;
extern ROISetNameRequestDefaultTypeInternal _ROISetNameRequest_default_instance_;
class ROISetOpacityRequest;
struct ROISetOpacityRequestDefaultTypeInternal;
extern ROISetOpacityRequestDefaultTypeInternal _ROISetOpacityRequest_default_instance_;
class ROISetPointsRequest;
struct ROISetPointsRequestDefaultTypeInternal;
extern ROISetPointsRequestDefaultTypeInternal _ROISetPointsRequest_default_instance_;
class ROISetPointsRequest_Point2D;
struct ROISetPointsRequest_Point2DDefaultTypeInternal;
extern ROISetPointsRequest_Point2DDefaultTypeInternal _ROISetPointsRequest_Point2D_default_instance_;
class ROISetThicknessRequest;
struct ROISetThicknessRequestDefaultTypeInternal;
extern ROISetThicknessRequestDefaultTypeInternal _ROISetThicknessRequest_default_instance_;
class ROIThicknessResponse;
struct ROIThicknessResponseDefaultTypeInternal;
extern ROIThicknessResponseDefaultTypeInternal _ROIThicknessResponse_default_instance_;
}  // namespace osirixgrpc
PROTOBUF_NAMESPACE_OPEN
template <>
::osirixgrpc::ROIAreaResponse* Arena::CreateMaybeMessage<::osirixgrpc::ROIAreaResponse>(Arena*);
template <>
::osirixgrpc::ROICentroidResponse* Arena::CreateMaybeMessage<::osirixgrpc::ROICentroidResponse>(Arena*);
template <>
::osirixgrpc::ROIColorResponse* Arena::CreateMaybeMessage<::osirixgrpc::ROIColorResponse>(Arena*);
template <>
::osirixgrpc::ROIITypeResponse* Arena::CreateMaybeMessage<::osirixgrpc::ROIITypeResponse>(Arena*);
template <>
::osirixgrpc::ROIMoveRequest* Arena::CreateMaybeMessage<::osirixgrpc::ROIMoveRequest>(Arena*);
template <>
::osirixgrpc::ROINameResponse* Arena::CreateMaybeMessage<::osirixgrpc::ROINameResponse>(Arena*);
template <>
::osirixgrpc::ROIOpacityResponse* Arena::CreateMaybeMessage<::osirixgrpc::ROIOpacityResponse>(Arena*);
template <>
::osirixgrpc::ROIPixResponse* Arena::CreateMaybeMessage<::osirixgrpc::ROIPixResponse>(Arena*);
template <>
::osirixgrpc::ROIPointsResponse* Arena::CreateMaybeMessage<::osirixgrpc::ROIPointsResponse>(Arena*);
template <>
::osirixgrpc::ROIPointsResponse_Point2D* Arena::CreateMaybeMessage<::osirixgrpc::ROIPointsResponse_Point2D>(Arena*);
template <>
::osirixgrpc::ROIRotateRequest* Arena::CreateMaybeMessage<::osirixgrpc::ROIRotateRequest>(Arena*);
template <>
::osirixgrpc::ROISetColorRequest* Arena::CreateMaybeMessage<::osirixgrpc::ROISetColorRequest>(Arena*);
template <>
::osirixgrpc::ROISetNameRequest* Arena::CreateMaybeMessage<::osirixgrpc::ROISetNameRequest>(Arena*);
template <>
::osirixgrpc::ROISetOpacityRequest* Arena::CreateMaybeMessage<::osirixgrpc::ROISetOpacityRequest>(Arena*);
template <>
::osirixgrpc::ROISetPointsRequest* Arena::CreateMaybeMessage<::osirixgrpc::ROISetPointsRequest>(Arena*);
template <>
::osirixgrpc::ROISetPointsRequest_Point2D* Arena::CreateMaybeMessage<::osirixgrpc::ROISetPointsRequest_Point2D>(Arena*);
template <>
::osirixgrpc::ROISetThicknessRequest* Arena::CreateMaybeMessage<::osirixgrpc::ROISetThicknessRequest>(Arena*);
template <>
::osirixgrpc::ROIThicknessResponse* Arena::CreateMaybeMessage<::osirixgrpc::ROIThicknessResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace osirixgrpc {

// ===================================================================


// -------------------------------------------------------------------

class ROIAreaResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.ROIAreaResponse) */ {
 public:
  inline ROIAreaResponse() : ROIAreaResponse(nullptr) {}
  ~ROIAreaResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ROIAreaResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ROIAreaResponse(const ROIAreaResponse& from);
  ROIAreaResponse(ROIAreaResponse&& from) noexcept
    : ROIAreaResponse() {
    *this = ::std::move(from);
  }

  inline ROIAreaResponse& operator=(const ROIAreaResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ROIAreaResponse& operator=(ROIAreaResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ROIAreaResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ROIAreaResponse* internal_default_instance() {
    return reinterpret_cast<const ROIAreaResponse*>(
               &_ROIAreaResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ROIAreaResponse& a, ROIAreaResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ROIAreaResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ROIAreaResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ROIAreaResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ROIAreaResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ROIAreaResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ROIAreaResponse& from) {
    ROIAreaResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ROIAreaResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.ROIAreaResponse";
  }
  protected:
  explicit ROIAreaResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kAreaFieldNumber = 2,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::osirixgrpc::Status& status() const;
  PROTOBUF_NODISCARD ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();
  // float area = 2;
  void clear_area() ;
  float area() const;
  void set_area(float value);

  private:
  float _internal_area() const;
  void _internal_set_area(float value);

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.ROIAreaResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::osirixgrpc::Status* status_;
    float area_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_roi_2eproto;
};// -------------------------------------------------------------------

class ROICentroidResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.ROICentroidResponse) */ {
 public:
  inline ROICentroidResponse() : ROICentroidResponse(nullptr) {}
  ~ROICentroidResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ROICentroidResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ROICentroidResponse(const ROICentroidResponse& from);
  ROICentroidResponse(ROICentroidResponse&& from) noexcept
    : ROICentroidResponse() {
    *this = ::std::move(from);
  }

  inline ROICentroidResponse& operator=(const ROICentroidResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ROICentroidResponse& operator=(ROICentroidResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ROICentroidResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ROICentroidResponse* internal_default_instance() {
    return reinterpret_cast<const ROICentroidResponse*>(
               &_ROICentroidResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ROICentroidResponse& a, ROICentroidResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ROICentroidResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ROICentroidResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ROICentroidResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ROICentroidResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ROICentroidResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ROICentroidResponse& from) {
    ROICentroidResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ROICentroidResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.ROICentroidResponse";
  }
  protected:
  explicit ROICentroidResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kXFieldNumber = 2,
    kYFieldNumber = 3,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::osirixgrpc::Status& status() const;
  PROTOBUF_NODISCARD ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();
  // float x = 2;
  void clear_x() ;
  float x() const;
  void set_x(float value);

  private:
  float _internal_x() const;
  void _internal_set_x(float value);

  public:
  // float y = 3;
  void clear_y() ;
  float y() const;
  void set_y(float value);

  private:
  float _internal_y() const;
  void _internal_set_y(float value);

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.ROICentroidResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::osirixgrpc::Status* status_;
    float x_;
    float y_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_roi_2eproto;
};// -------------------------------------------------------------------

class ROIPixResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.ROIPixResponse) */ {
 public:
  inline ROIPixResponse() : ROIPixResponse(nullptr) {}
  ~ROIPixResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ROIPixResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ROIPixResponse(const ROIPixResponse& from);
  ROIPixResponse(ROIPixResponse&& from) noexcept
    : ROIPixResponse() {
    *this = ::std::move(from);
  }

  inline ROIPixResponse& operator=(const ROIPixResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ROIPixResponse& operator=(ROIPixResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ROIPixResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ROIPixResponse* internal_default_instance() {
    return reinterpret_cast<const ROIPixResponse*>(
               &_ROIPixResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ROIPixResponse& a, ROIPixResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ROIPixResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ROIPixResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ROIPixResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ROIPixResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ROIPixResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ROIPixResponse& from) {
    ROIPixResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ROIPixResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.ROIPixResponse";
  }
  protected:
  explicit ROIPixResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kPixFieldNumber = 2,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::osirixgrpc::Status& status() const;
  PROTOBUF_NODISCARD ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();
  // .osirixgrpc.DCMPix pix = 2;
  bool has_pix() const;
  void clear_pix() ;
  const ::osirixgrpc::DCMPix& pix() const;
  PROTOBUF_NODISCARD ::osirixgrpc::DCMPix* release_pix();
  ::osirixgrpc::DCMPix* mutable_pix();
  void set_allocated_pix(::osirixgrpc::DCMPix* pix);
  private:
  const ::osirixgrpc::DCMPix& _internal_pix() const;
  ::osirixgrpc::DCMPix* _internal_mutable_pix();
  public:
  void unsafe_arena_set_allocated_pix(
      ::osirixgrpc::DCMPix* pix);
  ::osirixgrpc::DCMPix* unsafe_arena_release_pix();
  // @@protoc_insertion_point(class_scope:osirixgrpc.ROIPixResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::osirixgrpc::Status* status_;
    ::osirixgrpc::DCMPix* pix_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_roi_2eproto;
};// -------------------------------------------------------------------

class ROINameResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.ROINameResponse) */ {
 public:
  inline ROINameResponse() : ROINameResponse(nullptr) {}
  ~ROINameResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ROINameResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ROINameResponse(const ROINameResponse& from);
  ROINameResponse(ROINameResponse&& from) noexcept
    : ROINameResponse() {
    *this = ::std::move(from);
  }

  inline ROINameResponse& operator=(const ROINameResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ROINameResponse& operator=(ROINameResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ROINameResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ROINameResponse* internal_default_instance() {
    return reinterpret_cast<const ROINameResponse*>(
               &_ROINameResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ROINameResponse& a, ROINameResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ROINameResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ROINameResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ROINameResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ROINameResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ROINameResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ROINameResponse& from) {
    ROINameResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ROINameResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.ROINameResponse";
  }
  protected:
  explicit ROINameResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string name = 2;
  void clear_name() ;
  const std::string& name() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::osirixgrpc::Status& status() const;
  PROTOBUF_NODISCARD ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();
  // @@protoc_insertion_point(class_scope:osirixgrpc.ROINameResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    ::osirixgrpc::Status* status_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_roi_2eproto;
};// -------------------------------------------------------------------

class ROIColorResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.ROIColorResponse) */ {
 public:
  inline ROIColorResponse() : ROIColorResponse(nullptr) {}
  ~ROIColorResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ROIColorResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ROIColorResponse(const ROIColorResponse& from);
  ROIColorResponse(ROIColorResponse&& from) noexcept
    : ROIColorResponse() {
    *this = ::std::move(from);
  }

  inline ROIColorResponse& operator=(const ROIColorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ROIColorResponse& operator=(ROIColorResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ROIColorResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ROIColorResponse* internal_default_instance() {
    return reinterpret_cast<const ROIColorResponse*>(
               &_ROIColorResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ROIColorResponse& a, ROIColorResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ROIColorResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ROIColorResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ROIColorResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ROIColorResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ROIColorResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ROIColorResponse& from) {
    ROIColorResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ROIColorResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.ROIColorResponse";
  }
  protected:
  explicit ROIColorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kRFieldNumber = 2,
    kGFieldNumber = 3,
    kBFieldNumber = 4,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::osirixgrpc::Status& status() const;
  PROTOBUF_NODISCARD ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();
  // int32 r = 2;
  void clear_r() ;
  ::int32_t r() const;
  void set_r(::int32_t value);

  private:
  ::int32_t _internal_r() const;
  void _internal_set_r(::int32_t value);

  public:
  // int32 g = 3;
  void clear_g() ;
  ::int32_t g() const;
  void set_g(::int32_t value);

  private:
  ::int32_t _internal_g() const;
  void _internal_set_g(::int32_t value);

  public:
  // int32 b = 4;
  void clear_b() ;
  ::int32_t b() const;
  void set_b(::int32_t value);

  private:
  ::int32_t _internal_b() const;
  void _internal_set_b(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.ROIColorResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::osirixgrpc::Status* status_;
    ::int32_t r_;
    ::int32_t g_;
    ::int32_t b_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_roi_2eproto;
};// -------------------------------------------------------------------

class ROIOpacityResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.ROIOpacityResponse) */ {
 public:
  inline ROIOpacityResponse() : ROIOpacityResponse(nullptr) {}
  ~ROIOpacityResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ROIOpacityResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ROIOpacityResponse(const ROIOpacityResponse& from);
  ROIOpacityResponse(ROIOpacityResponse&& from) noexcept
    : ROIOpacityResponse() {
    *this = ::std::move(from);
  }

  inline ROIOpacityResponse& operator=(const ROIOpacityResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ROIOpacityResponse& operator=(ROIOpacityResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ROIOpacityResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ROIOpacityResponse* internal_default_instance() {
    return reinterpret_cast<const ROIOpacityResponse*>(
               &_ROIOpacityResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ROIOpacityResponse& a, ROIOpacityResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ROIOpacityResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ROIOpacityResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ROIOpacityResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ROIOpacityResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ROIOpacityResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ROIOpacityResponse& from) {
    ROIOpacityResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ROIOpacityResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.ROIOpacityResponse";
  }
  protected:
  explicit ROIOpacityResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kOpacityFieldNumber = 2,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::osirixgrpc::Status& status() const;
  PROTOBUF_NODISCARD ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();
  // float opacity = 2;
  void clear_opacity() ;
  float opacity() const;
  void set_opacity(float value);

  private:
  float _internal_opacity() const;
  void _internal_set_opacity(float value);

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.ROIOpacityResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::osirixgrpc::Status* status_;
    float opacity_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_roi_2eproto;
};// -------------------------------------------------------------------

class ROIThicknessResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.ROIThicknessResponse) */ {
 public:
  inline ROIThicknessResponse() : ROIThicknessResponse(nullptr) {}
  ~ROIThicknessResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ROIThicknessResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ROIThicknessResponse(const ROIThicknessResponse& from);
  ROIThicknessResponse(ROIThicknessResponse&& from) noexcept
    : ROIThicknessResponse() {
    *this = ::std::move(from);
  }

  inline ROIThicknessResponse& operator=(const ROIThicknessResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ROIThicknessResponse& operator=(ROIThicknessResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ROIThicknessResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ROIThicknessResponse* internal_default_instance() {
    return reinterpret_cast<const ROIThicknessResponse*>(
               &_ROIThicknessResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ROIThicknessResponse& a, ROIThicknessResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ROIThicknessResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ROIThicknessResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ROIThicknessResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ROIThicknessResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ROIThicknessResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ROIThicknessResponse& from) {
    ROIThicknessResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ROIThicknessResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.ROIThicknessResponse";
  }
  protected:
  explicit ROIThicknessResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kThicknessFieldNumber = 2,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::osirixgrpc::Status& status() const;
  PROTOBUF_NODISCARD ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();
  // float thickness = 2;
  void clear_thickness() ;
  float thickness() const;
  void set_thickness(float value);

  private:
  float _internal_thickness() const;
  void _internal_set_thickness(float value);

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.ROIThicknessResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::osirixgrpc::Status* status_;
    float thickness_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_roi_2eproto;
};// -------------------------------------------------------------------

class ROIPointsResponse_Point2D final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.ROIPointsResponse.Point2D) */ {
 public:
  inline ROIPointsResponse_Point2D() : ROIPointsResponse_Point2D(nullptr) {}
  ~ROIPointsResponse_Point2D() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ROIPointsResponse_Point2D(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ROIPointsResponse_Point2D(const ROIPointsResponse_Point2D& from);
  ROIPointsResponse_Point2D(ROIPointsResponse_Point2D&& from) noexcept
    : ROIPointsResponse_Point2D() {
    *this = ::std::move(from);
  }

  inline ROIPointsResponse_Point2D& operator=(const ROIPointsResponse_Point2D& from) {
    CopyFrom(from);
    return *this;
  }
  inline ROIPointsResponse_Point2D& operator=(ROIPointsResponse_Point2D&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ROIPointsResponse_Point2D& default_instance() {
    return *internal_default_instance();
  }
  static inline const ROIPointsResponse_Point2D* internal_default_instance() {
    return reinterpret_cast<const ROIPointsResponse_Point2D*>(
               &_ROIPointsResponse_Point2D_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(ROIPointsResponse_Point2D& a, ROIPointsResponse_Point2D& b) {
    a.Swap(&b);
  }
  inline void Swap(ROIPointsResponse_Point2D* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ROIPointsResponse_Point2D* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ROIPointsResponse_Point2D* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ROIPointsResponse_Point2D>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ROIPointsResponse_Point2D& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ROIPointsResponse_Point2D& from) {
    ROIPointsResponse_Point2D::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ROIPointsResponse_Point2D* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.ROIPointsResponse.Point2D";
  }
  protected:
  explicit ROIPointsResponse_Point2D(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
  };
  // float x = 1;
  void clear_x() ;
  float x() const;
  void set_x(float value);

  private:
  float _internal_x() const;
  void _internal_set_x(float value);

  public:
  // float y = 2;
  void clear_y() ;
  float y() const;
  void set_y(float value);

  private:
  float _internal_y() const;
  void _internal_set_y(float value);

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.ROIPointsResponse.Point2D)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    float x_;
    float y_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_roi_2eproto;
};// -------------------------------------------------------------------

class ROIPointsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.ROIPointsResponse) */ {
 public:
  inline ROIPointsResponse() : ROIPointsResponse(nullptr) {}
  ~ROIPointsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ROIPointsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ROIPointsResponse(const ROIPointsResponse& from);
  ROIPointsResponse(ROIPointsResponse&& from) noexcept
    : ROIPointsResponse() {
    *this = ::std::move(from);
  }

  inline ROIPointsResponse& operator=(const ROIPointsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ROIPointsResponse& operator=(ROIPointsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ROIPointsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ROIPointsResponse* internal_default_instance() {
    return reinterpret_cast<const ROIPointsResponse*>(
               &_ROIPointsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(ROIPointsResponse& a, ROIPointsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ROIPointsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ROIPointsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ROIPointsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ROIPointsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ROIPointsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ROIPointsResponse& from) {
    ROIPointsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ROIPointsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.ROIPointsResponse";
  }
  protected:
  explicit ROIPointsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ROIPointsResponse_Point2D Point2D;

  // accessors -------------------------------------------------------

  enum : int {
    kPointsFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // repeated .osirixgrpc.ROIPointsResponse.Point2D points = 2;
  int points_size() const;
  private:
  int _internal_points_size() const;

  public:
  void clear_points() ;
  ::osirixgrpc::ROIPointsResponse_Point2D* mutable_points(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::osirixgrpc::ROIPointsResponse_Point2D >*
      mutable_points();
  private:
  const ::osirixgrpc::ROIPointsResponse_Point2D& _internal_points(int index) const;
  ::osirixgrpc::ROIPointsResponse_Point2D* _internal_add_points();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::osirixgrpc::ROIPointsResponse_Point2D>& _internal_points() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::osirixgrpc::ROIPointsResponse_Point2D>* _internal_mutable_points();
  public:
  const ::osirixgrpc::ROIPointsResponse_Point2D& points(int index) const;
  ::osirixgrpc::ROIPointsResponse_Point2D* add_points();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::osirixgrpc::ROIPointsResponse_Point2D >&
      points() const;
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::osirixgrpc::Status& status() const;
  PROTOBUF_NODISCARD ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();
  // @@protoc_insertion_point(class_scope:osirixgrpc.ROIPointsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::osirixgrpc::ROIPointsResponse_Point2D > points_;
    ::osirixgrpc::Status* status_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_roi_2eproto;
};// -------------------------------------------------------------------

class ROIITypeResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.ROIITypeResponse) */ {
 public:
  inline ROIITypeResponse() : ROIITypeResponse(nullptr) {}
  ~ROIITypeResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ROIITypeResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ROIITypeResponse(const ROIITypeResponse& from);
  ROIITypeResponse(ROIITypeResponse&& from) noexcept
    : ROIITypeResponse() {
    *this = ::std::move(from);
  }

  inline ROIITypeResponse& operator=(const ROIITypeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ROIITypeResponse& operator=(ROIITypeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ROIITypeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ROIITypeResponse* internal_default_instance() {
    return reinterpret_cast<const ROIITypeResponse*>(
               &_ROIITypeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(ROIITypeResponse& a, ROIITypeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ROIITypeResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ROIITypeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ROIITypeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ROIITypeResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ROIITypeResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ROIITypeResponse& from) {
    ROIITypeResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ROIITypeResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.ROIITypeResponse";
  }
  protected:
  explicit ROIITypeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kItypeFieldNumber = 2,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::osirixgrpc::Status& status() const;
  PROTOBUF_NODISCARD ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();
  // int32 itype = 2;
  void clear_itype() ;
  ::int32_t itype() const;
  void set_itype(::int32_t value);

  private:
  ::int32_t _internal_itype() const;
  void _internal_set_itype(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.ROIITypeResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::osirixgrpc::Status* status_;
    ::int32_t itype_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_roi_2eproto;
};// -------------------------------------------------------------------

class ROIRotateRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.ROIRotateRequest) */ {
 public:
  inline ROIRotateRequest() : ROIRotateRequest(nullptr) {}
  ~ROIRotateRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ROIRotateRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ROIRotateRequest(const ROIRotateRequest& from);
  ROIRotateRequest(ROIRotateRequest&& from) noexcept
    : ROIRotateRequest() {
    *this = ::std::move(from);
  }

  inline ROIRotateRequest& operator=(const ROIRotateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ROIRotateRequest& operator=(ROIRotateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ROIRotateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ROIRotateRequest* internal_default_instance() {
    return reinterpret_cast<const ROIRotateRequest*>(
               &_ROIRotateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(ROIRotateRequest& a, ROIRotateRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ROIRotateRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ROIRotateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ROIRotateRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ROIRotateRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ROIRotateRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ROIRotateRequest& from) {
    ROIRotateRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ROIRotateRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.ROIRotateRequest";
  }
  protected:
  explicit ROIRotateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoiFieldNumber = 1,
    kDegreesFieldNumber = 2,
    kXFieldNumber = 3,
    kYFieldNumber = 4,
  };
  // .osirixgrpc.ROI roi = 1;
  bool has_roi() const;
  void clear_roi() ;
  const ::osirixgrpc::ROI& roi() const;
  PROTOBUF_NODISCARD ::osirixgrpc::ROI* release_roi();
  ::osirixgrpc::ROI* mutable_roi();
  void set_allocated_roi(::osirixgrpc::ROI* roi);
  private:
  const ::osirixgrpc::ROI& _internal_roi() const;
  ::osirixgrpc::ROI* _internal_mutable_roi();
  public:
  void unsafe_arena_set_allocated_roi(
      ::osirixgrpc::ROI* roi);
  ::osirixgrpc::ROI* unsafe_arena_release_roi();
  // float degrees = 2;
  void clear_degrees() ;
  float degrees() const;
  void set_degrees(float value);

  private:
  float _internal_degrees() const;
  void _internal_set_degrees(float value);

  public:
  // float x = 3;
  void clear_x() ;
  float x() const;
  void set_x(float value);

  private:
  float _internal_x() const;
  void _internal_set_x(float value);

  public:
  // float y = 4;
  void clear_y() ;
  float y() const;
  void set_y(float value);

  private:
  float _internal_y() const;
  void _internal_set_y(float value);

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.ROIRotateRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::osirixgrpc::ROI* roi_;
    float degrees_;
    float x_;
    float y_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_roi_2eproto;
};// -------------------------------------------------------------------

class ROIMoveRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.ROIMoveRequest) */ {
 public:
  inline ROIMoveRequest() : ROIMoveRequest(nullptr) {}
  ~ROIMoveRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ROIMoveRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ROIMoveRequest(const ROIMoveRequest& from);
  ROIMoveRequest(ROIMoveRequest&& from) noexcept
    : ROIMoveRequest() {
    *this = ::std::move(from);
  }

  inline ROIMoveRequest& operator=(const ROIMoveRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ROIMoveRequest& operator=(ROIMoveRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ROIMoveRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ROIMoveRequest* internal_default_instance() {
    return reinterpret_cast<const ROIMoveRequest*>(
               &_ROIMoveRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(ROIMoveRequest& a, ROIMoveRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ROIMoveRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ROIMoveRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ROIMoveRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ROIMoveRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ROIMoveRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ROIMoveRequest& from) {
    ROIMoveRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ROIMoveRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.ROIMoveRequest";
  }
  protected:
  explicit ROIMoveRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoiFieldNumber = 1,
    kColumnsFieldNumber = 2,
    kRowsFieldNumber = 3,
  };
  // .osirixgrpc.ROI roi = 1;
  bool has_roi() const;
  void clear_roi() ;
  const ::osirixgrpc::ROI& roi() const;
  PROTOBUF_NODISCARD ::osirixgrpc::ROI* release_roi();
  ::osirixgrpc::ROI* mutable_roi();
  void set_allocated_roi(::osirixgrpc::ROI* roi);
  private:
  const ::osirixgrpc::ROI& _internal_roi() const;
  ::osirixgrpc::ROI* _internal_mutable_roi();
  public:
  void unsafe_arena_set_allocated_roi(
      ::osirixgrpc::ROI* roi);
  ::osirixgrpc::ROI* unsafe_arena_release_roi();
  // int32 columns = 2;
  void clear_columns() ;
  ::int32_t columns() const;
  void set_columns(::int32_t value);

  private:
  ::int32_t _internal_columns() const;
  void _internal_set_columns(::int32_t value);

  public:
  // int32 rows = 3;
  void clear_rows() ;
  ::int32_t rows() const;
  void set_rows(::int32_t value);

  private:
  ::int32_t _internal_rows() const;
  void _internal_set_rows(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.ROIMoveRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::osirixgrpc::ROI* roi_;
    ::int32_t columns_;
    ::int32_t rows_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_roi_2eproto;
};// -------------------------------------------------------------------

class ROISetNameRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.ROISetNameRequest) */ {
 public:
  inline ROISetNameRequest() : ROISetNameRequest(nullptr) {}
  ~ROISetNameRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ROISetNameRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ROISetNameRequest(const ROISetNameRequest& from);
  ROISetNameRequest(ROISetNameRequest&& from) noexcept
    : ROISetNameRequest() {
    *this = ::std::move(from);
  }

  inline ROISetNameRequest& operator=(const ROISetNameRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ROISetNameRequest& operator=(ROISetNameRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ROISetNameRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ROISetNameRequest* internal_default_instance() {
    return reinterpret_cast<const ROISetNameRequest*>(
               &_ROISetNameRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(ROISetNameRequest& a, ROISetNameRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ROISetNameRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ROISetNameRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ROISetNameRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ROISetNameRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ROISetNameRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ROISetNameRequest& from) {
    ROISetNameRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ROISetNameRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.ROISetNameRequest";
  }
  protected:
  explicit ROISetNameRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kRoiFieldNumber = 1,
  };
  // string name = 2;
  void clear_name() ;
  const std::string& name() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .osirixgrpc.ROI roi = 1;
  bool has_roi() const;
  void clear_roi() ;
  const ::osirixgrpc::ROI& roi() const;
  PROTOBUF_NODISCARD ::osirixgrpc::ROI* release_roi();
  ::osirixgrpc::ROI* mutable_roi();
  void set_allocated_roi(::osirixgrpc::ROI* roi);
  private:
  const ::osirixgrpc::ROI& _internal_roi() const;
  ::osirixgrpc::ROI* _internal_mutable_roi();
  public:
  void unsafe_arena_set_allocated_roi(
      ::osirixgrpc::ROI* roi);
  ::osirixgrpc::ROI* unsafe_arena_release_roi();
  // @@protoc_insertion_point(class_scope:osirixgrpc.ROISetNameRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    ::osirixgrpc::ROI* roi_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_roi_2eproto;
};// -------------------------------------------------------------------

class ROISetColorRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.ROISetColorRequest) */ {
 public:
  inline ROISetColorRequest() : ROISetColorRequest(nullptr) {}
  ~ROISetColorRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ROISetColorRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ROISetColorRequest(const ROISetColorRequest& from);
  ROISetColorRequest(ROISetColorRequest&& from) noexcept
    : ROISetColorRequest() {
    *this = ::std::move(from);
  }

  inline ROISetColorRequest& operator=(const ROISetColorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ROISetColorRequest& operator=(ROISetColorRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ROISetColorRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ROISetColorRequest* internal_default_instance() {
    return reinterpret_cast<const ROISetColorRequest*>(
               &_ROISetColorRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(ROISetColorRequest& a, ROISetColorRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ROISetColorRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ROISetColorRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ROISetColorRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ROISetColorRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ROISetColorRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ROISetColorRequest& from) {
    ROISetColorRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ROISetColorRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.ROISetColorRequest";
  }
  protected:
  explicit ROISetColorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoiFieldNumber = 1,
    kRFieldNumber = 2,
    kGFieldNumber = 3,
    kBFieldNumber = 4,
  };
  // .osirixgrpc.ROI roi = 1;
  bool has_roi() const;
  void clear_roi() ;
  const ::osirixgrpc::ROI& roi() const;
  PROTOBUF_NODISCARD ::osirixgrpc::ROI* release_roi();
  ::osirixgrpc::ROI* mutable_roi();
  void set_allocated_roi(::osirixgrpc::ROI* roi);
  private:
  const ::osirixgrpc::ROI& _internal_roi() const;
  ::osirixgrpc::ROI* _internal_mutable_roi();
  public:
  void unsafe_arena_set_allocated_roi(
      ::osirixgrpc::ROI* roi);
  ::osirixgrpc::ROI* unsafe_arena_release_roi();
  // int32 r = 2;
  void clear_r() ;
  ::int32_t r() const;
  void set_r(::int32_t value);

  private:
  ::int32_t _internal_r() const;
  void _internal_set_r(::int32_t value);

  public:
  // int32 g = 3;
  void clear_g() ;
  ::int32_t g() const;
  void set_g(::int32_t value);

  private:
  ::int32_t _internal_g() const;
  void _internal_set_g(::int32_t value);

  public:
  // int32 b = 4;
  void clear_b() ;
  ::int32_t b() const;
  void set_b(::int32_t value);

  private:
  ::int32_t _internal_b() const;
  void _internal_set_b(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.ROISetColorRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::osirixgrpc::ROI* roi_;
    ::int32_t r_;
    ::int32_t g_;
    ::int32_t b_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_roi_2eproto;
};// -------------------------------------------------------------------

class ROISetOpacityRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.ROISetOpacityRequest) */ {
 public:
  inline ROISetOpacityRequest() : ROISetOpacityRequest(nullptr) {}
  ~ROISetOpacityRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ROISetOpacityRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ROISetOpacityRequest(const ROISetOpacityRequest& from);
  ROISetOpacityRequest(ROISetOpacityRequest&& from) noexcept
    : ROISetOpacityRequest() {
    *this = ::std::move(from);
  }

  inline ROISetOpacityRequest& operator=(const ROISetOpacityRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ROISetOpacityRequest& operator=(ROISetOpacityRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ROISetOpacityRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ROISetOpacityRequest* internal_default_instance() {
    return reinterpret_cast<const ROISetOpacityRequest*>(
               &_ROISetOpacityRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(ROISetOpacityRequest& a, ROISetOpacityRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ROISetOpacityRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ROISetOpacityRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ROISetOpacityRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ROISetOpacityRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ROISetOpacityRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ROISetOpacityRequest& from) {
    ROISetOpacityRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ROISetOpacityRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.ROISetOpacityRequest";
  }
  protected:
  explicit ROISetOpacityRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoiFieldNumber = 1,
    kOpacityFieldNumber = 2,
  };
  // .osirixgrpc.ROI roi = 1;
  bool has_roi() const;
  void clear_roi() ;
  const ::osirixgrpc::ROI& roi() const;
  PROTOBUF_NODISCARD ::osirixgrpc::ROI* release_roi();
  ::osirixgrpc::ROI* mutable_roi();
  void set_allocated_roi(::osirixgrpc::ROI* roi);
  private:
  const ::osirixgrpc::ROI& _internal_roi() const;
  ::osirixgrpc::ROI* _internal_mutable_roi();
  public:
  void unsafe_arena_set_allocated_roi(
      ::osirixgrpc::ROI* roi);
  ::osirixgrpc::ROI* unsafe_arena_release_roi();
  // float opacity = 2;
  void clear_opacity() ;
  float opacity() const;
  void set_opacity(float value);

  private:
  float _internal_opacity() const;
  void _internal_set_opacity(float value);

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.ROISetOpacityRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::osirixgrpc::ROI* roi_;
    float opacity_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_roi_2eproto;
};// -------------------------------------------------------------------

class ROISetThicknessRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.ROISetThicknessRequest) */ {
 public:
  inline ROISetThicknessRequest() : ROISetThicknessRequest(nullptr) {}
  ~ROISetThicknessRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ROISetThicknessRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ROISetThicknessRequest(const ROISetThicknessRequest& from);
  ROISetThicknessRequest(ROISetThicknessRequest&& from) noexcept
    : ROISetThicknessRequest() {
    *this = ::std::move(from);
  }

  inline ROISetThicknessRequest& operator=(const ROISetThicknessRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ROISetThicknessRequest& operator=(ROISetThicknessRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ROISetThicknessRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ROISetThicknessRequest* internal_default_instance() {
    return reinterpret_cast<const ROISetThicknessRequest*>(
               &_ROISetThicknessRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(ROISetThicknessRequest& a, ROISetThicknessRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ROISetThicknessRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ROISetThicknessRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ROISetThicknessRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ROISetThicknessRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ROISetThicknessRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ROISetThicknessRequest& from) {
    ROISetThicknessRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ROISetThicknessRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.ROISetThicknessRequest";
  }
  protected:
  explicit ROISetThicknessRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoiFieldNumber = 1,
    kThicknessFieldNumber = 2,
  };
  // .osirixgrpc.ROI roi = 1;
  bool has_roi() const;
  void clear_roi() ;
  const ::osirixgrpc::ROI& roi() const;
  PROTOBUF_NODISCARD ::osirixgrpc::ROI* release_roi();
  ::osirixgrpc::ROI* mutable_roi();
  void set_allocated_roi(::osirixgrpc::ROI* roi);
  private:
  const ::osirixgrpc::ROI& _internal_roi() const;
  ::osirixgrpc::ROI* _internal_mutable_roi();
  public:
  void unsafe_arena_set_allocated_roi(
      ::osirixgrpc::ROI* roi);
  ::osirixgrpc::ROI* unsafe_arena_release_roi();
  // float thickness = 2;
  void clear_thickness() ;
  float thickness() const;
  void set_thickness(float value);

  private:
  float _internal_thickness() const;
  void _internal_set_thickness(float value);

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.ROISetThicknessRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::osirixgrpc::ROI* roi_;
    float thickness_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_roi_2eproto;
};// -------------------------------------------------------------------

class ROISetPointsRequest_Point2D final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.ROISetPointsRequest.Point2D) */ {
 public:
  inline ROISetPointsRequest_Point2D() : ROISetPointsRequest_Point2D(nullptr) {}
  ~ROISetPointsRequest_Point2D() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ROISetPointsRequest_Point2D(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ROISetPointsRequest_Point2D(const ROISetPointsRequest_Point2D& from);
  ROISetPointsRequest_Point2D(ROISetPointsRequest_Point2D&& from) noexcept
    : ROISetPointsRequest_Point2D() {
    *this = ::std::move(from);
  }

  inline ROISetPointsRequest_Point2D& operator=(const ROISetPointsRequest_Point2D& from) {
    CopyFrom(from);
    return *this;
  }
  inline ROISetPointsRequest_Point2D& operator=(ROISetPointsRequest_Point2D&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ROISetPointsRequest_Point2D& default_instance() {
    return *internal_default_instance();
  }
  static inline const ROISetPointsRequest_Point2D* internal_default_instance() {
    return reinterpret_cast<const ROISetPointsRequest_Point2D*>(
               &_ROISetPointsRequest_Point2D_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(ROISetPointsRequest_Point2D& a, ROISetPointsRequest_Point2D& b) {
    a.Swap(&b);
  }
  inline void Swap(ROISetPointsRequest_Point2D* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ROISetPointsRequest_Point2D* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ROISetPointsRequest_Point2D* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ROISetPointsRequest_Point2D>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ROISetPointsRequest_Point2D& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ROISetPointsRequest_Point2D& from) {
    ROISetPointsRequest_Point2D::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ROISetPointsRequest_Point2D* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.ROISetPointsRequest.Point2D";
  }
  protected:
  explicit ROISetPointsRequest_Point2D(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
  };
  // float x = 1;
  void clear_x() ;
  float x() const;
  void set_x(float value);

  private:
  float _internal_x() const;
  void _internal_set_x(float value);

  public:
  // float y = 2;
  void clear_y() ;
  float y() const;
  void set_y(float value);

  private:
  float _internal_y() const;
  void _internal_set_y(float value);

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.ROISetPointsRequest.Point2D)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    float x_;
    float y_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_roi_2eproto;
};// -------------------------------------------------------------------

class ROISetPointsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.ROISetPointsRequest) */ {
 public:
  inline ROISetPointsRequest() : ROISetPointsRequest(nullptr) {}
  ~ROISetPointsRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ROISetPointsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ROISetPointsRequest(const ROISetPointsRequest& from);
  ROISetPointsRequest(ROISetPointsRequest&& from) noexcept
    : ROISetPointsRequest() {
    *this = ::std::move(from);
  }

  inline ROISetPointsRequest& operator=(const ROISetPointsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ROISetPointsRequest& operator=(ROISetPointsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ROISetPointsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ROISetPointsRequest* internal_default_instance() {
    return reinterpret_cast<const ROISetPointsRequest*>(
               &_ROISetPointsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(ROISetPointsRequest& a, ROISetPointsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ROISetPointsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ROISetPointsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ROISetPointsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ROISetPointsRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ROISetPointsRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ROISetPointsRequest& from) {
    ROISetPointsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ROISetPointsRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.ROISetPointsRequest";
  }
  protected:
  explicit ROISetPointsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ROISetPointsRequest_Point2D Point2D;

  // accessors -------------------------------------------------------

  enum : int {
    kPointsFieldNumber = 2,
    kRoiFieldNumber = 1,
  };
  // repeated .osirixgrpc.ROISetPointsRequest.Point2D points = 2;
  int points_size() const;
  private:
  int _internal_points_size() const;

  public:
  void clear_points() ;
  ::osirixgrpc::ROISetPointsRequest_Point2D* mutable_points(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::osirixgrpc::ROISetPointsRequest_Point2D >*
      mutable_points();
  private:
  const ::osirixgrpc::ROISetPointsRequest_Point2D& _internal_points(int index) const;
  ::osirixgrpc::ROISetPointsRequest_Point2D* _internal_add_points();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::osirixgrpc::ROISetPointsRequest_Point2D>& _internal_points() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::osirixgrpc::ROISetPointsRequest_Point2D>* _internal_mutable_points();
  public:
  const ::osirixgrpc::ROISetPointsRequest_Point2D& points(int index) const;
  ::osirixgrpc::ROISetPointsRequest_Point2D* add_points();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::osirixgrpc::ROISetPointsRequest_Point2D >&
      points() const;
  // .osirixgrpc.ROI roi = 1;
  bool has_roi() const;
  void clear_roi() ;
  const ::osirixgrpc::ROI& roi() const;
  PROTOBUF_NODISCARD ::osirixgrpc::ROI* release_roi();
  ::osirixgrpc::ROI* mutable_roi();
  void set_allocated_roi(::osirixgrpc::ROI* roi);
  private:
  const ::osirixgrpc::ROI& _internal_roi() const;
  ::osirixgrpc::ROI* _internal_mutable_roi();
  public:
  void unsafe_arena_set_allocated_roi(
      ::osirixgrpc::ROI* roi);
  ::osirixgrpc::ROI* unsafe_arena_release_roi();
  // @@protoc_insertion_point(class_scope:osirixgrpc.ROISetPointsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::osirixgrpc::ROISetPointsRequest_Point2D > points_;
    ::osirixgrpc::ROI* roi_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_roi_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ROIAreaResponse

// .osirixgrpc.Status status = 1;
inline bool ROIAreaResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::osirixgrpc::Status& ROIAreaResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& ROIAreaResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIAreaResponse.status)
  return _internal_status();
}
inline void ROIAreaResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = status;
  if (status) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.ROIAreaResponse.status)
}
inline ::osirixgrpc::Status* ROIAreaResponse::release_status() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::osirixgrpc::Status* ROIAreaResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.ROIAreaResponse.status)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* ROIAreaResponse::_internal_mutable_status() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArenaForAllocation());
    _impl_.status_ = p;
  }
  return _impl_.status_;
}
inline ::osirixgrpc::Status* ROIAreaResponse::mutable_status() {
  ::osirixgrpc::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.ROIAreaResponse.status)
  return _msg;
}
inline void ROIAreaResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status));
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.ROIAreaResponse.status)
}

// float area = 2;
inline void ROIAreaResponse::clear_area() {
  _impl_.area_ = 0;
}
inline float ROIAreaResponse::area() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIAreaResponse.area)
  return _internal_area();
}
inline void ROIAreaResponse::set_area(float value) {
  _internal_set_area(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.ROIAreaResponse.area)
}
inline float ROIAreaResponse::_internal_area() const {
  return _impl_.area_;
}
inline void ROIAreaResponse::_internal_set_area(float value) {
  ;
  _impl_.area_ = value;
}

// -------------------------------------------------------------------

// ROICentroidResponse

// .osirixgrpc.Status status = 1;
inline bool ROICentroidResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::osirixgrpc::Status& ROICentroidResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& ROICentroidResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROICentroidResponse.status)
  return _internal_status();
}
inline void ROICentroidResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = status;
  if (status) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.ROICentroidResponse.status)
}
inline ::osirixgrpc::Status* ROICentroidResponse::release_status() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::osirixgrpc::Status* ROICentroidResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.ROICentroidResponse.status)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* ROICentroidResponse::_internal_mutable_status() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArenaForAllocation());
    _impl_.status_ = p;
  }
  return _impl_.status_;
}
inline ::osirixgrpc::Status* ROICentroidResponse::mutable_status() {
  ::osirixgrpc::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.ROICentroidResponse.status)
  return _msg;
}
inline void ROICentroidResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status));
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.ROICentroidResponse.status)
}

// float x = 2;
inline void ROICentroidResponse::clear_x() {
  _impl_.x_ = 0;
}
inline float ROICentroidResponse::x() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROICentroidResponse.x)
  return _internal_x();
}
inline void ROICentroidResponse::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.ROICentroidResponse.x)
}
inline float ROICentroidResponse::_internal_x() const {
  return _impl_.x_;
}
inline void ROICentroidResponse::_internal_set_x(float value) {
  ;
  _impl_.x_ = value;
}

// float y = 3;
inline void ROICentroidResponse::clear_y() {
  _impl_.y_ = 0;
}
inline float ROICentroidResponse::y() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROICentroidResponse.y)
  return _internal_y();
}
inline void ROICentroidResponse::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.ROICentroidResponse.y)
}
inline float ROICentroidResponse::_internal_y() const {
  return _impl_.y_;
}
inline void ROICentroidResponse::_internal_set_y(float value) {
  ;
  _impl_.y_ = value;
}

// -------------------------------------------------------------------

// ROIPixResponse

// .osirixgrpc.Status status = 1;
inline bool ROIPixResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::osirixgrpc::Status& ROIPixResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& ROIPixResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIPixResponse.status)
  return _internal_status();
}
inline void ROIPixResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = status;
  if (status) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.ROIPixResponse.status)
}
inline ::osirixgrpc::Status* ROIPixResponse::release_status() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::osirixgrpc::Status* ROIPixResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.ROIPixResponse.status)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* ROIPixResponse::_internal_mutable_status() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArenaForAllocation());
    _impl_.status_ = p;
  }
  return _impl_.status_;
}
inline ::osirixgrpc::Status* ROIPixResponse::mutable_status() {
  ::osirixgrpc::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.ROIPixResponse.status)
  return _msg;
}
inline void ROIPixResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status));
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.ROIPixResponse.status)
}

// .osirixgrpc.DCMPix pix = 2;
inline bool ROIPixResponse::has_pix() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pix_ != nullptr);
  return value;
}
inline const ::osirixgrpc::DCMPix& ROIPixResponse::_internal_pix() const {
  const ::osirixgrpc::DCMPix* p = _impl_.pix_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::DCMPix&>(
      ::osirixgrpc::_DCMPix_default_instance_);
}
inline const ::osirixgrpc::DCMPix& ROIPixResponse::pix() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIPixResponse.pix)
  return _internal_pix();
}
inline void ROIPixResponse::unsafe_arena_set_allocated_pix(
    ::osirixgrpc::DCMPix* pix) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.pix_);
  }
  _impl_.pix_ = pix;
  if (pix) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.ROIPixResponse.pix)
}
inline ::osirixgrpc::DCMPix* ROIPixResponse::release_pix() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::osirixgrpc::DCMPix* temp = _impl_.pix_;
  _impl_.pix_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::osirixgrpc::DCMPix* ROIPixResponse::unsafe_arena_release_pix() {
  // @@protoc_insertion_point(field_release:osirixgrpc.ROIPixResponse.pix)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::osirixgrpc::DCMPix* temp = _impl_.pix_;
  _impl_.pix_ = nullptr;
  return temp;
}
inline ::osirixgrpc::DCMPix* ROIPixResponse::_internal_mutable_pix() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.pix_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::DCMPix>(GetArenaForAllocation());
    _impl_.pix_ = p;
  }
  return _impl_.pix_;
}
inline ::osirixgrpc::DCMPix* ROIPixResponse::mutable_pix() {
  ::osirixgrpc::DCMPix* _msg = _internal_mutable_pix();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.ROIPixResponse.pix)
  return _msg;
}
inline void ROIPixResponse::set_allocated_pix(::osirixgrpc::DCMPix* pix) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.pix_);
  }
  if (pix) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pix));
    if (message_arena != submessage_arena) {
      pix = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pix, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.pix_ = pix;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.ROIPixResponse.pix)
}

// -------------------------------------------------------------------

// ROINameResponse

// .osirixgrpc.Status status = 1;
inline bool ROINameResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::osirixgrpc::Status& ROINameResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& ROINameResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROINameResponse.status)
  return _internal_status();
}
inline void ROINameResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = status;
  if (status) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.ROINameResponse.status)
}
inline ::osirixgrpc::Status* ROINameResponse::release_status() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::osirixgrpc::Status* ROINameResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.ROINameResponse.status)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* ROINameResponse::_internal_mutable_status() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArenaForAllocation());
    _impl_.status_ = p;
  }
  return _impl_.status_;
}
inline ::osirixgrpc::Status* ROINameResponse::mutable_status() {
  ::osirixgrpc::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.ROINameResponse.status)
  return _msg;
}
inline void ROINameResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status));
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.ROINameResponse.status)
}

// string name = 2;
inline void ROINameResponse::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& ROINameResponse::name() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROINameResponse.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ROINameResponse::set_name(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:osirixgrpc.ROINameResponse.name)
}
inline std::string* ROINameResponse::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.ROINameResponse.name)
  return _s;
}
inline const std::string& ROINameResponse::_internal_name() const {
  return _impl_.name_.Get();
}
inline void ROINameResponse::_internal_set_name(const std::string& value) {
  ;


  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* ROINameResponse::_internal_mutable_name() {
  ;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* ROINameResponse::release_name() {
  // @@protoc_insertion_point(field_release:osirixgrpc.ROINameResponse.name)
  return _impl_.name_.Release();
}
inline void ROINameResponse::set_allocated_name(std::string* value) {
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.ROINameResponse.name)
}

// -------------------------------------------------------------------

// ROIColorResponse

// .osirixgrpc.Status status = 1;
inline bool ROIColorResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::osirixgrpc::Status& ROIColorResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& ROIColorResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIColorResponse.status)
  return _internal_status();
}
inline void ROIColorResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = status;
  if (status) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.ROIColorResponse.status)
}
inline ::osirixgrpc::Status* ROIColorResponse::release_status() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::osirixgrpc::Status* ROIColorResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.ROIColorResponse.status)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* ROIColorResponse::_internal_mutable_status() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArenaForAllocation());
    _impl_.status_ = p;
  }
  return _impl_.status_;
}
inline ::osirixgrpc::Status* ROIColorResponse::mutable_status() {
  ::osirixgrpc::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.ROIColorResponse.status)
  return _msg;
}
inline void ROIColorResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status));
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.ROIColorResponse.status)
}

// int32 r = 2;
inline void ROIColorResponse::clear_r() {
  _impl_.r_ = 0;
}
inline ::int32_t ROIColorResponse::r() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIColorResponse.r)
  return _internal_r();
}
inline void ROIColorResponse::set_r(::int32_t value) {
  _internal_set_r(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.ROIColorResponse.r)
}
inline ::int32_t ROIColorResponse::_internal_r() const {
  return _impl_.r_;
}
inline void ROIColorResponse::_internal_set_r(::int32_t value) {
  ;
  _impl_.r_ = value;
}

// int32 g = 3;
inline void ROIColorResponse::clear_g() {
  _impl_.g_ = 0;
}
inline ::int32_t ROIColorResponse::g() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIColorResponse.g)
  return _internal_g();
}
inline void ROIColorResponse::set_g(::int32_t value) {
  _internal_set_g(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.ROIColorResponse.g)
}
inline ::int32_t ROIColorResponse::_internal_g() const {
  return _impl_.g_;
}
inline void ROIColorResponse::_internal_set_g(::int32_t value) {
  ;
  _impl_.g_ = value;
}

// int32 b = 4;
inline void ROIColorResponse::clear_b() {
  _impl_.b_ = 0;
}
inline ::int32_t ROIColorResponse::b() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIColorResponse.b)
  return _internal_b();
}
inline void ROIColorResponse::set_b(::int32_t value) {
  _internal_set_b(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.ROIColorResponse.b)
}
inline ::int32_t ROIColorResponse::_internal_b() const {
  return _impl_.b_;
}
inline void ROIColorResponse::_internal_set_b(::int32_t value) {
  ;
  _impl_.b_ = value;
}

// -------------------------------------------------------------------

// ROIOpacityResponse

// .osirixgrpc.Status status = 1;
inline bool ROIOpacityResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::osirixgrpc::Status& ROIOpacityResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& ROIOpacityResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIOpacityResponse.status)
  return _internal_status();
}
inline void ROIOpacityResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = status;
  if (status) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.ROIOpacityResponse.status)
}
inline ::osirixgrpc::Status* ROIOpacityResponse::release_status() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::osirixgrpc::Status* ROIOpacityResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.ROIOpacityResponse.status)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* ROIOpacityResponse::_internal_mutable_status() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArenaForAllocation());
    _impl_.status_ = p;
  }
  return _impl_.status_;
}
inline ::osirixgrpc::Status* ROIOpacityResponse::mutable_status() {
  ::osirixgrpc::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.ROIOpacityResponse.status)
  return _msg;
}
inline void ROIOpacityResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status));
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.ROIOpacityResponse.status)
}

// float opacity = 2;
inline void ROIOpacityResponse::clear_opacity() {
  _impl_.opacity_ = 0;
}
inline float ROIOpacityResponse::opacity() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIOpacityResponse.opacity)
  return _internal_opacity();
}
inline void ROIOpacityResponse::set_opacity(float value) {
  _internal_set_opacity(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.ROIOpacityResponse.opacity)
}
inline float ROIOpacityResponse::_internal_opacity() const {
  return _impl_.opacity_;
}
inline void ROIOpacityResponse::_internal_set_opacity(float value) {
  ;
  _impl_.opacity_ = value;
}

// -------------------------------------------------------------------

// ROIThicknessResponse

// .osirixgrpc.Status status = 1;
inline bool ROIThicknessResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::osirixgrpc::Status& ROIThicknessResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& ROIThicknessResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIThicknessResponse.status)
  return _internal_status();
}
inline void ROIThicknessResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = status;
  if (status) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.ROIThicknessResponse.status)
}
inline ::osirixgrpc::Status* ROIThicknessResponse::release_status() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::osirixgrpc::Status* ROIThicknessResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.ROIThicknessResponse.status)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* ROIThicknessResponse::_internal_mutable_status() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArenaForAllocation());
    _impl_.status_ = p;
  }
  return _impl_.status_;
}
inline ::osirixgrpc::Status* ROIThicknessResponse::mutable_status() {
  ::osirixgrpc::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.ROIThicknessResponse.status)
  return _msg;
}
inline void ROIThicknessResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status));
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.ROIThicknessResponse.status)
}

// float thickness = 2;
inline void ROIThicknessResponse::clear_thickness() {
  _impl_.thickness_ = 0;
}
inline float ROIThicknessResponse::thickness() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIThicknessResponse.thickness)
  return _internal_thickness();
}
inline void ROIThicknessResponse::set_thickness(float value) {
  _internal_set_thickness(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.ROIThicknessResponse.thickness)
}
inline float ROIThicknessResponse::_internal_thickness() const {
  return _impl_.thickness_;
}
inline void ROIThicknessResponse::_internal_set_thickness(float value) {
  ;
  _impl_.thickness_ = value;
}

// -------------------------------------------------------------------

// ROIPointsResponse_Point2D

// float x = 1;
inline void ROIPointsResponse_Point2D::clear_x() {
  _impl_.x_ = 0;
}
inline float ROIPointsResponse_Point2D::x() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIPointsResponse.Point2D.x)
  return _internal_x();
}
inline void ROIPointsResponse_Point2D::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.ROIPointsResponse.Point2D.x)
}
inline float ROIPointsResponse_Point2D::_internal_x() const {
  return _impl_.x_;
}
inline void ROIPointsResponse_Point2D::_internal_set_x(float value) {
  ;
  _impl_.x_ = value;
}

// float y = 2;
inline void ROIPointsResponse_Point2D::clear_y() {
  _impl_.y_ = 0;
}
inline float ROIPointsResponse_Point2D::y() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIPointsResponse.Point2D.y)
  return _internal_y();
}
inline void ROIPointsResponse_Point2D::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.ROIPointsResponse.Point2D.y)
}
inline float ROIPointsResponse_Point2D::_internal_y() const {
  return _impl_.y_;
}
inline void ROIPointsResponse_Point2D::_internal_set_y(float value) {
  ;
  _impl_.y_ = value;
}

// -------------------------------------------------------------------

// ROIPointsResponse

// .osirixgrpc.Status status = 1;
inline bool ROIPointsResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::osirixgrpc::Status& ROIPointsResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& ROIPointsResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIPointsResponse.status)
  return _internal_status();
}
inline void ROIPointsResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = status;
  if (status) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.ROIPointsResponse.status)
}
inline ::osirixgrpc::Status* ROIPointsResponse::release_status() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::osirixgrpc::Status* ROIPointsResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.ROIPointsResponse.status)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* ROIPointsResponse::_internal_mutable_status() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArenaForAllocation());
    _impl_.status_ = p;
  }
  return _impl_.status_;
}
inline ::osirixgrpc::Status* ROIPointsResponse::mutable_status() {
  ::osirixgrpc::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.ROIPointsResponse.status)
  return _msg;
}
inline void ROIPointsResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status));
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.ROIPointsResponse.status)
}

// repeated .osirixgrpc.ROIPointsResponse.Point2D points = 2;
inline int ROIPointsResponse::_internal_points_size() const {
  return _impl_.points_.size();
}
inline int ROIPointsResponse::points_size() const {
  return _internal_points_size();
}
inline void ROIPointsResponse::clear_points() {
  _internal_mutable_points()->Clear();
}
inline ::osirixgrpc::ROIPointsResponse_Point2D* ROIPointsResponse::mutable_points(int index) {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.ROIPointsResponse.points)
  return _internal_mutable_points()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::osirixgrpc::ROIPointsResponse_Point2D >*
ROIPointsResponse::mutable_points() {
  // @@protoc_insertion_point(field_mutable_list:osirixgrpc.ROIPointsResponse.points)
  return _internal_mutable_points();
}
inline const ::osirixgrpc::ROIPointsResponse_Point2D& ROIPointsResponse::_internal_points(int index) const {
  return _internal_points().Get(index);
}
inline const ::osirixgrpc::ROIPointsResponse_Point2D& ROIPointsResponse::points(int index) const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIPointsResponse.points)
  return _internal_points(index);
}
inline ::osirixgrpc::ROIPointsResponse_Point2D* ROIPointsResponse::_internal_add_points() {
  return _internal_mutable_points()->Add();
}
inline ::osirixgrpc::ROIPointsResponse_Point2D* ROIPointsResponse::add_points() {
  ::osirixgrpc::ROIPointsResponse_Point2D* _add = _internal_add_points();
  // @@protoc_insertion_point(field_add:osirixgrpc.ROIPointsResponse.points)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::osirixgrpc::ROIPointsResponse_Point2D >&
ROIPointsResponse::points() const {
  // @@protoc_insertion_point(field_list:osirixgrpc.ROIPointsResponse.points)
  return _internal_points();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::osirixgrpc::ROIPointsResponse_Point2D>&
ROIPointsResponse::_internal_points() const {
  return _impl_.points_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::osirixgrpc::ROIPointsResponse_Point2D>*
ROIPointsResponse::_internal_mutable_points() {
  return &_impl_.points_;
}

// -------------------------------------------------------------------

// ROIITypeResponse

// .osirixgrpc.Status status = 1;
inline bool ROIITypeResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::osirixgrpc::Status& ROIITypeResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& ROIITypeResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIITypeResponse.status)
  return _internal_status();
}
inline void ROIITypeResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = status;
  if (status) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.ROIITypeResponse.status)
}
inline ::osirixgrpc::Status* ROIITypeResponse::release_status() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::osirixgrpc::Status* ROIITypeResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.ROIITypeResponse.status)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* ROIITypeResponse::_internal_mutable_status() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArenaForAllocation());
    _impl_.status_ = p;
  }
  return _impl_.status_;
}
inline ::osirixgrpc::Status* ROIITypeResponse::mutable_status() {
  ::osirixgrpc::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.ROIITypeResponse.status)
  return _msg;
}
inline void ROIITypeResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status));
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.ROIITypeResponse.status)
}

// int32 itype = 2;
inline void ROIITypeResponse::clear_itype() {
  _impl_.itype_ = 0;
}
inline ::int32_t ROIITypeResponse::itype() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIITypeResponse.itype)
  return _internal_itype();
}
inline void ROIITypeResponse::set_itype(::int32_t value) {
  _internal_set_itype(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.ROIITypeResponse.itype)
}
inline ::int32_t ROIITypeResponse::_internal_itype() const {
  return _impl_.itype_;
}
inline void ROIITypeResponse::_internal_set_itype(::int32_t value) {
  ;
  _impl_.itype_ = value;
}

// -------------------------------------------------------------------

// ROIRotateRequest

// .osirixgrpc.ROI roi = 1;
inline bool ROIRotateRequest::has_roi() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.roi_ != nullptr);
  return value;
}
inline const ::osirixgrpc::ROI& ROIRotateRequest::_internal_roi() const {
  const ::osirixgrpc::ROI* p = _impl_.roi_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::ROI&>(
      ::osirixgrpc::_ROI_default_instance_);
}
inline const ::osirixgrpc::ROI& ROIRotateRequest::roi() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIRotateRequest.roi)
  return _internal_roi();
}
inline void ROIRotateRequest::unsafe_arena_set_allocated_roi(
    ::osirixgrpc::ROI* roi) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.roi_);
  }
  _impl_.roi_ = roi;
  if (roi) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.ROIRotateRequest.roi)
}
inline ::osirixgrpc::ROI* ROIRotateRequest::release_roi() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::ROI* temp = _impl_.roi_;
  _impl_.roi_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::osirixgrpc::ROI* ROIRotateRequest::unsafe_arena_release_roi() {
  // @@protoc_insertion_point(field_release:osirixgrpc.ROIRotateRequest.roi)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::ROI* temp = _impl_.roi_;
  _impl_.roi_ = nullptr;
  return temp;
}
inline ::osirixgrpc::ROI* ROIRotateRequest::_internal_mutable_roi() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.roi_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::ROI>(GetArenaForAllocation());
    _impl_.roi_ = p;
  }
  return _impl_.roi_;
}
inline ::osirixgrpc::ROI* ROIRotateRequest::mutable_roi() {
  ::osirixgrpc::ROI* _msg = _internal_mutable_roi();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.ROIRotateRequest.roi)
  return _msg;
}
inline void ROIRotateRequest::set_allocated_roi(::osirixgrpc::ROI* roi) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.roi_);
  }
  if (roi) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(roi));
    if (message_arena != submessage_arena) {
      roi = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, roi, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.roi_ = roi;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.ROIRotateRequest.roi)
}

// float degrees = 2;
inline void ROIRotateRequest::clear_degrees() {
  _impl_.degrees_ = 0;
}
inline float ROIRotateRequest::degrees() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIRotateRequest.degrees)
  return _internal_degrees();
}
inline void ROIRotateRequest::set_degrees(float value) {
  _internal_set_degrees(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.ROIRotateRequest.degrees)
}
inline float ROIRotateRequest::_internal_degrees() const {
  return _impl_.degrees_;
}
inline void ROIRotateRequest::_internal_set_degrees(float value) {
  ;
  _impl_.degrees_ = value;
}

// float x = 3;
inline void ROIRotateRequest::clear_x() {
  _impl_.x_ = 0;
}
inline float ROIRotateRequest::x() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIRotateRequest.x)
  return _internal_x();
}
inline void ROIRotateRequest::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.ROIRotateRequest.x)
}
inline float ROIRotateRequest::_internal_x() const {
  return _impl_.x_;
}
inline void ROIRotateRequest::_internal_set_x(float value) {
  ;
  _impl_.x_ = value;
}

// float y = 4;
inline void ROIRotateRequest::clear_y() {
  _impl_.y_ = 0;
}
inline float ROIRotateRequest::y() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIRotateRequest.y)
  return _internal_y();
}
inline void ROIRotateRequest::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.ROIRotateRequest.y)
}
inline float ROIRotateRequest::_internal_y() const {
  return _impl_.y_;
}
inline void ROIRotateRequest::_internal_set_y(float value) {
  ;
  _impl_.y_ = value;
}

// -------------------------------------------------------------------

// ROIMoveRequest

// .osirixgrpc.ROI roi = 1;
inline bool ROIMoveRequest::has_roi() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.roi_ != nullptr);
  return value;
}
inline const ::osirixgrpc::ROI& ROIMoveRequest::_internal_roi() const {
  const ::osirixgrpc::ROI* p = _impl_.roi_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::ROI&>(
      ::osirixgrpc::_ROI_default_instance_);
}
inline const ::osirixgrpc::ROI& ROIMoveRequest::roi() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIMoveRequest.roi)
  return _internal_roi();
}
inline void ROIMoveRequest::unsafe_arena_set_allocated_roi(
    ::osirixgrpc::ROI* roi) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.roi_);
  }
  _impl_.roi_ = roi;
  if (roi) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.ROIMoveRequest.roi)
}
inline ::osirixgrpc::ROI* ROIMoveRequest::release_roi() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::ROI* temp = _impl_.roi_;
  _impl_.roi_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::osirixgrpc::ROI* ROIMoveRequest::unsafe_arena_release_roi() {
  // @@protoc_insertion_point(field_release:osirixgrpc.ROIMoveRequest.roi)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::ROI* temp = _impl_.roi_;
  _impl_.roi_ = nullptr;
  return temp;
}
inline ::osirixgrpc::ROI* ROIMoveRequest::_internal_mutable_roi() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.roi_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::ROI>(GetArenaForAllocation());
    _impl_.roi_ = p;
  }
  return _impl_.roi_;
}
inline ::osirixgrpc::ROI* ROIMoveRequest::mutable_roi() {
  ::osirixgrpc::ROI* _msg = _internal_mutable_roi();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.ROIMoveRequest.roi)
  return _msg;
}
inline void ROIMoveRequest::set_allocated_roi(::osirixgrpc::ROI* roi) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.roi_);
  }
  if (roi) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(roi));
    if (message_arena != submessage_arena) {
      roi = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, roi, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.roi_ = roi;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.ROIMoveRequest.roi)
}

// int32 columns = 2;
inline void ROIMoveRequest::clear_columns() {
  _impl_.columns_ = 0;
}
inline ::int32_t ROIMoveRequest::columns() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIMoveRequest.columns)
  return _internal_columns();
}
inline void ROIMoveRequest::set_columns(::int32_t value) {
  _internal_set_columns(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.ROIMoveRequest.columns)
}
inline ::int32_t ROIMoveRequest::_internal_columns() const {
  return _impl_.columns_;
}
inline void ROIMoveRequest::_internal_set_columns(::int32_t value) {
  ;
  _impl_.columns_ = value;
}

// int32 rows = 3;
inline void ROIMoveRequest::clear_rows() {
  _impl_.rows_ = 0;
}
inline ::int32_t ROIMoveRequest::rows() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIMoveRequest.rows)
  return _internal_rows();
}
inline void ROIMoveRequest::set_rows(::int32_t value) {
  _internal_set_rows(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.ROIMoveRequest.rows)
}
inline ::int32_t ROIMoveRequest::_internal_rows() const {
  return _impl_.rows_;
}
inline void ROIMoveRequest::_internal_set_rows(::int32_t value) {
  ;
  _impl_.rows_ = value;
}

// -------------------------------------------------------------------

// ROISetNameRequest

// .osirixgrpc.ROI roi = 1;
inline bool ROISetNameRequest::has_roi() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.roi_ != nullptr);
  return value;
}
inline const ::osirixgrpc::ROI& ROISetNameRequest::_internal_roi() const {
  const ::osirixgrpc::ROI* p = _impl_.roi_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::ROI&>(
      ::osirixgrpc::_ROI_default_instance_);
}
inline const ::osirixgrpc::ROI& ROISetNameRequest::roi() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROISetNameRequest.roi)
  return _internal_roi();
}
inline void ROISetNameRequest::unsafe_arena_set_allocated_roi(
    ::osirixgrpc::ROI* roi) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.roi_);
  }
  _impl_.roi_ = roi;
  if (roi) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.ROISetNameRequest.roi)
}
inline ::osirixgrpc::ROI* ROISetNameRequest::release_roi() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::ROI* temp = _impl_.roi_;
  _impl_.roi_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::osirixgrpc::ROI* ROISetNameRequest::unsafe_arena_release_roi() {
  // @@protoc_insertion_point(field_release:osirixgrpc.ROISetNameRequest.roi)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::ROI* temp = _impl_.roi_;
  _impl_.roi_ = nullptr;
  return temp;
}
inline ::osirixgrpc::ROI* ROISetNameRequest::_internal_mutable_roi() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.roi_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::ROI>(GetArenaForAllocation());
    _impl_.roi_ = p;
  }
  return _impl_.roi_;
}
inline ::osirixgrpc::ROI* ROISetNameRequest::mutable_roi() {
  ::osirixgrpc::ROI* _msg = _internal_mutable_roi();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.ROISetNameRequest.roi)
  return _msg;
}
inline void ROISetNameRequest::set_allocated_roi(::osirixgrpc::ROI* roi) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.roi_);
  }
  if (roi) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(roi));
    if (message_arena != submessage_arena) {
      roi = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, roi, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.roi_ = roi;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.ROISetNameRequest.roi)
}

// string name = 2;
inline void ROISetNameRequest::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& ROISetNameRequest::name() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROISetNameRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ROISetNameRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:osirixgrpc.ROISetNameRequest.name)
}
inline std::string* ROISetNameRequest::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.ROISetNameRequest.name)
  return _s;
}
inline const std::string& ROISetNameRequest::_internal_name() const {
  return _impl_.name_.Get();
}
inline void ROISetNameRequest::_internal_set_name(const std::string& value) {
  ;


  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* ROISetNameRequest::_internal_mutable_name() {
  ;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* ROISetNameRequest::release_name() {
  // @@protoc_insertion_point(field_release:osirixgrpc.ROISetNameRequest.name)
  return _impl_.name_.Release();
}
inline void ROISetNameRequest::set_allocated_name(std::string* value) {
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.ROISetNameRequest.name)
}

// -------------------------------------------------------------------

// ROISetColorRequest

// .osirixgrpc.ROI roi = 1;
inline bool ROISetColorRequest::has_roi() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.roi_ != nullptr);
  return value;
}
inline const ::osirixgrpc::ROI& ROISetColorRequest::_internal_roi() const {
  const ::osirixgrpc::ROI* p = _impl_.roi_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::ROI&>(
      ::osirixgrpc::_ROI_default_instance_);
}
inline const ::osirixgrpc::ROI& ROISetColorRequest::roi() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROISetColorRequest.roi)
  return _internal_roi();
}
inline void ROISetColorRequest::unsafe_arena_set_allocated_roi(
    ::osirixgrpc::ROI* roi) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.roi_);
  }
  _impl_.roi_ = roi;
  if (roi) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.ROISetColorRequest.roi)
}
inline ::osirixgrpc::ROI* ROISetColorRequest::release_roi() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::ROI* temp = _impl_.roi_;
  _impl_.roi_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::osirixgrpc::ROI* ROISetColorRequest::unsafe_arena_release_roi() {
  // @@protoc_insertion_point(field_release:osirixgrpc.ROISetColorRequest.roi)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::ROI* temp = _impl_.roi_;
  _impl_.roi_ = nullptr;
  return temp;
}
inline ::osirixgrpc::ROI* ROISetColorRequest::_internal_mutable_roi() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.roi_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::ROI>(GetArenaForAllocation());
    _impl_.roi_ = p;
  }
  return _impl_.roi_;
}
inline ::osirixgrpc::ROI* ROISetColorRequest::mutable_roi() {
  ::osirixgrpc::ROI* _msg = _internal_mutable_roi();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.ROISetColorRequest.roi)
  return _msg;
}
inline void ROISetColorRequest::set_allocated_roi(::osirixgrpc::ROI* roi) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.roi_);
  }
  if (roi) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(roi));
    if (message_arena != submessage_arena) {
      roi = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, roi, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.roi_ = roi;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.ROISetColorRequest.roi)
}

// int32 r = 2;
inline void ROISetColorRequest::clear_r() {
  _impl_.r_ = 0;
}
inline ::int32_t ROISetColorRequest::r() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROISetColorRequest.r)
  return _internal_r();
}
inline void ROISetColorRequest::set_r(::int32_t value) {
  _internal_set_r(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.ROISetColorRequest.r)
}
inline ::int32_t ROISetColorRequest::_internal_r() const {
  return _impl_.r_;
}
inline void ROISetColorRequest::_internal_set_r(::int32_t value) {
  ;
  _impl_.r_ = value;
}

// int32 g = 3;
inline void ROISetColorRequest::clear_g() {
  _impl_.g_ = 0;
}
inline ::int32_t ROISetColorRequest::g() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROISetColorRequest.g)
  return _internal_g();
}
inline void ROISetColorRequest::set_g(::int32_t value) {
  _internal_set_g(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.ROISetColorRequest.g)
}
inline ::int32_t ROISetColorRequest::_internal_g() const {
  return _impl_.g_;
}
inline void ROISetColorRequest::_internal_set_g(::int32_t value) {
  ;
  _impl_.g_ = value;
}

// int32 b = 4;
inline void ROISetColorRequest::clear_b() {
  _impl_.b_ = 0;
}
inline ::int32_t ROISetColorRequest::b() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROISetColorRequest.b)
  return _internal_b();
}
inline void ROISetColorRequest::set_b(::int32_t value) {
  _internal_set_b(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.ROISetColorRequest.b)
}
inline ::int32_t ROISetColorRequest::_internal_b() const {
  return _impl_.b_;
}
inline void ROISetColorRequest::_internal_set_b(::int32_t value) {
  ;
  _impl_.b_ = value;
}

// -------------------------------------------------------------------

// ROISetOpacityRequest

// .osirixgrpc.ROI roi = 1;
inline bool ROISetOpacityRequest::has_roi() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.roi_ != nullptr);
  return value;
}
inline const ::osirixgrpc::ROI& ROISetOpacityRequest::_internal_roi() const {
  const ::osirixgrpc::ROI* p = _impl_.roi_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::ROI&>(
      ::osirixgrpc::_ROI_default_instance_);
}
inline const ::osirixgrpc::ROI& ROISetOpacityRequest::roi() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROISetOpacityRequest.roi)
  return _internal_roi();
}
inline void ROISetOpacityRequest::unsafe_arena_set_allocated_roi(
    ::osirixgrpc::ROI* roi) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.roi_);
  }
  _impl_.roi_ = roi;
  if (roi) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.ROISetOpacityRequest.roi)
}
inline ::osirixgrpc::ROI* ROISetOpacityRequest::release_roi() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::ROI* temp = _impl_.roi_;
  _impl_.roi_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::osirixgrpc::ROI* ROISetOpacityRequest::unsafe_arena_release_roi() {
  // @@protoc_insertion_point(field_release:osirixgrpc.ROISetOpacityRequest.roi)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::ROI* temp = _impl_.roi_;
  _impl_.roi_ = nullptr;
  return temp;
}
inline ::osirixgrpc::ROI* ROISetOpacityRequest::_internal_mutable_roi() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.roi_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::ROI>(GetArenaForAllocation());
    _impl_.roi_ = p;
  }
  return _impl_.roi_;
}
inline ::osirixgrpc::ROI* ROISetOpacityRequest::mutable_roi() {
  ::osirixgrpc::ROI* _msg = _internal_mutable_roi();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.ROISetOpacityRequest.roi)
  return _msg;
}
inline void ROISetOpacityRequest::set_allocated_roi(::osirixgrpc::ROI* roi) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.roi_);
  }
  if (roi) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(roi));
    if (message_arena != submessage_arena) {
      roi = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, roi, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.roi_ = roi;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.ROISetOpacityRequest.roi)
}

// float opacity = 2;
inline void ROISetOpacityRequest::clear_opacity() {
  _impl_.opacity_ = 0;
}
inline float ROISetOpacityRequest::opacity() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROISetOpacityRequest.opacity)
  return _internal_opacity();
}
inline void ROISetOpacityRequest::set_opacity(float value) {
  _internal_set_opacity(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.ROISetOpacityRequest.opacity)
}
inline float ROISetOpacityRequest::_internal_opacity() const {
  return _impl_.opacity_;
}
inline void ROISetOpacityRequest::_internal_set_opacity(float value) {
  ;
  _impl_.opacity_ = value;
}

// -------------------------------------------------------------------

// ROISetThicknessRequest

// .osirixgrpc.ROI roi = 1;
inline bool ROISetThicknessRequest::has_roi() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.roi_ != nullptr);
  return value;
}
inline const ::osirixgrpc::ROI& ROISetThicknessRequest::_internal_roi() const {
  const ::osirixgrpc::ROI* p = _impl_.roi_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::ROI&>(
      ::osirixgrpc::_ROI_default_instance_);
}
inline const ::osirixgrpc::ROI& ROISetThicknessRequest::roi() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROISetThicknessRequest.roi)
  return _internal_roi();
}
inline void ROISetThicknessRequest::unsafe_arena_set_allocated_roi(
    ::osirixgrpc::ROI* roi) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.roi_);
  }
  _impl_.roi_ = roi;
  if (roi) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.ROISetThicknessRequest.roi)
}
inline ::osirixgrpc::ROI* ROISetThicknessRequest::release_roi() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::ROI* temp = _impl_.roi_;
  _impl_.roi_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::osirixgrpc::ROI* ROISetThicknessRequest::unsafe_arena_release_roi() {
  // @@protoc_insertion_point(field_release:osirixgrpc.ROISetThicknessRequest.roi)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::ROI* temp = _impl_.roi_;
  _impl_.roi_ = nullptr;
  return temp;
}
inline ::osirixgrpc::ROI* ROISetThicknessRequest::_internal_mutable_roi() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.roi_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::ROI>(GetArenaForAllocation());
    _impl_.roi_ = p;
  }
  return _impl_.roi_;
}
inline ::osirixgrpc::ROI* ROISetThicknessRequest::mutable_roi() {
  ::osirixgrpc::ROI* _msg = _internal_mutable_roi();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.ROISetThicknessRequest.roi)
  return _msg;
}
inline void ROISetThicknessRequest::set_allocated_roi(::osirixgrpc::ROI* roi) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.roi_);
  }
  if (roi) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(roi));
    if (message_arena != submessage_arena) {
      roi = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, roi, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.roi_ = roi;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.ROISetThicknessRequest.roi)
}

// float thickness = 2;
inline void ROISetThicknessRequest::clear_thickness() {
  _impl_.thickness_ = 0;
}
inline float ROISetThicknessRequest::thickness() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROISetThicknessRequest.thickness)
  return _internal_thickness();
}
inline void ROISetThicknessRequest::set_thickness(float value) {
  _internal_set_thickness(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.ROISetThicknessRequest.thickness)
}
inline float ROISetThicknessRequest::_internal_thickness() const {
  return _impl_.thickness_;
}
inline void ROISetThicknessRequest::_internal_set_thickness(float value) {
  ;
  _impl_.thickness_ = value;
}

// -------------------------------------------------------------------

// ROISetPointsRequest_Point2D

// float x = 1;
inline void ROISetPointsRequest_Point2D::clear_x() {
  _impl_.x_ = 0;
}
inline float ROISetPointsRequest_Point2D::x() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROISetPointsRequest.Point2D.x)
  return _internal_x();
}
inline void ROISetPointsRequest_Point2D::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.ROISetPointsRequest.Point2D.x)
}
inline float ROISetPointsRequest_Point2D::_internal_x() const {
  return _impl_.x_;
}
inline void ROISetPointsRequest_Point2D::_internal_set_x(float value) {
  ;
  _impl_.x_ = value;
}

// float y = 2;
inline void ROISetPointsRequest_Point2D::clear_y() {
  _impl_.y_ = 0;
}
inline float ROISetPointsRequest_Point2D::y() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROISetPointsRequest.Point2D.y)
  return _internal_y();
}
inline void ROISetPointsRequest_Point2D::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.ROISetPointsRequest.Point2D.y)
}
inline float ROISetPointsRequest_Point2D::_internal_y() const {
  return _impl_.y_;
}
inline void ROISetPointsRequest_Point2D::_internal_set_y(float value) {
  ;
  _impl_.y_ = value;
}

// -------------------------------------------------------------------

// ROISetPointsRequest

// .osirixgrpc.ROI roi = 1;
inline bool ROISetPointsRequest::has_roi() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.roi_ != nullptr);
  return value;
}
inline const ::osirixgrpc::ROI& ROISetPointsRequest::_internal_roi() const {
  const ::osirixgrpc::ROI* p = _impl_.roi_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::ROI&>(
      ::osirixgrpc::_ROI_default_instance_);
}
inline const ::osirixgrpc::ROI& ROISetPointsRequest::roi() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROISetPointsRequest.roi)
  return _internal_roi();
}
inline void ROISetPointsRequest::unsafe_arena_set_allocated_roi(
    ::osirixgrpc::ROI* roi) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.roi_);
  }
  _impl_.roi_ = roi;
  if (roi) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.ROISetPointsRequest.roi)
}
inline ::osirixgrpc::ROI* ROISetPointsRequest::release_roi() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::ROI* temp = _impl_.roi_;
  _impl_.roi_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::osirixgrpc::ROI* ROISetPointsRequest::unsafe_arena_release_roi() {
  // @@protoc_insertion_point(field_release:osirixgrpc.ROISetPointsRequest.roi)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::ROI* temp = _impl_.roi_;
  _impl_.roi_ = nullptr;
  return temp;
}
inline ::osirixgrpc::ROI* ROISetPointsRequest::_internal_mutable_roi() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.roi_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::ROI>(GetArenaForAllocation());
    _impl_.roi_ = p;
  }
  return _impl_.roi_;
}
inline ::osirixgrpc::ROI* ROISetPointsRequest::mutable_roi() {
  ::osirixgrpc::ROI* _msg = _internal_mutable_roi();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.ROISetPointsRequest.roi)
  return _msg;
}
inline void ROISetPointsRequest::set_allocated_roi(::osirixgrpc::ROI* roi) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.roi_);
  }
  if (roi) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(roi));
    if (message_arena != submessage_arena) {
      roi = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, roi, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.roi_ = roi;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.ROISetPointsRequest.roi)
}

// repeated .osirixgrpc.ROISetPointsRequest.Point2D points = 2;
inline int ROISetPointsRequest::_internal_points_size() const {
  return _impl_.points_.size();
}
inline int ROISetPointsRequest::points_size() const {
  return _internal_points_size();
}
inline void ROISetPointsRequest::clear_points() {
  _internal_mutable_points()->Clear();
}
inline ::osirixgrpc::ROISetPointsRequest_Point2D* ROISetPointsRequest::mutable_points(int index) {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.ROISetPointsRequest.points)
  return _internal_mutable_points()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::osirixgrpc::ROISetPointsRequest_Point2D >*
ROISetPointsRequest::mutable_points() {
  // @@protoc_insertion_point(field_mutable_list:osirixgrpc.ROISetPointsRequest.points)
  return _internal_mutable_points();
}
inline const ::osirixgrpc::ROISetPointsRequest_Point2D& ROISetPointsRequest::_internal_points(int index) const {
  return _internal_points().Get(index);
}
inline const ::osirixgrpc::ROISetPointsRequest_Point2D& ROISetPointsRequest::points(int index) const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROISetPointsRequest.points)
  return _internal_points(index);
}
inline ::osirixgrpc::ROISetPointsRequest_Point2D* ROISetPointsRequest::_internal_add_points() {
  return _internal_mutable_points()->Add();
}
inline ::osirixgrpc::ROISetPointsRequest_Point2D* ROISetPointsRequest::add_points() {
  ::osirixgrpc::ROISetPointsRequest_Point2D* _add = _internal_add_points();
  // @@protoc_insertion_point(field_add:osirixgrpc.ROISetPointsRequest.points)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::osirixgrpc::ROISetPointsRequest_Point2D >&
ROISetPointsRequest::points() const {
  // @@protoc_insertion_point(field_list:osirixgrpc.ROISetPointsRequest.points)
  return _internal_points();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::osirixgrpc::ROISetPointsRequest_Point2D>&
ROISetPointsRequest::_internal_points() const {
  return _impl_.points_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::osirixgrpc::ROISetPointsRequest_Point2D>*
ROISetPointsRequest::_internal_mutable_points() {
  return &_impl_.points_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace osirixgrpc


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_roi_2eproto_2epb_2eh
