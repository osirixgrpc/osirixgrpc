// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dicomseries.proto

#include "dicomseries.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace osirixgrpc {
template <typename>
PROTOBUF_CONSTEXPR DicomSeriesPathsResponse::DicomSeriesPathsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.paths_)*/{}
  , /*decltype(_impl_.status_)*/nullptr} {}
struct DicomSeriesPathsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DicomSeriesPathsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DicomSeriesPathsResponseDefaultTypeInternal() {}
  union {
    DicomSeriesPathsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DicomSeriesPathsResponseDefaultTypeInternal _DicomSeriesPathsResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR DicomSeriesPreviousSeriesResponse::DicomSeriesPreviousSeriesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.status_)*/nullptr
  , /*decltype(_impl_.previous_series_)*/nullptr} {}
struct DicomSeriesPreviousSeriesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DicomSeriesPreviousSeriesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DicomSeriesPreviousSeriesResponseDefaultTypeInternal() {}
  union {
    DicomSeriesPreviousSeriesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DicomSeriesPreviousSeriesResponseDefaultTypeInternal _DicomSeriesPreviousSeriesResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR DicomSeriesNextSeriesResponse::DicomSeriesNextSeriesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.status_)*/nullptr
  , /*decltype(_impl_.next_series_)*/nullptr} {}
struct DicomSeriesNextSeriesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DicomSeriesNextSeriesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DicomSeriesNextSeriesResponseDefaultTypeInternal() {}
  union {
    DicomSeriesNextSeriesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DicomSeriesNextSeriesResponseDefaultTypeInternal _DicomSeriesNextSeriesResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR DicomSeriesSortedImagesResponse::DicomSeriesSortedImagesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.sorted_images_)*/{}
  , /*decltype(_impl_.status_)*/nullptr} {}
struct DicomSeriesSortedImagesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DicomSeriesSortedImagesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DicomSeriesSortedImagesResponseDefaultTypeInternal() {}
  union {
    DicomSeriesSortedImagesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DicomSeriesSortedImagesResponseDefaultTypeInternal _DicomSeriesSortedImagesResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR DicomSeriesStudyResponse::DicomSeriesStudyResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.status_)*/nullptr
  , /*decltype(_impl_.study_)*/nullptr} {}
struct DicomSeriesStudyResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DicomSeriesStudyResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DicomSeriesStudyResponseDefaultTypeInternal() {}
  union {
    DicomSeriesStudyResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DicomSeriesStudyResponseDefaultTypeInternal _DicomSeriesStudyResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR DicomSeriesImagesResponse::DicomSeriesImagesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.images_)*/{}
  , /*decltype(_impl_.status_)*/nullptr} {}
struct DicomSeriesImagesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DicomSeriesImagesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DicomSeriesImagesResponseDefaultTypeInternal() {}
  union {
    DicomSeriesImagesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DicomSeriesImagesResponseDefaultTypeInternal _DicomSeriesImagesResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR DicomSeriesSeriesInstanceUIDResponse::DicomSeriesSeriesInstanceUIDResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.series_instance_uid_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.status_)*/nullptr} {}
struct DicomSeriesSeriesInstanceUIDResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DicomSeriesSeriesInstanceUIDResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DicomSeriesSeriesInstanceUIDResponseDefaultTypeInternal() {}
  union {
    DicomSeriesSeriesInstanceUIDResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DicomSeriesSeriesInstanceUIDResponseDefaultTypeInternal _DicomSeriesSeriesInstanceUIDResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR DicomSeriesSeriesSOPClassUIDResponse::DicomSeriesSeriesSOPClassUIDResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.series_sop_class_uid_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.status_)*/nullptr} {}
struct DicomSeriesSeriesSOPClassUIDResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DicomSeriesSeriesSOPClassUIDResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DicomSeriesSeriesSOPClassUIDResponseDefaultTypeInternal() {}
  union {
    DicomSeriesSeriesSOPClassUIDResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DicomSeriesSeriesSOPClassUIDResponseDefaultTypeInternal _DicomSeriesSeriesSOPClassUIDResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR DicomSeriesSeriesDescriptionResponse::DicomSeriesSeriesDescriptionResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.series_description_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.status_)*/nullptr} {}
struct DicomSeriesSeriesDescriptionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DicomSeriesSeriesDescriptionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DicomSeriesSeriesDescriptionResponseDefaultTypeInternal() {}
  union {
    DicomSeriesSeriesDescriptionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DicomSeriesSeriesDescriptionResponseDefaultTypeInternal _DicomSeriesSeriesDescriptionResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR DicomSeriesModalityResponse::DicomSeriesModalityResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.modality_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.status_)*/nullptr} {}
struct DicomSeriesModalityResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DicomSeriesModalityResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DicomSeriesModalityResponseDefaultTypeInternal() {}
  union {
    DicomSeriesModalityResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DicomSeriesModalityResponseDefaultTypeInternal _DicomSeriesModalityResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR DicomSeriesNameResponse::DicomSeriesNameResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.name_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.status_)*/nullptr} {}
struct DicomSeriesNameResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DicomSeriesNameResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DicomSeriesNameResponseDefaultTypeInternal() {}
  union {
    DicomSeriesNameResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DicomSeriesNameResponseDefaultTypeInternal _DicomSeriesNameResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR DicomSeriesNumberOfImagesResponse::DicomSeriesNumberOfImagesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.status_)*/nullptr
  , /*decltype(_impl_.number_of_images_)*/ 0
} {}
struct DicomSeriesNumberOfImagesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DicomSeriesNumberOfImagesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DicomSeriesNumberOfImagesResponseDefaultTypeInternal() {}
  union {
    DicomSeriesNumberOfImagesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DicomSeriesNumberOfImagesResponseDefaultTypeInternal _DicomSeriesNumberOfImagesResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR DicomSeriesDateResponse::DicomSeriesDateResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.status_)*/nullptr
  , /*decltype(_impl_.year_)*/ 0

  , /*decltype(_impl_.month_)*/ 0

  , /*decltype(_impl_.day_)*/ 0

  , /*decltype(_impl_.hour_)*/ 0

  , /*decltype(_impl_.minute_)*/ 0

  , /*decltype(_impl_.second_)*/ 0

  , /*decltype(_impl_.millisecond_)*/ 0
} {}
struct DicomSeriesDateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DicomSeriesDateResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DicomSeriesDateResponseDefaultTypeInternal() {}
  union {
    DicomSeriesDateResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DicomSeriesDateResponseDefaultTypeInternal _DicomSeriesDateResponse_default_instance_;
}  // namespace osirixgrpc
static ::_pb::Metadata file_level_metadata_dicomseries_2eproto[13];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_dicomseries_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_dicomseries_2eproto = nullptr;
const ::uint32_t TableStruct_dicomseries_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesPathsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesPathsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesPathsResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesPathsResponse, _impl_.paths_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesPreviousSeriesResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesPreviousSeriesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesPreviousSeriesResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesPreviousSeriesResponse, _impl_.previous_series_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesNextSeriesResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesNextSeriesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesNextSeriesResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesNextSeriesResponse, _impl_.next_series_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesSortedImagesResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesSortedImagesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesSortedImagesResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesSortedImagesResponse, _impl_.sorted_images_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesStudyResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesStudyResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesStudyResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesStudyResponse, _impl_.study_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesImagesResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesImagesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesImagesResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesImagesResponse, _impl_.images_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesSeriesInstanceUIDResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesSeriesInstanceUIDResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesSeriesInstanceUIDResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesSeriesInstanceUIDResponse, _impl_.series_instance_uid_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesSeriesSOPClassUIDResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesSeriesSOPClassUIDResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesSeriesSOPClassUIDResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesSeriesSOPClassUIDResponse, _impl_.series_sop_class_uid_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesSeriesDescriptionResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesSeriesDescriptionResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesSeriesDescriptionResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesSeriesDescriptionResponse, _impl_.series_description_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesModalityResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesModalityResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesModalityResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesModalityResponse, _impl_.modality_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesNameResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesNameResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesNameResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesNameResponse, _impl_.name_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesNumberOfImagesResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesNumberOfImagesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesNumberOfImagesResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesNumberOfImagesResponse, _impl_.number_of_images_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesDateResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesDateResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesDateResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesDateResponse, _impl_.year_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesDateResponse, _impl_.month_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesDateResponse, _impl_.day_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesDateResponse, _impl_.hour_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesDateResponse, _impl_.minute_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesDateResponse, _impl_.second_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesDateResponse, _impl_.millisecond_),
    0,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, 10, -1, sizeof(::osirixgrpc::DicomSeriesPathsResponse)},
        { 12, 22, -1, sizeof(::osirixgrpc::DicomSeriesPreviousSeriesResponse)},
        { 24, 34, -1, sizeof(::osirixgrpc::DicomSeriesNextSeriesResponse)},
        { 36, 46, -1, sizeof(::osirixgrpc::DicomSeriesSortedImagesResponse)},
        { 48, 58, -1, sizeof(::osirixgrpc::DicomSeriesStudyResponse)},
        { 60, 70, -1, sizeof(::osirixgrpc::DicomSeriesImagesResponse)},
        { 72, 82, -1, sizeof(::osirixgrpc::DicomSeriesSeriesInstanceUIDResponse)},
        { 84, 94, -1, sizeof(::osirixgrpc::DicomSeriesSeriesSOPClassUIDResponse)},
        { 96, 106, -1, sizeof(::osirixgrpc::DicomSeriesSeriesDescriptionResponse)},
        { 108, 118, -1, sizeof(::osirixgrpc::DicomSeriesModalityResponse)},
        { 120, 130, -1, sizeof(::osirixgrpc::DicomSeriesNameResponse)},
        { 132, 142, -1, sizeof(::osirixgrpc::DicomSeriesNumberOfImagesResponse)},
        { 144, 160, -1, sizeof(::osirixgrpc::DicomSeriesDateResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::osirixgrpc::_DicomSeriesPathsResponse_default_instance_._instance,
    &::osirixgrpc::_DicomSeriesPreviousSeriesResponse_default_instance_._instance,
    &::osirixgrpc::_DicomSeriesNextSeriesResponse_default_instance_._instance,
    &::osirixgrpc::_DicomSeriesSortedImagesResponse_default_instance_._instance,
    &::osirixgrpc::_DicomSeriesStudyResponse_default_instance_._instance,
    &::osirixgrpc::_DicomSeriesImagesResponse_default_instance_._instance,
    &::osirixgrpc::_DicomSeriesSeriesInstanceUIDResponse_default_instance_._instance,
    &::osirixgrpc::_DicomSeriesSeriesSOPClassUIDResponse_default_instance_._instance,
    &::osirixgrpc::_DicomSeriesSeriesDescriptionResponse_default_instance_._instance,
    &::osirixgrpc::_DicomSeriesModalityResponse_default_instance_._instance,
    &::osirixgrpc::_DicomSeriesNameResponse_default_instance_._instance,
    &::osirixgrpc::_DicomSeriesNumberOfImagesResponse_default_instance_._instance,
    &::osirixgrpc::_DicomSeriesDateResponse_default_instance_._instance,
};
const char descriptor_table_protodef_dicomseries_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\021dicomseries.proto\022\nosirixgrpc\032\017utiliti"
    "es.proto\032\013types.proto\"M\n\030DicomSeriesPath"
    "sResponse\022\"\n\006status\030\001 \001(\0132\022.osirixgrpc.S"
    "tatus\022\r\n\005paths\030\002 \003(\t\"y\n!DicomSeriesPrevi"
    "ousSeriesResponse\022\"\n\006status\030\001 \001(\0132\022.osir"
    "ixgrpc.Status\0220\n\017previous_series\030\002 \001(\0132\027"
    ".osirixgrpc.DicomSeries\"q\n\035DicomSeriesNe"
    "xtSeriesResponse\022\"\n\006status\030\001 \001(\0132\022.osiri"
    "xgrpc.Status\022,\n\013next_series\030\002 \001(\0132\027.osir"
    "ixgrpc.DicomSeries\"t\n\037DicomSeriesSortedI"
    "magesResponse\022\"\n\006status\030\001 \001(\0132\022.osirixgr"
    "pc.Status\022-\n\rsorted_images\030\002 \003(\0132\026.osiri"
    "xgrpc.DicomImage\"e\n\030DicomSeriesStudyResp"
    "onse\022\"\n\006status\030\001 \001(\0132\022.osirixgrpc.Status"
    "\022%\n\005study\030\002 \001(\0132\026.osirixgrpc.DicomStudy\""
    "g\n\031DicomSeriesImagesResponse\022\"\n\006status\030\001"
    " \001(\0132\022.osirixgrpc.Status\022&\n\006images\030\002 \003(\013"
    "2\026.osirixgrpc.DicomImage\"g\n$DicomSeriesS"
    "eriesInstanceUIDResponse\022\"\n\006status\030\001 \001(\013"
    "2\022.osirixgrpc.Status\022\033\n\023series_instance_"
    "uid\030\002 \001(\t\"h\n$DicomSeriesSeriesSOPClassUI"
    "DResponse\022\"\n\006status\030\001 \001(\0132\022.osirixgrpc.S"
    "tatus\022\034\n\024series_sop_class_uid\030\002 \001(\t\"f\n$D"
    "icomSeriesSeriesDescriptionResponse\022\"\n\006s"
    "tatus\030\001 \001(\0132\022.osirixgrpc.Status\022\032\n\022serie"
    "s_description\030\002 \001(\t\"S\n\033DicomSeriesModali"
    "tyResponse\022\"\n\006status\030\001 \001(\0132\022.osirixgrpc."
    "Status\022\020\n\010modality\030\002 \001(\t\"K\n\027DicomSeriesN"
    "ameResponse\022\"\n\006status\030\001 \001(\0132\022.osirixgrpc"
    ".Status\022\014\n\004name\030\002 \001(\t\"a\n!DicomSeriesNumb"
    "erOfImagesResponse\022\"\n\006status\030\001 \001(\0132\022.osi"
    "rixgrpc.Status\022\030\n\020number_of_images\030\002 \001(\005"
    "\"\252\001\n\027DicomSeriesDateResponse\022\"\n\006status\030\001"
    " \001(\0132\022.osirixgrpc.Status\022\014\n\004year\030\002 \001(\005\022\r"
    "\n\005month\030\003 \001(\005\022\013\n\003day\030\004 \001(\005\022\014\n\004hour\030\005 \001(\005"
    "\022\016\n\006minute\030\006 \001(\005\022\016\n\006second\030\007 \001(\005\022\023\n\013mill"
    "isecond\030\010 \001(\005b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_dicomseries_2eproto_deps[2] =
    {
        &::descriptor_table_types_2eproto,
        &::descriptor_table_utilities_2eproto,
};
static ::absl::once_flag descriptor_table_dicomseries_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_dicomseries_2eproto = {
    false,
    false,
    1461,
    descriptor_table_protodef_dicomseries_2eproto,
    "dicomseries.proto",
    &descriptor_table_dicomseries_2eproto_once,
    descriptor_table_dicomseries_2eproto_deps,
    2,
    13,
    schemas,
    file_default_instances,
    TableStruct_dicomseries_2eproto::offsets,
    file_level_metadata_dicomseries_2eproto,
    file_level_enum_descriptors_dicomseries_2eproto,
    file_level_service_descriptors_dicomseries_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_dicomseries_2eproto_getter() {
  return &descriptor_table_dicomseries_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_dicomseries_2eproto(&descriptor_table_dicomseries_2eproto);
namespace osirixgrpc {
// ===================================================================

class DicomSeriesPathsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<DicomSeriesPathsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DicomSeriesPathsResponse, _impl_._has_bits_);
  static const ::osirixgrpc::Status& status(const DicomSeriesPathsResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osirixgrpc::Status&
DicomSeriesPathsResponse::_Internal::status(const DicomSeriesPathsResponse* msg) {
  return *msg->_impl_.status_;
}
void DicomSeriesPathsResponse::clear_status() {
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
DicomSeriesPathsResponse::DicomSeriesPathsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.DicomSeriesPathsResponse)
}
DicomSeriesPathsResponse::DicomSeriesPathsResponse(const DicomSeriesPathsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DicomSeriesPathsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.paths_){from._impl_.paths_}
    , decltype(_impl_.status_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.status_ = new ::osirixgrpc::Status(*from._impl_.status_);
  }
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.DicomSeriesPathsResponse)
}

inline void DicomSeriesPathsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.paths_){arena}
    , decltype(_impl_.status_){nullptr}
  };
}

DicomSeriesPathsResponse::~DicomSeriesPathsResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.DicomSeriesPathsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DicomSeriesPathsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_paths()->~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.status_;
}

void DicomSeriesPathsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DicomSeriesPathsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.DicomSeriesPathsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_paths()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DicomSeriesPathsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated string paths = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_paths();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "osirixgrpc.DicomSeriesPathsResponse.paths"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* DicomSeriesPathsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.DicomSeriesPathsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // repeated string paths = 2;
  for (int i = 0, n = this->_internal_paths_size(); i < n; ++i) {
    const auto& s = this->_internal_paths(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "osirixgrpc.DicomSeriesPathsResponse.paths");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.DicomSeriesPathsResponse)
  return target;
}

::size_t DicomSeriesPathsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.DicomSeriesPathsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string paths = 2;
  total_size += 1 * ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_internal_paths().size());
  for (int i = 0, n = _internal_paths().size(); i < n; ++i) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        _internal_paths().Get(i));
  }

  // .osirixgrpc.Status status = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.status_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DicomSeriesPathsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DicomSeriesPathsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DicomSeriesPathsResponse::GetClassData() const { return &_class_data_; }


void DicomSeriesPathsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DicomSeriesPathsResponse*>(&to_msg);
  auto& from = static_cast<const DicomSeriesPathsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.DicomSeriesPathsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_paths()->MergeFrom(from._internal_paths());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_status()->::osirixgrpc::Status::MergeFrom(
        from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DicomSeriesPathsResponse::CopyFrom(const DicomSeriesPathsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.DicomSeriesPathsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DicomSeriesPathsResponse::IsInitialized() const {
  return true;
}

void DicomSeriesPathsResponse::InternalSwap(DicomSeriesPathsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_paths()->InternalSwap(
      other->_internal_mutable_paths());
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DicomSeriesPathsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dicomseries_2eproto_getter, &descriptor_table_dicomseries_2eproto_once,
      file_level_metadata_dicomseries_2eproto[0]);
}
// ===================================================================

class DicomSeriesPreviousSeriesResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<DicomSeriesPreviousSeriesResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DicomSeriesPreviousSeriesResponse, _impl_._has_bits_);
  static const ::osirixgrpc::Status& status(const DicomSeriesPreviousSeriesResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::osirixgrpc::DicomSeries& previous_series(const DicomSeriesPreviousSeriesResponse* msg);
  static void set_has_previous_series(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::osirixgrpc::Status&
DicomSeriesPreviousSeriesResponse::_Internal::status(const DicomSeriesPreviousSeriesResponse* msg) {
  return *msg->_impl_.status_;
}
const ::osirixgrpc::DicomSeries&
DicomSeriesPreviousSeriesResponse::_Internal::previous_series(const DicomSeriesPreviousSeriesResponse* msg) {
  return *msg->_impl_.previous_series_;
}
void DicomSeriesPreviousSeriesResponse::clear_status() {
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void DicomSeriesPreviousSeriesResponse::clear_previous_series() {
  if (_impl_.previous_series_ != nullptr) _impl_.previous_series_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
DicomSeriesPreviousSeriesResponse::DicomSeriesPreviousSeriesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.DicomSeriesPreviousSeriesResponse)
}
DicomSeriesPreviousSeriesResponse::DicomSeriesPreviousSeriesResponse(const DicomSeriesPreviousSeriesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DicomSeriesPreviousSeriesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.status_){nullptr}
    , decltype(_impl_.previous_series_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.status_ = new ::osirixgrpc::Status(*from._impl_.status_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.previous_series_ = new ::osirixgrpc::DicomSeries(*from._impl_.previous_series_);
  }
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.DicomSeriesPreviousSeriesResponse)
}

inline void DicomSeriesPreviousSeriesResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.status_){nullptr}
    , decltype(_impl_.previous_series_){nullptr}
  };
}

DicomSeriesPreviousSeriesResponse::~DicomSeriesPreviousSeriesResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.DicomSeriesPreviousSeriesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DicomSeriesPreviousSeriesResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.status_;
  if (this != internal_default_instance()) delete _impl_.previous_series_;
}

void DicomSeriesPreviousSeriesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DicomSeriesPreviousSeriesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.DicomSeriesPreviousSeriesResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.previous_series_ != nullptr);
      _impl_.previous_series_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DicomSeriesPreviousSeriesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .osirixgrpc.DicomSeries previous_series = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_previous_series(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* DicomSeriesPreviousSeriesResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.DicomSeriesPreviousSeriesResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // .osirixgrpc.DicomSeries previous_series = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::previous_series(this),
        _Internal::previous_series(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.DicomSeriesPreviousSeriesResponse)
  return target;
}

::size_t DicomSeriesPreviousSeriesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.DicomSeriesPreviousSeriesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .osirixgrpc.Status status = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.status_);
    }

    // .osirixgrpc.DicomSeries previous_series = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.previous_series_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DicomSeriesPreviousSeriesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DicomSeriesPreviousSeriesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DicomSeriesPreviousSeriesResponse::GetClassData() const { return &_class_data_; }


void DicomSeriesPreviousSeriesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DicomSeriesPreviousSeriesResponse*>(&to_msg);
  auto& from = static_cast<const DicomSeriesPreviousSeriesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.DicomSeriesPreviousSeriesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_status()->::osirixgrpc::Status::MergeFrom(
          from._internal_status());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_previous_series()->::osirixgrpc::DicomSeries::MergeFrom(
          from._internal_previous_series());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DicomSeriesPreviousSeriesResponse::CopyFrom(const DicomSeriesPreviousSeriesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.DicomSeriesPreviousSeriesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DicomSeriesPreviousSeriesResponse::IsInitialized() const {
  return true;
}

void DicomSeriesPreviousSeriesResponse::InternalSwap(DicomSeriesPreviousSeriesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DicomSeriesPreviousSeriesResponse, _impl_.previous_series_)
      + sizeof(DicomSeriesPreviousSeriesResponse::_impl_.previous_series_)
      - PROTOBUF_FIELD_OFFSET(DicomSeriesPreviousSeriesResponse, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DicomSeriesPreviousSeriesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dicomseries_2eproto_getter, &descriptor_table_dicomseries_2eproto_once,
      file_level_metadata_dicomseries_2eproto[1]);
}
// ===================================================================

class DicomSeriesNextSeriesResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<DicomSeriesNextSeriesResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DicomSeriesNextSeriesResponse, _impl_._has_bits_);
  static const ::osirixgrpc::Status& status(const DicomSeriesNextSeriesResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::osirixgrpc::DicomSeries& next_series(const DicomSeriesNextSeriesResponse* msg);
  static void set_has_next_series(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::osirixgrpc::Status&
DicomSeriesNextSeriesResponse::_Internal::status(const DicomSeriesNextSeriesResponse* msg) {
  return *msg->_impl_.status_;
}
const ::osirixgrpc::DicomSeries&
DicomSeriesNextSeriesResponse::_Internal::next_series(const DicomSeriesNextSeriesResponse* msg) {
  return *msg->_impl_.next_series_;
}
void DicomSeriesNextSeriesResponse::clear_status() {
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void DicomSeriesNextSeriesResponse::clear_next_series() {
  if (_impl_.next_series_ != nullptr) _impl_.next_series_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
DicomSeriesNextSeriesResponse::DicomSeriesNextSeriesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.DicomSeriesNextSeriesResponse)
}
DicomSeriesNextSeriesResponse::DicomSeriesNextSeriesResponse(const DicomSeriesNextSeriesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DicomSeriesNextSeriesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.status_){nullptr}
    , decltype(_impl_.next_series_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.status_ = new ::osirixgrpc::Status(*from._impl_.status_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.next_series_ = new ::osirixgrpc::DicomSeries(*from._impl_.next_series_);
  }
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.DicomSeriesNextSeriesResponse)
}

inline void DicomSeriesNextSeriesResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.status_){nullptr}
    , decltype(_impl_.next_series_){nullptr}
  };
}

DicomSeriesNextSeriesResponse::~DicomSeriesNextSeriesResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.DicomSeriesNextSeriesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DicomSeriesNextSeriesResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.status_;
  if (this != internal_default_instance()) delete _impl_.next_series_;
}

void DicomSeriesNextSeriesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DicomSeriesNextSeriesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.DicomSeriesNextSeriesResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.next_series_ != nullptr);
      _impl_.next_series_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DicomSeriesNextSeriesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .osirixgrpc.DicomSeries next_series = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_next_series(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* DicomSeriesNextSeriesResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.DicomSeriesNextSeriesResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // .osirixgrpc.DicomSeries next_series = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::next_series(this),
        _Internal::next_series(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.DicomSeriesNextSeriesResponse)
  return target;
}

::size_t DicomSeriesNextSeriesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.DicomSeriesNextSeriesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .osirixgrpc.Status status = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.status_);
    }

    // .osirixgrpc.DicomSeries next_series = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.next_series_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DicomSeriesNextSeriesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DicomSeriesNextSeriesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DicomSeriesNextSeriesResponse::GetClassData() const { return &_class_data_; }


void DicomSeriesNextSeriesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DicomSeriesNextSeriesResponse*>(&to_msg);
  auto& from = static_cast<const DicomSeriesNextSeriesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.DicomSeriesNextSeriesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_status()->::osirixgrpc::Status::MergeFrom(
          from._internal_status());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_next_series()->::osirixgrpc::DicomSeries::MergeFrom(
          from._internal_next_series());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DicomSeriesNextSeriesResponse::CopyFrom(const DicomSeriesNextSeriesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.DicomSeriesNextSeriesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DicomSeriesNextSeriesResponse::IsInitialized() const {
  return true;
}

void DicomSeriesNextSeriesResponse::InternalSwap(DicomSeriesNextSeriesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DicomSeriesNextSeriesResponse, _impl_.next_series_)
      + sizeof(DicomSeriesNextSeriesResponse::_impl_.next_series_)
      - PROTOBUF_FIELD_OFFSET(DicomSeriesNextSeriesResponse, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DicomSeriesNextSeriesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dicomseries_2eproto_getter, &descriptor_table_dicomseries_2eproto_once,
      file_level_metadata_dicomseries_2eproto[2]);
}
// ===================================================================

class DicomSeriesSortedImagesResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<DicomSeriesSortedImagesResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DicomSeriesSortedImagesResponse, _impl_._has_bits_);
  static const ::osirixgrpc::Status& status(const DicomSeriesSortedImagesResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osirixgrpc::Status&
DicomSeriesSortedImagesResponse::_Internal::status(const DicomSeriesSortedImagesResponse* msg) {
  return *msg->_impl_.status_;
}
void DicomSeriesSortedImagesResponse::clear_status() {
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void DicomSeriesSortedImagesResponse::clear_sorted_images() {
  _internal_mutable_sorted_images()->Clear();
}
DicomSeriesSortedImagesResponse::DicomSeriesSortedImagesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.DicomSeriesSortedImagesResponse)
}
DicomSeriesSortedImagesResponse::DicomSeriesSortedImagesResponse(const DicomSeriesSortedImagesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DicomSeriesSortedImagesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.sorted_images_){from._impl_.sorted_images_}
    , decltype(_impl_.status_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.status_ = new ::osirixgrpc::Status(*from._impl_.status_);
  }
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.DicomSeriesSortedImagesResponse)
}

inline void DicomSeriesSortedImagesResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.sorted_images_){arena}
    , decltype(_impl_.status_){nullptr}
  };
}

DicomSeriesSortedImagesResponse::~DicomSeriesSortedImagesResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.DicomSeriesSortedImagesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DicomSeriesSortedImagesResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_sorted_images()->~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.status_;
}

void DicomSeriesSortedImagesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DicomSeriesSortedImagesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.DicomSeriesSortedImagesResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_sorted_images()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DicomSeriesSortedImagesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .osirixgrpc.DicomImage sorted_images = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_sorted_images(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* DicomSeriesSortedImagesResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.DicomSeriesSortedImagesResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // repeated .osirixgrpc.DicomImage sorted_images = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_sorted_images_size()); i < n; i++) {
    const auto& repfield = this->_internal_sorted_images(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.DicomSeriesSortedImagesResponse)
  return target;
}

::size_t DicomSeriesSortedImagesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.DicomSeriesSortedImagesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .osirixgrpc.DicomImage sorted_images = 2;
  total_size += 1UL * this->_internal_sorted_images_size();
  for (const auto& msg : this->_internal_sorted_images()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .osirixgrpc.Status status = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.status_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DicomSeriesSortedImagesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DicomSeriesSortedImagesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DicomSeriesSortedImagesResponse::GetClassData() const { return &_class_data_; }


void DicomSeriesSortedImagesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DicomSeriesSortedImagesResponse*>(&to_msg);
  auto& from = static_cast<const DicomSeriesSortedImagesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.DicomSeriesSortedImagesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_sorted_images()->MergeFrom(from._internal_sorted_images());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_status()->::osirixgrpc::Status::MergeFrom(
        from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DicomSeriesSortedImagesResponse::CopyFrom(const DicomSeriesSortedImagesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.DicomSeriesSortedImagesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DicomSeriesSortedImagesResponse::IsInitialized() const {
  return true;
}

void DicomSeriesSortedImagesResponse::InternalSwap(DicomSeriesSortedImagesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_sorted_images()->InternalSwap(other->_internal_mutable_sorted_images());
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DicomSeriesSortedImagesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dicomseries_2eproto_getter, &descriptor_table_dicomseries_2eproto_once,
      file_level_metadata_dicomseries_2eproto[3]);
}
// ===================================================================

class DicomSeriesStudyResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<DicomSeriesStudyResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DicomSeriesStudyResponse, _impl_._has_bits_);
  static const ::osirixgrpc::Status& status(const DicomSeriesStudyResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::osirixgrpc::DicomStudy& study(const DicomSeriesStudyResponse* msg);
  static void set_has_study(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::osirixgrpc::Status&
DicomSeriesStudyResponse::_Internal::status(const DicomSeriesStudyResponse* msg) {
  return *msg->_impl_.status_;
}
const ::osirixgrpc::DicomStudy&
DicomSeriesStudyResponse::_Internal::study(const DicomSeriesStudyResponse* msg) {
  return *msg->_impl_.study_;
}
void DicomSeriesStudyResponse::clear_status() {
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void DicomSeriesStudyResponse::clear_study() {
  if (_impl_.study_ != nullptr) _impl_.study_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
DicomSeriesStudyResponse::DicomSeriesStudyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.DicomSeriesStudyResponse)
}
DicomSeriesStudyResponse::DicomSeriesStudyResponse(const DicomSeriesStudyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DicomSeriesStudyResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.status_){nullptr}
    , decltype(_impl_.study_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.status_ = new ::osirixgrpc::Status(*from._impl_.status_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.study_ = new ::osirixgrpc::DicomStudy(*from._impl_.study_);
  }
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.DicomSeriesStudyResponse)
}

inline void DicomSeriesStudyResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.status_){nullptr}
    , decltype(_impl_.study_){nullptr}
  };
}

DicomSeriesStudyResponse::~DicomSeriesStudyResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.DicomSeriesStudyResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DicomSeriesStudyResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.status_;
  if (this != internal_default_instance()) delete _impl_.study_;
}

void DicomSeriesStudyResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DicomSeriesStudyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.DicomSeriesStudyResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.study_ != nullptr);
      _impl_.study_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DicomSeriesStudyResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .osirixgrpc.DicomStudy study = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_study(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* DicomSeriesStudyResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.DicomSeriesStudyResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // .osirixgrpc.DicomStudy study = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::study(this),
        _Internal::study(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.DicomSeriesStudyResponse)
  return target;
}

::size_t DicomSeriesStudyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.DicomSeriesStudyResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .osirixgrpc.Status status = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.status_);
    }

    // .osirixgrpc.DicomStudy study = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.study_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DicomSeriesStudyResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DicomSeriesStudyResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DicomSeriesStudyResponse::GetClassData() const { return &_class_data_; }


void DicomSeriesStudyResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DicomSeriesStudyResponse*>(&to_msg);
  auto& from = static_cast<const DicomSeriesStudyResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.DicomSeriesStudyResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_status()->::osirixgrpc::Status::MergeFrom(
          from._internal_status());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_study()->::osirixgrpc::DicomStudy::MergeFrom(
          from._internal_study());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DicomSeriesStudyResponse::CopyFrom(const DicomSeriesStudyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.DicomSeriesStudyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DicomSeriesStudyResponse::IsInitialized() const {
  return true;
}

void DicomSeriesStudyResponse::InternalSwap(DicomSeriesStudyResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DicomSeriesStudyResponse, _impl_.study_)
      + sizeof(DicomSeriesStudyResponse::_impl_.study_)
      - PROTOBUF_FIELD_OFFSET(DicomSeriesStudyResponse, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DicomSeriesStudyResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dicomseries_2eproto_getter, &descriptor_table_dicomseries_2eproto_once,
      file_level_metadata_dicomseries_2eproto[4]);
}
// ===================================================================

class DicomSeriesImagesResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<DicomSeriesImagesResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DicomSeriesImagesResponse, _impl_._has_bits_);
  static const ::osirixgrpc::Status& status(const DicomSeriesImagesResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osirixgrpc::Status&
DicomSeriesImagesResponse::_Internal::status(const DicomSeriesImagesResponse* msg) {
  return *msg->_impl_.status_;
}
void DicomSeriesImagesResponse::clear_status() {
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void DicomSeriesImagesResponse::clear_images() {
  _internal_mutable_images()->Clear();
}
DicomSeriesImagesResponse::DicomSeriesImagesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.DicomSeriesImagesResponse)
}
DicomSeriesImagesResponse::DicomSeriesImagesResponse(const DicomSeriesImagesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DicomSeriesImagesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.images_){from._impl_.images_}
    , decltype(_impl_.status_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.status_ = new ::osirixgrpc::Status(*from._impl_.status_);
  }
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.DicomSeriesImagesResponse)
}

inline void DicomSeriesImagesResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.images_){arena}
    , decltype(_impl_.status_){nullptr}
  };
}

DicomSeriesImagesResponse::~DicomSeriesImagesResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.DicomSeriesImagesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DicomSeriesImagesResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_images()->~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.status_;
}

void DicomSeriesImagesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DicomSeriesImagesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.DicomSeriesImagesResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_images()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DicomSeriesImagesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .osirixgrpc.DicomImage images = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_images(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* DicomSeriesImagesResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.DicomSeriesImagesResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // repeated .osirixgrpc.DicomImage images = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_images_size()); i < n; i++) {
    const auto& repfield = this->_internal_images(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.DicomSeriesImagesResponse)
  return target;
}

::size_t DicomSeriesImagesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.DicomSeriesImagesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .osirixgrpc.DicomImage images = 2;
  total_size += 1UL * this->_internal_images_size();
  for (const auto& msg : this->_internal_images()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .osirixgrpc.Status status = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.status_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DicomSeriesImagesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DicomSeriesImagesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DicomSeriesImagesResponse::GetClassData() const { return &_class_data_; }


void DicomSeriesImagesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DicomSeriesImagesResponse*>(&to_msg);
  auto& from = static_cast<const DicomSeriesImagesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.DicomSeriesImagesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_images()->MergeFrom(from._internal_images());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_status()->::osirixgrpc::Status::MergeFrom(
        from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DicomSeriesImagesResponse::CopyFrom(const DicomSeriesImagesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.DicomSeriesImagesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DicomSeriesImagesResponse::IsInitialized() const {
  return true;
}

void DicomSeriesImagesResponse::InternalSwap(DicomSeriesImagesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_images()->InternalSwap(other->_internal_mutable_images());
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DicomSeriesImagesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dicomseries_2eproto_getter, &descriptor_table_dicomseries_2eproto_once,
      file_level_metadata_dicomseries_2eproto[5]);
}
// ===================================================================

class DicomSeriesSeriesInstanceUIDResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<DicomSeriesSeriesInstanceUIDResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DicomSeriesSeriesInstanceUIDResponse, _impl_._has_bits_);
  static const ::osirixgrpc::Status& status(const DicomSeriesSeriesInstanceUIDResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osirixgrpc::Status&
DicomSeriesSeriesInstanceUIDResponse::_Internal::status(const DicomSeriesSeriesInstanceUIDResponse* msg) {
  return *msg->_impl_.status_;
}
void DicomSeriesSeriesInstanceUIDResponse::clear_status() {
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
DicomSeriesSeriesInstanceUIDResponse::DicomSeriesSeriesInstanceUIDResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.DicomSeriesSeriesInstanceUIDResponse)
}
DicomSeriesSeriesInstanceUIDResponse::DicomSeriesSeriesInstanceUIDResponse(const DicomSeriesSeriesInstanceUIDResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DicomSeriesSeriesInstanceUIDResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.series_instance_uid_) {}

    , decltype(_impl_.status_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.series_instance_uid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.series_instance_uid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_series_instance_uid().empty()) {
    _this->_impl_.series_instance_uid_.Set(from._internal_series_instance_uid(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.status_ = new ::osirixgrpc::Status(*from._impl_.status_);
  }
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.DicomSeriesSeriesInstanceUIDResponse)
}

inline void DicomSeriesSeriesInstanceUIDResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.series_instance_uid_) {}

    , decltype(_impl_.status_){nullptr}
  };
  _impl_.series_instance_uid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.series_instance_uid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DicomSeriesSeriesInstanceUIDResponse::~DicomSeriesSeriesInstanceUIDResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.DicomSeriesSeriesInstanceUIDResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DicomSeriesSeriesInstanceUIDResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.series_instance_uid_.Destroy();
  if (this != internal_default_instance()) delete _impl_.status_;
}

void DicomSeriesSeriesInstanceUIDResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DicomSeriesSeriesInstanceUIDResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.DicomSeriesSeriesInstanceUIDResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.series_instance_uid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DicomSeriesSeriesInstanceUIDResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string series_instance_uid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_series_instance_uid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "osirixgrpc.DicomSeriesSeriesInstanceUIDResponse.series_instance_uid"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* DicomSeriesSeriesInstanceUIDResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.DicomSeriesSeriesInstanceUIDResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // string series_instance_uid = 2;
  if (!this->_internal_series_instance_uid().empty()) {
    const std::string& _s = this->_internal_series_instance_uid();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "osirixgrpc.DicomSeriesSeriesInstanceUIDResponse.series_instance_uid");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.DicomSeriesSeriesInstanceUIDResponse)
  return target;
}

::size_t DicomSeriesSeriesInstanceUIDResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.DicomSeriesSeriesInstanceUIDResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string series_instance_uid = 2;
  if (!this->_internal_series_instance_uid().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_series_instance_uid());
  }

  // .osirixgrpc.Status status = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.status_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DicomSeriesSeriesInstanceUIDResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DicomSeriesSeriesInstanceUIDResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DicomSeriesSeriesInstanceUIDResponse::GetClassData() const { return &_class_data_; }


void DicomSeriesSeriesInstanceUIDResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DicomSeriesSeriesInstanceUIDResponse*>(&to_msg);
  auto& from = static_cast<const DicomSeriesSeriesInstanceUIDResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.DicomSeriesSeriesInstanceUIDResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_series_instance_uid().empty()) {
    _this->_internal_set_series_instance_uid(from._internal_series_instance_uid());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_status()->::osirixgrpc::Status::MergeFrom(
        from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DicomSeriesSeriesInstanceUIDResponse::CopyFrom(const DicomSeriesSeriesInstanceUIDResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.DicomSeriesSeriesInstanceUIDResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DicomSeriesSeriesInstanceUIDResponse::IsInitialized() const {
  return true;
}

void DicomSeriesSeriesInstanceUIDResponse::InternalSwap(DicomSeriesSeriesInstanceUIDResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.series_instance_uid_, lhs_arena,
                                       &other->_impl_.series_instance_uid_, rhs_arena);
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DicomSeriesSeriesInstanceUIDResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dicomseries_2eproto_getter, &descriptor_table_dicomseries_2eproto_once,
      file_level_metadata_dicomseries_2eproto[6]);
}
// ===================================================================

class DicomSeriesSeriesSOPClassUIDResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<DicomSeriesSeriesSOPClassUIDResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DicomSeriesSeriesSOPClassUIDResponse, _impl_._has_bits_);
  static const ::osirixgrpc::Status& status(const DicomSeriesSeriesSOPClassUIDResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osirixgrpc::Status&
DicomSeriesSeriesSOPClassUIDResponse::_Internal::status(const DicomSeriesSeriesSOPClassUIDResponse* msg) {
  return *msg->_impl_.status_;
}
void DicomSeriesSeriesSOPClassUIDResponse::clear_status() {
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
DicomSeriesSeriesSOPClassUIDResponse::DicomSeriesSeriesSOPClassUIDResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse)
}
DicomSeriesSeriesSOPClassUIDResponse::DicomSeriesSeriesSOPClassUIDResponse(const DicomSeriesSeriesSOPClassUIDResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DicomSeriesSeriesSOPClassUIDResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.series_sop_class_uid_) {}

    , decltype(_impl_.status_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.series_sop_class_uid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.series_sop_class_uid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_series_sop_class_uid().empty()) {
    _this->_impl_.series_sop_class_uid_.Set(from._internal_series_sop_class_uid(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.status_ = new ::osirixgrpc::Status(*from._impl_.status_);
  }
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse)
}

inline void DicomSeriesSeriesSOPClassUIDResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.series_sop_class_uid_) {}

    , decltype(_impl_.status_){nullptr}
  };
  _impl_.series_sop_class_uid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.series_sop_class_uid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DicomSeriesSeriesSOPClassUIDResponse::~DicomSeriesSeriesSOPClassUIDResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DicomSeriesSeriesSOPClassUIDResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.series_sop_class_uid_.Destroy();
  if (this != internal_default_instance()) delete _impl_.status_;
}

void DicomSeriesSeriesSOPClassUIDResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DicomSeriesSeriesSOPClassUIDResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.series_sop_class_uid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DicomSeriesSeriesSOPClassUIDResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string series_sop_class_uid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_series_sop_class_uid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse.series_sop_class_uid"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* DicomSeriesSeriesSOPClassUIDResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // string series_sop_class_uid = 2;
  if (!this->_internal_series_sop_class_uid().empty()) {
    const std::string& _s = this->_internal_series_sop_class_uid();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse.series_sop_class_uid");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse)
  return target;
}

::size_t DicomSeriesSeriesSOPClassUIDResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string series_sop_class_uid = 2;
  if (!this->_internal_series_sop_class_uid().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_series_sop_class_uid());
  }

  // .osirixgrpc.Status status = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.status_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DicomSeriesSeriesSOPClassUIDResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DicomSeriesSeriesSOPClassUIDResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DicomSeriesSeriesSOPClassUIDResponse::GetClassData() const { return &_class_data_; }


void DicomSeriesSeriesSOPClassUIDResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DicomSeriesSeriesSOPClassUIDResponse*>(&to_msg);
  auto& from = static_cast<const DicomSeriesSeriesSOPClassUIDResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_series_sop_class_uid().empty()) {
    _this->_internal_set_series_sop_class_uid(from._internal_series_sop_class_uid());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_status()->::osirixgrpc::Status::MergeFrom(
        from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DicomSeriesSeriesSOPClassUIDResponse::CopyFrom(const DicomSeriesSeriesSOPClassUIDResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DicomSeriesSeriesSOPClassUIDResponse::IsInitialized() const {
  return true;
}

void DicomSeriesSeriesSOPClassUIDResponse::InternalSwap(DicomSeriesSeriesSOPClassUIDResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.series_sop_class_uid_, lhs_arena,
                                       &other->_impl_.series_sop_class_uid_, rhs_arena);
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DicomSeriesSeriesSOPClassUIDResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dicomseries_2eproto_getter, &descriptor_table_dicomseries_2eproto_once,
      file_level_metadata_dicomseries_2eproto[7]);
}
// ===================================================================

class DicomSeriesSeriesDescriptionResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<DicomSeriesSeriesDescriptionResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DicomSeriesSeriesDescriptionResponse, _impl_._has_bits_);
  static const ::osirixgrpc::Status& status(const DicomSeriesSeriesDescriptionResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osirixgrpc::Status&
DicomSeriesSeriesDescriptionResponse::_Internal::status(const DicomSeriesSeriesDescriptionResponse* msg) {
  return *msg->_impl_.status_;
}
void DicomSeriesSeriesDescriptionResponse::clear_status() {
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
DicomSeriesSeriesDescriptionResponse::DicomSeriesSeriesDescriptionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.DicomSeriesSeriesDescriptionResponse)
}
DicomSeriesSeriesDescriptionResponse::DicomSeriesSeriesDescriptionResponse(const DicomSeriesSeriesDescriptionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DicomSeriesSeriesDescriptionResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.series_description_) {}

    , decltype(_impl_.status_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.series_description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.series_description_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_series_description().empty()) {
    _this->_impl_.series_description_.Set(from._internal_series_description(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.status_ = new ::osirixgrpc::Status(*from._impl_.status_);
  }
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.DicomSeriesSeriesDescriptionResponse)
}

inline void DicomSeriesSeriesDescriptionResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.series_description_) {}

    , decltype(_impl_.status_){nullptr}
  };
  _impl_.series_description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.series_description_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DicomSeriesSeriesDescriptionResponse::~DicomSeriesSeriesDescriptionResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.DicomSeriesSeriesDescriptionResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DicomSeriesSeriesDescriptionResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.series_description_.Destroy();
  if (this != internal_default_instance()) delete _impl_.status_;
}

void DicomSeriesSeriesDescriptionResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DicomSeriesSeriesDescriptionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.DicomSeriesSeriesDescriptionResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.series_description_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DicomSeriesSeriesDescriptionResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string series_description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_series_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "osirixgrpc.DicomSeriesSeriesDescriptionResponse.series_description"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* DicomSeriesSeriesDescriptionResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.DicomSeriesSeriesDescriptionResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // string series_description = 2;
  if (!this->_internal_series_description().empty()) {
    const std::string& _s = this->_internal_series_description();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "osirixgrpc.DicomSeriesSeriesDescriptionResponse.series_description");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.DicomSeriesSeriesDescriptionResponse)
  return target;
}

::size_t DicomSeriesSeriesDescriptionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.DicomSeriesSeriesDescriptionResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string series_description = 2;
  if (!this->_internal_series_description().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_series_description());
  }

  // .osirixgrpc.Status status = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.status_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DicomSeriesSeriesDescriptionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DicomSeriesSeriesDescriptionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DicomSeriesSeriesDescriptionResponse::GetClassData() const { return &_class_data_; }


void DicomSeriesSeriesDescriptionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DicomSeriesSeriesDescriptionResponse*>(&to_msg);
  auto& from = static_cast<const DicomSeriesSeriesDescriptionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.DicomSeriesSeriesDescriptionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_series_description().empty()) {
    _this->_internal_set_series_description(from._internal_series_description());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_status()->::osirixgrpc::Status::MergeFrom(
        from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DicomSeriesSeriesDescriptionResponse::CopyFrom(const DicomSeriesSeriesDescriptionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.DicomSeriesSeriesDescriptionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DicomSeriesSeriesDescriptionResponse::IsInitialized() const {
  return true;
}

void DicomSeriesSeriesDescriptionResponse::InternalSwap(DicomSeriesSeriesDescriptionResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.series_description_, lhs_arena,
                                       &other->_impl_.series_description_, rhs_arena);
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DicomSeriesSeriesDescriptionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dicomseries_2eproto_getter, &descriptor_table_dicomseries_2eproto_once,
      file_level_metadata_dicomseries_2eproto[8]);
}
// ===================================================================

class DicomSeriesModalityResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<DicomSeriesModalityResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DicomSeriesModalityResponse, _impl_._has_bits_);
  static const ::osirixgrpc::Status& status(const DicomSeriesModalityResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osirixgrpc::Status&
DicomSeriesModalityResponse::_Internal::status(const DicomSeriesModalityResponse* msg) {
  return *msg->_impl_.status_;
}
void DicomSeriesModalityResponse::clear_status() {
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
DicomSeriesModalityResponse::DicomSeriesModalityResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.DicomSeriesModalityResponse)
}
DicomSeriesModalityResponse::DicomSeriesModalityResponse(const DicomSeriesModalityResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DicomSeriesModalityResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.modality_) {}

    , decltype(_impl_.status_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.modality_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.modality_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_modality().empty()) {
    _this->_impl_.modality_.Set(from._internal_modality(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.status_ = new ::osirixgrpc::Status(*from._impl_.status_);
  }
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.DicomSeriesModalityResponse)
}

inline void DicomSeriesModalityResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.modality_) {}

    , decltype(_impl_.status_){nullptr}
  };
  _impl_.modality_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.modality_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DicomSeriesModalityResponse::~DicomSeriesModalityResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.DicomSeriesModalityResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DicomSeriesModalityResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.modality_.Destroy();
  if (this != internal_default_instance()) delete _impl_.status_;
}

void DicomSeriesModalityResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DicomSeriesModalityResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.DicomSeriesModalityResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.modality_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DicomSeriesModalityResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string modality = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_modality();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "osirixgrpc.DicomSeriesModalityResponse.modality"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* DicomSeriesModalityResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.DicomSeriesModalityResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // string modality = 2;
  if (!this->_internal_modality().empty()) {
    const std::string& _s = this->_internal_modality();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "osirixgrpc.DicomSeriesModalityResponse.modality");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.DicomSeriesModalityResponse)
  return target;
}

::size_t DicomSeriesModalityResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.DicomSeriesModalityResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string modality = 2;
  if (!this->_internal_modality().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_modality());
  }

  // .osirixgrpc.Status status = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.status_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DicomSeriesModalityResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DicomSeriesModalityResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DicomSeriesModalityResponse::GetClassData() const { return &_class_data_; }


void DicomSeriesModalityResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DicomSeriesModalityResponse*>(&to_msg);
  auto& from = static_cast<const DicomSeriesModalityResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.DicomSeriesModalityResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_modality().empty()) {
    _this->_internal_set_modality(from._internal_modality());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_status()->::osirixgrpc::Status::MergeFrom(
        from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DicomSeriesModalityResponse::CopyFrom(const DicomSeriesModalityResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.DicomSeriesModalityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DicomSeriesModalityResponse::IsInitialized() const {
  return true;
}

void DicomSeriesModalityResponse::InternalSwap(DicomSeriesModalityResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.modality_, lhs_arena,
                                       &other->_impl_.modality_, rhs_arena);
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DicomSeriesModalityResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dicomseries_2eproto_getter, &descriptor_table_dicomseries_2eproto_once,
      file_level_metadata_dicomseries_2eproto[9]);
}
// ===================================================================

class DicomSeriesNameResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<DicomSeriesNameResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DicomSeriesNameResponse, _impl_._has_bits_);
  static const ::osirixgrpc::Status& status(const DicomSeriesNameResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osirixgrpc::Status&
DicomSeriesNameResponse::_Internal::status(const DicomSeriesNameResponse* msg) {
  return *msg->_impl_.status_;
}
void DicomSeriesNameResponse::clear_status() {
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
DicomSeriesNameResponse::DicomSeriesNameResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.DicomSeriesNameResponse)
}
DicomSeriesNameResponse::DicomSeriesNameResponse(const DicomSeriesNameResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DicomSeriesNameResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_) {}

    , decltype(_impl_.status_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.status_ = new ::osirixgrpc::Status(*from._impl_.status_);
  }
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.DicomSeriesNameResponse)
}

inline void DicomSeriesNameResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_) {}

    , decltype(_impl_.status_){nullptr}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DicomSeriesNameResponse::~DicomSeriesNameResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.DicomSeriesNameResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DicomSeriesNameResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.status_;
}

void DicomSeriesNameResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DicomSeriesNameResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.DicomSeriesNameResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DicomSeriesNameResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "osirixgrpc.DicomSeriesNameResponse.name"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* DicomSeriesNameResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.DicomSeriesNameResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "osirixgrpc.DicomSeriesNameResponse.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.DicomSeriesNameResponse)
  return target;
}

::size_t DicomSeriesNameResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.DicomSeriesNameResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // .osirixgrpc.Status status = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.status_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DicomSeriesNameResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DicomSeriesNameResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DicomSeriesNameResponse::GetClassData() const { return &_class_data_; }


void DicomSeriesNameResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DicomSeriesNameResponse*>(&to_msg);
  auto& from = static_cast<const DicomSeriesNameResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.DicomSeriesNameResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_status()->::osirixgrpc::Status::MergeFrom(
        from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DicomSeriesNameResponse::CopyFrom(const DicomSeriesNameResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.DicomSeriesNameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DicomSeriesNameResponse::IsInitialized() const {
  return true;
}

void DicomSeriesNameResponse::InternalSwap(DicomSeriesNameResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DicomSeriesNameResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dicomseries_2eproto_getter, &descriptor_table_dicomseries_2eproto_once,
      file_level_metadata_dicomseries_2eproto[10]);
}
// ===================================================================

class DicomSeriesNumberOfImagesResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<DicomSeriesNumberOfImagesResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DicomSeriesNumberOfImagesResponse, _impl_._has_bits_);
  static const ::osirixgrpc::Status& status(const DicomSeriesNumberOfImagesResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osirixgrpc::Status&
DicomSeriesNumberOfImagesResponse::_Internal::status(const DicomSeriesNumberOfImagesResponse* msg) {
  return *msg->_impl_.status_;
}
void DicomSeriesNumberOfImagesResponse::clear_status() {
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
DicomSeriesNumberOfImagesResponse::DicomSeriesNumberOfImagesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.DicomSeriesNumberOfImagesResponse)
}
DicomSeriesNumberOfImagesResponse::DicomSeriesNumberOfImagesResponse(const DicomSeriesNumberOfImagesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DicomSeriesNumberOfImagesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.status_){nullptr}
    , decltype(_impl_.number_of_images_) {}
  };

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.status_ = new ::osirixgrpc::Status(*from._impl_.status_);
  }
  _this->_impl_.number_of_images_ = from._impl_.number_of_images_;
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.DicomSeriesNumberOfImagesResponse)
}

inline void DicomSeriesNumberOfImagesResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.status_){nullptr}
    , decltype(_impl_.number_of_images_) { 0 }

  };
}

DicomSeriesNumberOfImagesResponse::~DicomSeriesNumberOfImagesResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.DicomSeriesNumberOfImagesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DicomSeriesNumberOfImagesResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.status_;
}

void DicomSeriesNumberOfImagesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DicomSeriesNumberOfImagesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.DicomSeriesNumberOfImagesResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_.number_of_images_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DicomSeriesNumberOfImagesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // int32 number_of_images = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _impl_.number_of_images_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* DicomSeriesNumberOfImagesResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.DicomSeriesNumberOfImagesResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // int32 number_of_images = 2;
  if (this->_internal_number_of_images() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        2, this->_internal_number_of_images(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.DicomSeriesNumberOfImagesResponse)
  return target;
}

::size_t DicomSeriesNumberOfImagesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.DicomSeriesNumberOfImagesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.status_);
  }

  // int32 number_of_images = 2;
  if (this->_internal_number_of_images() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_number_of_images());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DicomSeriesNumberOfImagesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DicomSeriesNumberOfImagesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DicomSeriesNumberOfImagesResponse::GetClassData() const { return &_class_data_; }


void DicomSeriesNumberOfImagesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DicomSeriesNumberOfImagesResponse*>(&to_msg);
  auto& from = static_cast<const DicomSeriesNumberOfImagesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.DicomSeriesNumberOfImagesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_status()->::osirixgrpc::Status::MergeFrom(
        from._internal_status());
  }
  if (from._internal_number_of_images() != 0) {
    _this->_internal_set_number_of_images(from._internal_number_of_images());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DicomSeriesNumberOfImagesResponse::CopyFrom(const DicomSeriesNumberOfImagesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.DicomSeriesNumberOfImagesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DicomSeriesNumberOfImagesResponse::IsInitialized() const {
  return true;
}

void DicomSeriesNumberOfImagesResponse::InternalSwap(DicomSeriesNumberOfImagesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DicomSeriesNumberOfImagesResponse, _impl_.number_of_images_)
      + sizeof(DicomSeriesNumberOfImagesResponse::_impl_.number_of_images_)
      - PROTOBUF_FIELD_OFFSET(DicomSeriesNumberOfImagesResponse, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DicomSeriesNumberOfImagesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dicomseries_2eproto_getter, &descriptor_table_dicomseries_2eproto_once,
      file_level_metadata_dicomseries_2eproto[11]);
}
// ===================================================================

class DicomSeriesDateResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<DicomSeriesDateResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DicomSeriesDateResponse, _impl_._has_bits_);
  static const ::osirixgrpc::Status& status(const DicomSeriesDateResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osirixgrpc::Status&
DicomSeriesDateResponse::_Internal::status(const DicomSeriesDateResponse* msg) {
  return *msg->_impl_.status_;
}
void DicomSeriesDateResponse::clear_status() {
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
DicomSeriesDateResponse::DicomSeriesDateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.DicomSeriesDateResponse)
}
DicomSeriesDateResponse::DicomSeriesDateResponse(const DicomSeriesDateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DicomSeriesDateResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.status_){nullptr}
    , decltype(_impl_.year_) {}

    , decltype(_impl_.month_) {}

    , decltype(_impl_.day_) {}

    , decltype(_impl_.hour_) {}

    , decltype(_impl_.minute_) {}

    , decltype(_impl_.second_) {}

    , decltype(_impl_.millisecond_) {}
  };

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.status_ = new ::osirixgrpc::Status(*from._impl_.status_);
  }
  ::memcpy(&_impl_.year_, &from._impl_.year_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.millisecond_) -
    reinterpret_cast<char*>(&_impl_.year_)) + sizeof(_impl_.millisecond_));
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.DicomSeriesDateResponse)
}

inline void DicomSeriesDateResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.status_){nullptr}
    , decltype(_impl_.year_) { 0 }

    , decltype(_impl_.month_) { 0 }

    , decltype(_impl_.day_) { 0 }

    , decltype(_impl_.hour_) { 0 }

    , decltype(_impl_.minute_) { 0 }

    , decltype(_impl_.second_) { 0 }

    , decltype(_impl_.millisecond_) { 0 }

  };
}

DicomSeriesDateResponse::~DicomSeriesDateResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.DicomSeriesDateResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DicomSeriesDateResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.status_;
}

void DicomSeriesDateResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DicomSeriesDateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.DicomSeriesDateResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  ::memset(&_impl_.year_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.millisecond_) -
      reinterpret_cast<char*>(&_impl_.year_)) + sizeof(_impl_.millisecond_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DicomSeriesDateResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // int32 year = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _impl_.year_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // int32 month = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 24)) {
          _impl_.month_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // int32 day = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 32)) {
          _impl_.day_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // int32 hour = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 40)) {
          _impl_.hour_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // int32 minute = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 48)) {
          _impl_.minute_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // int32 second = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 56)) {
          _impl_.second_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // int32 millisecond = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 64)) {
          _impl_.millisecond_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* DicomSeriesDateResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.DicomSeriesDateResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // int32 year = 2;
  if (this->_internal_year() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        2, this->_internal_year(), target);
  }

  // int32 month = 3;
  if (this->_internal_month() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        3, this->_internal_month(), target);
  }

  // int32 day = 4;
  if (this->_internal_day() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        4, this->_internal_day(), target);
  }

  // int32 hour = 5;
  if (this->_internal_hour() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        5, this->_internal_hour(), target);
  }

  // int32 minute = 6;
  if (this->_internal_minute() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        6, this->_internal_minute(), target);
  }

  // int32 second = 7;
  if (this->_internal_second() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        7, this->_internal_second(), target);
  }

  // int32 millisecond = 8;
  if (this->_internal_millisecond() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        8, this->_internal_millisecond(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.DicomSeriesDateResponse)
  return target;
}

::size_t DicomSeriesDateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.DicomSeriesDateResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.status_);
  }

  // int32 year = 2;
  if (this->_internal_year() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_year());
  }

  // int32 month = 3;
  if (this->_internal_month() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_month());
  }

  // int32 day = 4;
  if (this->_internal_day() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_day());
  }

  // int32 hour = 5;
  if (this->_internal_hour() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_hour());
  }

  // int32 minute = 6;
  if (this->_internal_minute() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_minute());
  }

  // int32 second = 7;
  if (this->_internal_second() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_second());
  }

  // int32 millisecond = 8;
  if (this->_internal_millisecond() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_millisecond());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DicomSeriesDateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DicomSeriesDateResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DicomSeriesDateResponse::GetClassData() const { return &_class_data_; }


void DicomSeriesDateResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DicomSeriesDateResponse*>(&to_msg);
  auto& from = static_cast<const DicomSeriesDateResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.DicomSeriesDateResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_status()->::osirixgrpc::Status::MergeFrom(
        from._internal_status());
  }
  if (from._internal_year() != 0) {
    _this->_internal_set_year(from._internal_year());
  }
  if (from._internal_month() != 0) {
    _this->_internal_set_month(from._internal_month());
  }
  if (from._internal_day() != 0) {
    _this->_internal_set_day(from._internal_day());
  }
  if (from._internal_hour() != 0) {
    _this->_internal_set_hour(from._internal_hour());
  }
  if (from._internal_minute() != 0) {
    _this->_internal_set_minute(from._internal_minute());
  }
  if (from._internal_second() != 0) {
    _this->_internal_set_second(from._internal_second());
  }
  if (from._internal_millisecond() != 0) {
    _this->_internal_set_millisecond(from._internal_millisecond());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DicomSeriesDateResponse::CopyFrom(const DicomSeriesDateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.DicomSeriesDateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DicomSeriesDateResponse::IsInitialized() const {
  return true;
}

void DicomSeriesDateResponse::InternalSwap(DicomSeriesDateResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DicomSeriesDateResponse, _impl_.millisecond_)
      + sizeof(DicomSeriesDateResponse::_impl_.millisecond_)
      - PROTOBUF_FIELD_OFFSET(DicomSeriesDateResponse, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DicomSeriesDateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dicomseries_2eproto_getter, &descriptor_table_dicomseries_2eproto_once,
      file_level_metadata_dicomseries_2eproto[12]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace osirixgrpc
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::osirixgrpc::DicomSeriesPathsResponse*
Arena::CreateMaybeMessage< ::osirixgrpc::DicomSeriesPathsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::DicomSeriesPathsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::DicomSeriesPreviousSeriesResponse*
Arena::CreateMaybeMessage< ::osirixgrpc::DicomSeriesPreviousSeriesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::DicomSeriesPreviousSeriesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::DicomSeriesNextSeriesResponse*
Arena::CreateMaybeMessage< ::osirixgrpc::DicomSeriesNextSeriesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::DicomSeriesNextSeriesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::DicomSeriesSortedImagesResponse*
Arena::CreateMaybeMessage< ::osirixgrpc::DicomSeriesSortedImagesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::DicomSeriesSortedImagesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::DicomSeriesStudyResponse*
Arena::CreateMaybeMessage< ::osirixgrpc::DicomSeriesStudyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::DicomSeriesStudyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::DicomSeriesImagesResponse*
Arena::CreateMaybeMessage< ::osirixgrpc::DicomSeriesImagesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::DicomSeriesImagesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::DicomSeriesSeriesInstanceUIDResponse*
Arena::CreateMaybeMessage< ::osirixgrpc::DicomSeriesSeriesInstanceUIDResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::DicomSeriesSeriesInstanceUIDResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::DicomSeriesSeriesSOPClassUIDResponse*
Arena::CreateMaybeMessage< ::osirixgrpc::DicomSeriesSeriesSOPClassUIDResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::DicomSeriesSeriesSOPClassUIDResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::DicomSeriesSeriesDescriptionResponse*
Arena::CreateMaybeMessage< ::osirixgrpc::DicomSeriesSeriesDescriptionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::DicomSeriesSeriesDescriptionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::DicomSeriesModalityResponse*
Arena::CreateMaybeMessage< ::osirixgrpc::DicomSeriesModalityResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::DicomSeriesModalityResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::DicomSeriesNameResponse*
Arena::CreateMaybeMessage< ::osirixgrpc::DicomSeriesNameResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::DicomSeriesNameResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::DicomSeriesNumberOfImagesResponse*
Arena::CreateMaybeMessage< ::osirixgrpc::DicomSeriesNumberOfImagesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::DicomSeriesNumberOfImagesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::DicomSeriesDateResponse*
Arena::CreateMaybeMessage< ::osirixgrpc::DicomSeriesDateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::DicomSeriesDateResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
