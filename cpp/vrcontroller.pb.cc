// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vrcontroller.proto

#include "vrcontroller.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace osirixgrpc {

inline constexpr VRControllerWLWWResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_{nullptr},
        wl_{0},
        ww_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VRControllerWLWWResponse::VRControllerWLWWResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VRControllerWLWWResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VRControllerWLWWResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VRControllerWLWWResponseDefaultTypeInternal() {}
  union {
    VRControllerWLWWResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VRControllerWLWWResponseDefaultTypeInternal _VRControllerWLWWResponse_default_instance_;

inline constexpr VRControllerViewer2DResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_{nullptr},
        viewer_controller_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR VRControllerViewer2DResponse::VRControllerViewer2DResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VRControllerViewer2DResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VRControllerViewer2DResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VRControllerViewer2DResponseDefaultTypeInternal() {}
  union {
    VRControllerViewer2DResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VRControllerViewer2DResponseDefaultTypeInternal _VRControllerViewer2DResponse_default_instance_;

inline constexpr VRControllerTitleResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR VRControllerTitleResponse::VRControllerTitleResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VRControllerTitleResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VRControllerTitleResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VRControllerTitleResponseDefaultTypeInternal() {}
  union {
    VRControllerTitleResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VRControllerTitleResponseDefaultTypeInternal _VRControllerTitleResponse_default_instance_;

inline constexpr VRControllerStyleResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        style_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR VRControllerStyleResponse::VRControllerStyleResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VRControllerStyleResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VRControllerStyleResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VRControllerStyleResponseDefaultTypeInternal() {}
  union {
    VRControllerStyleResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VRControllerStyleResponseDefaultTypeInternal _VRControllerStyleResponse_default_instance_;

inline constexpr VRControllerSetWLWWRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        vr_controller_{nullptr},
        wl_{0},
        ww_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VRControllerSetWLWWRequest::VRControllerSetWLWWRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VRControllerSetWLWWRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VRControllerSetWLWWRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VRControllerSetWLWWRequestDefaultTypeInternal() {}
  union {
    VRControllerSetWLWWRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VRControllerSetWLWWRequestDefaultTypeInternal _VRControllerSetWLWWRequest_default_instance_;

inline constexpr VRControllerSetRenderingModeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        rendering_mode_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        vr_controller_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR VRControllerSetRenderingModeRequest::VRControllerSetRenderingModeRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VRControllerSetRenderingModeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VRControllerSetRenderingModeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VRControllerSetRenderingModeRequestDefaultTypeInternal() {}
  union {
    VRControllerSetRenderingModeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VRControllerSetRenderingModeRequestDefaultTypeInternal _VRControllerSetRenderingModeRequest_default_instance_;

inline constexpr VRControllerRenderingModeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        rendering_mode_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR VRControllerRenderingModeResponse::VRControllerRenderingModeResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VRControllerRenderingModeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VRControllerRenderingModeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VRControllerRenderingModeResponseDefaultTypeInternal() {}
  union {
    VRControllerRenderingModeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VRControllerRenderingModeResponseDefaultTypeInternal _VRControllerRenderingModeResponse_default_instance_;

inline constexpr VRControllerROIVolumesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        roi_volumes_{},
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR VRControllerROIVolumesResponse::VRControllerROIVolumesResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VRControllerROIVolumesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VRControllerROIVolumesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VRControllerROIVolumesResponseDefaultTypeInternal() {}
  union {
    VRControllerROIVolumesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VRControllerROIVolumesResponseDefaultTypeInternal _VRControllerROIVolumesResponse_default_instance_;

inline constexpr VRControllerHideROIVolumeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        vr_controller_{nullptr},
        roi_volume_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR VRControllerHideROIVolumeRequest::VRControllerHideROIVolumeRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VRControllerHideROIVolumeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VRControllerHideROIVolumeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VRControllerHideROIVolumeRequestDefaultTypeInternal() {}
  union {
    VRControllerHideROIVolumeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VRControllerHideROIVolumeRequestDefaultTypeInternal _VRControllerHideROIVolumeRequest_default_instance_;

inline constexpr VRControllerDisplayROIVolumeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        vr_controller_{nullptr},
        roi_volume_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR VRControllerDisplayROIVolumeRequest::VRControllerDisplayROIVolumeRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VRControllerDisplayROIVolumeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VRControllerDisplayROIVolumeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VRControllerDisplayROIVolumeRequestDefaultTypeInternal() {}
  union {
    VRControllerDisplayROIVolumeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VRControllerDisplayROIVolumeRequestDefaultTypeInternal _VRControllerDisplayROIVolumeRequest_default_instance_;

inline constexpr VRControllerBlendingControllerResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_{nullptr},
        viewer_controller_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR VRControllerBlendingControllerResponse::VRControllerBlendingControllerResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VRControllerBlendingControllerResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VRControllerBlendingControllerResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VRControllerBlendingControllerResponseDefaultTypeInternal() {}
  union {
    VRControllerBlendingControllerResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VRControllerBlendingControllerResponseDefaultTypeInternal _VRControllerBlendingControllerResponse_default_instance_;
}  // namespace osirixgrpc
static ::_pb::Metadata file_level_metadata_vrcontroller_2eproto[11];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_vrcontroller_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_vrcontroller_2eproto = nullptr;
const ::uint32_t TableStruct_vrcontroller_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerViewer2DResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerViewer2DResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerViewer2DResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerViewer2DResponse, _impl_.viewer_controller_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerBlendingControllerResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerBlendingControllerResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerBlendingControllerResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerBlendingControllerResponse, _impl_.viewer_controller_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerRenderingModeResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerRenderingModeResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerRenderingModeResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerRenderingModeResponse, _impl_.rendering_mode_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerWLWWResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerWLWWResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerWLWWResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerWLWWResponse, _impl_.wl_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerWLWWResponse, _impl_.ww_),
    0,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerStyleResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerStyleResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerStyleResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerStyleResponse, _impl_.style_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerTitleResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerTitleResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerTitleResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerTitleResponse, _impl_.title_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerROIVolumesResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerROIVolumesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerROIVolumesResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerROIVolumesResponse, _impl_.roi_volumes_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerSetRenderingModeRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerSetRenderingModeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerSetRenderingModeRequest, _impl_.vr_controller_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerSetRenderingModeRequest, _impl_.rendering_mode_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerSetWLWWRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerSetWLWWRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerSetWLWWRequest, _impl_.vr_controller_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerSetWLWWRequest, _impl_.wl_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerSetWLWWRequest, _impl_.ww_),
    0,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerHideROIVolumeRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerHideROIVolumeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerHideROIVolumeRequest, _impl_.vr_controller_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerHideROIVolumeRequest, _impl_.roi_volume_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerDisplayROIVolumeRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerDisplayROIVolumeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerDisplayROIVolumeRequest, _impl_.vr_controller_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::VRControllerDisplayROIVolumeRequest, _impl_.roi_volume_),
    0,
    1,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::osirixgrpc::VRControllerViewer2DResponse)},
        {12, 22, -1, sizeof(::osirixgrpc::VRControllerBlendingControllerResponse)},
        {24, 34, -1, sizeof(::osirixgrpc::VRControllerRenderingModeResponse)},
        {36, 47, -1, sizeof(::osirixgrpc::VRControllerWLWWResponse)},
        {50, 60, -1, sizeof(::osirixgrpc::VRControllerStyleResponse)},
        {62, 72, -1, sizeof(::osirixgrpc::VRControllerTitleResponse)},
        {74, 84, -1, sizeof(::osirixgrpc::VRControllerROIVolumesResponse)},
        {86, 96, -1, sizeof(::osirixgrpc::VRControllerSetRenderingModeRequest)},
        {98, 109, -1, sizeof(::osirixgrpc::VRControllerSetWLWWRequest)},
        {112, 122, -1, sizeof(::osirixgrpc::VRControllerHideROIVolumeRequest)},
        {124, 134, -1, sizeof(::osirixgrpc::VRControllerDisplayROIVolumeRequest)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::osirixgrpc::_VRControllerViewer2DResponse_default_instance_._instance,
    &::osirixgrpc::_VRControllerBlendingControllerResponse_default_instance_._instance,
    &::osirixgrpc::_VRControllerRenderingModeResponse_default_instance_._instance,
    &::osirixgrpc::_VRControllerWLWWResponse_default_instance_._instance,
    &::osirixgrpc::_VRControllerStyleResponse_default_instance_._instance,
    &::osirixgrpc::_VRControllerTitleResponse_default_instance_._instance,
    &::osirixgrpc::_VRControllerROIVolumesResponse_default_instance_._instance,
    &::osirixgrpc::_VRControllerSetRenderingModeRequest_default_instance_._instance,
    &::osirixgrpc::_VRControllerSetWLWWRequest_default_instance_._instance,
    &::osirixgrpc::_VRControllerHideROIVolumeRequest_default_instance_._instance,
    &::osirixgrpc::_VRControllerDisplayROIVolumeRequest_default_instance_._instance,
};
const char descriptor_table_protodef_vrcontroller_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\022vrcontroller.proto\022\nosirixgrpc\032\017utilit"
    "ies.proto\032\013types.proto\"{\n\034VRControllerVi"
    "ewer2DResponse\022\"\n\006status\030\001 \001(\0132\022.osirixg"
    "rpc.Status\0227\n\021viewer_controller\030\002 \001(\0132\034."
    "osirixgrpc.ViewerController\"\205\001\n&VRContro"
    "llerBlendingControllerResponse\022\"\n\006status"
    "\030\001 \001(\0132\022.osirixgrpc.Status\0227\n\021viewer_con"
    "troller\030\002 \001(\0132\034.osirixgrpc.ViewerControl"
    "ler\"_\n!VRControllerRenderingModeResponse"
    "\022\"\n\006status\030\001 \001(\0132\022.osirixgrpc.Status\022\026\n\016"
    "rendering_mode\030\002 \001(\t\"V\n\030VRControllerWLWW"
    "Response\022\"\n\006status\030\001 \001(\0132\022.osirixgrpc.St"
    "atus\022\n\n\002wl\030\002 \001(\002\022\n\n\002ww\030\003 \001(\002\"N\n\031VRContro"
    "llerStyleResponse\022\"\n\006status\030\001 \001(\0132\022.osir"
    "ixgrpc.Status\022\r\n\005style\030\002 \001(\t\"N\n\031VRContro"
    "llerTitleResponse\022\"\n\006status\030\001 \001(\0132\022.osir"
    "ixgrpc.Status\022\r\n\005title\030\002 \001(\t\"p\n\036VRContro"
    "llerROIVolumesResponse\022\"\n\006status\030\001 \001(\0132\022"
    ".osirixgrpc.Status\022*\n\013roi_volumes\030\002 \003(\0132"
    "\025.osirixgrpc.ROIVolume\"n\n#VRControllerSe"
    "tRenderingModeRequest\022/\n\rvr_controller\030\001"
    " \001(\0132\030.osirixgrpc.VRController\022\026\n\016render"
    "ing_mode\030\002 \001(\t\"e\n\032VRControllerSetWLWWReq"
    "uest\022/\n\rvr_controller\030\001 \001(\0132\030.osirixgrpc"
    ".VRController\022\n\n\002wl\030\002 \001(\002\022\n\n\002ww\030\003 \001(\002\"~\n"
    " VRControllerHideROIVolumeRequest\022/\n\rvr_"
    "controller\030\001 \001(\0132\030.osirixgrpc.VRControll"
    "er\022)\n\nroi_volume\030\002 \001(\0132\025.osirixgrpc.ROIV"
    "olume\"\201\001\n#VRControllerDisplayROIVolumeRe"
    "quest\022/\n\rvr_controller\030\001 \001(\0132\030.osirixgrp"
    "c.VRController\022)\n\nroi_volume\030\002 \001(\0132\025.osi"
    "rixgrpc.ROIVolumeb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_vrcontroller_2eproto_deps[2] =
    {
        &::descriptor_table_types_2eproto,
        &::descriptor_table_utilities_2eproto,
};
static ::absl::once_flag descriptor_table_vrcontroller_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_vrcontroller_2eproto = {
    false,
    false,
    1265,
    descriptor_table_protodef_vrcontroller_2eproto,
    "vrcontroller.proto",
    &descriptor_table_vrcontroller_2eproto_once,
    descriptor_table_vrcontroller_2eproto_deps,
    2,
    11,
    schemas,
    file_default_instances,
    TableStruct_vrcontroller_2eproto::offsets,
    file_level_metadata_vrcontroller_2eproto,
    file_level_enum_descriptors_vrcontroller_2eproto,
    file_level_service_descriptors_vrcontroller_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_vrcontroller_2eproto_getter() {
  return &descriptor_table_vrcontroller_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_vrcontroller_2eproto(&descriptor_table_vrcontroller_2eproto);
namespace osirixgrpc {
// ===================================================================

class VRControllerViewer2DResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<VRControllerViewer2DResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VRControllerViewer2DResponse, _impl_._has_bits_);
  static const ::osirixgrpc::Status& status(const VRControllerViewer2DResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::osirixgrpc::ViewerController& viewer_controller(const VRControllerViewer2DResponse* msg);
  static void set_has_viewer_controller(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::osirixgrpc::Status& VRControllerViewer2DResponse::_Internal::status(const VRControllerViewer2DResponse* msg) {
  return *msg->_impl_.status_;
}
const ::osirixgrpc::ViewerController& VRControllerViewer2DResponse::_Internal::viewer_controller(const VRControllerViewer2DResponse* msg) {
  return *msg->_impl_.viewer_controller_;
}
void VRControllerViewer2DResponse::clear_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void VRControllerViewer2DResponse::clear_viewer_controller() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.viewer_controller_ != nullptr) _impl_.viewer_controller_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
VRControllerViewer2DResponse::VRControllerViewer2DResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.VRControllerViewer2DResponse)
}
inline PROTOBUF_NDEBUG_INLINE VRControllerViewer2DResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

VRControllerViewer2DResponse::VRControllerViewer2DResponse(
    ::google::protobuf::Arena* arena,
    const VRControllerViewer2DResponse& from)
    : ::google::protobuf::Message(arena) {
  VRControllerViewer2DResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::osirixgrpc::Status>(arena, *from._impl_.status_)
                : nullptr;
  _impl_.viewer_controller_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::osirixgrpc::ViewerController>(arena, *from._impl_.viewer_controller_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.VRControllerViewer2DResponse)
}
inline PROTOBUF_NDEBUG_INLINE VRControllerViewer2DResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void VRControllerViewer2DResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, viewer_controller_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::viewer_controller_));
}
VRControllerViewer2DResponse::~VRControllerViewer2DResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.VRControllerViewer2DResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VRControllerViewer2DResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.status_;
  delete _impl_.viewer_controller_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VRControllerViewer2DResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.VRControllerViewer2DResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.viewer_controller_ != nullptr);
      _impl_.viewer_controller_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VRControllerViewer2DResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> VRControllerViewer2DResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VRControllerViewer2DResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VRControllerViewer2DResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .osirixgrpc.ViewerController viewer_controller = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(VRControllerViewer2DResponse, _impl_.viewer_controller_)}},
    // .osirixgrpc.Status status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VRControllerViewer2DResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osirixgrpc.Status status = 1;
    {PROTOBUF_FIELD_OFFSET(VRControllerViewer2DResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .osirixgrpc.ViewerController viewer_controller = 2;
    {PROTOBUF_FIELD_OFFSET(VRControllerViewer2DResponse, _impl_.viewer_controller_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::Status>()},
    {::_pbi::TcParser::GetTable<::osirixgrpc::ViewerController>()},
  }}, {{
  }},
};

::uint8_t* VRControllerViewer2DResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.VRControllerViewer2DResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // .osirixgrpc.ViewerController viewer_controller = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::viewer_controller(this),
        _Internal::viewer_controller(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.VRControllerViewer2DResponse)
  return target;
}

::size_t VRControllerViewer2DResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.VRControllerViewer2DResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .osirixgrpc.Status status = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.status_);
    }

    // .osirixgrpc.ViewerController viewer_controller = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.viewer_controller_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VRControllerViewer2DResponse::_class_data_ = {
    VRControllerViewer2DResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VRControllerViewer2DResponse::GetClassData() const {
  return &_class_data_;
}

void VRControllerViewer2DResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VRControllerViewer2DResponse*>(&to_msg);
  auto& from = static_cast<const VRControllerViewer2DResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.VRControllerViewer2DResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_status()->::osirixgrpc::Status::MergeFrom(
          from._internal_status());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_viewer_controller()->::osirixgrpc::ViewerController::MergeFrom(
          from._internal_viewer_controller());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VRControllerViewer2DResponse::CopyFrom(const VRControllerViewer2DResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.VRControllerViewer2DResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VRControllerViewer2DResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VRControllerViewer2DResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VRControllerViewer2DResponse::InternalSwap(VRControllerViewer2DResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VRControllerViewer2DResponse, _impl_.viewer_controller_)
      + sizeof(VRControllerViewer2DResponse::_impl_.viewer_controller_)
      - PROTOBUF_FIELD_OFFSET(VRControllerViewer2DResponse, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata VRControllerViewer2DResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_vrcontroller_2eproto_getter, &descriptor_table_vrcontroller_2eproto_once,
      file_level_metadata_vrcontroller_2eproto[0]);
}
// ===================================================================

class VRControllerBlendingControllerResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<VRControllerBlendingControllerResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VRControllerBlendingControllerResponse, _impl_._has_bits_);
  static const ::osirixgrpc::Status& status(const VRControllerBlendingControllerResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::osirixgrpc::ViewerController& viewer_controller(const VRControllerBlendingControllerResponse* msg);
  static void set_has_viewer_controller(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::osirixgrpc::Status& VRControllerBlendingControllerResponse::_Internal::status(const VRControllerBlendingControllerResponse* msg) {
  return *msg->_impl_.status_;
}
const ::osirixgrpc::ViewerController& VRControllerBlendingControllerResponse::_Internal::viewer_controller(const VRControllerBlendingControllerResponse* msg) {
  return *msg->_impl_.viewer_controller_;
}
void VRControllerBlendingControllerResponse::clear_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void VRControllerBlendingControllerResponse::clear_viewer_controller() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.viewer_controller_ != nullptr) _impl_.viewer_controller_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
VRControllerBlendingControllerResponse::VRControllerBlendingControllerResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.VRControllerBlendingControllerResponse)
}
inline PROTOBUF_NDEBUG_INLINE VRControllerBlendingControllerResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

VRControllerBlendingControllerResponse::VRControllerBlendingControllerResponse(
    ::google::protobuf::Arena* arena,
    const VRControllerBlendingControllerResponse& from)
    : ::google::protobuf::Message(arena) {
  VRControllerBlendingControllerResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::osirixgrpc::Status>(arena, *from._impl_.status_)
                : nullptr;
  _impl_.viewer_controller_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::osirixgrpc::ViewerController>(arena, *from._impl_.viewer_controller_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.VRControllerBlendingControllerResponse)
}
inline PROTOBUF_NDEBUG_INLINE VRControllerBlendingControllerResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void VRControllerBlendingControllerResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, viewer_controller_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::viewer_controller_));
}
VRControllerBlendingControllerResponse::~VRControllerBlendingControllerResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.VRControllerBlendingControllerResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VRControllerBlendingControllerResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.status_;
  delete _impl_.viewer_controller_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VRControllerBlendingControllerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.VRControllerBlendingControllerResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.viewer_controller_ != nullptr);
      _impl_.viewer_controller_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VRControllerBlendingControllerResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> VRControllerBlendingControllerResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VRControllerBlendingControllerResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VRControllerBlendingControllerResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .osirixgrpc.ViewerController viewer_controller = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(VRControllerBlendingControllerResponse, _impl_.viewer_controller_)}},
    // .osirixgrpc.Status status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VRControllerBlendingControllerResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osirixgrpc.Status status = 1;
    {PROTOBUF_FIELD_OFFSET(VRControllerBlendingControllerResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .osirixgrpc.ViewerController viewer_controller = 2;
    {PROTOBUF_FIELD_OFFSET(VRControllerBlendingControllerResponse, _impl_.viewer_controller_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::Status>()},
    {::_pbi::TcParser::GetTable<::osirixgrpc::ViewerController>()},
  }}, {{
  }},
};

::uint8_t* VRControllerBlendingControllerResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.VRControllerBlendingControllerResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // .osirixgrpc.ViewerController viewer_controller = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::viewer_controller(this),
        _Internal::viewer_controller(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.VRControllerBlendingControllerResponse)
  return target;
}

::size_t VRControllerBlendingControllerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.VRControllerBlendingControllerResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .osirixgrpc.Status status = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.status_);
    }

    // .osirixgrpc.ViewerController viewer_controller = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.viewer_controller_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VRControllerBlendingControllerResponse::_class_data_ = {
    VRControllerBlendingControllerResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VRControllerBlendingControllerResponse::GetClassData() const {
  return &_class_data_;
}

void VRControllerBlendingControllerResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VRControllerBlendingControllerResponse*>(&to_msg);
  auto& from = static_cast<const VRControllerBlendingControllerResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.VRControllerBlendingControllerResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_status()->::osirixgrpc::Status::MergeFrom(
          from._internal_status());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_viewer_controller()->::osirixgrpc::ViewerController::MergeFrom(
          from._internal_viewer_controller());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VRControllerBlendingControllerResponse::CopyFrom(const VRControllerBlendingControllerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.VRControllerBlendingControllerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VRControllerBlendingControllerResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VRControllerBlendingControllerResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VRControllerBlendingControllerResponse::InternalSwap(VRControllerBlendingControllerResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VRControllerBlendingControllerResponse, _impl_.viewer_controller_)
      + sizeof(VRControllerBlendingControllerResponse::_impl_.viewer_controller_)
      - PROTOBUF_FIELD_OFFSET(VRControllerBlendingControllerResponse, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata VRControllerBlendingControllerResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_vrcontroller_2eproto_getter, &descriptor_table_vrcontroller_2eproto_once,
      file_level_metadata_vrcontroller_2eproto[1]);
}
// ===================================================================

class VRControllerRenderingModeResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<VRControllerRenderingModeResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VRControllerRenderingModeResponse, _impl_._has_bits_);
  static const ::osirixgrpc::Status& status(const VRControllerRenderingModeResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osirixgrpc::Status& VRControllerRenderingModeResponse::_Internal::status(const VRControllerRenderingModeResponse* msg) {
  return *msg->_impl_.status_;
}
void VRControllerRenderingModeResponse::clear_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
VRControllerRenderingModeResponse::VRControllerRenderingModeResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.VRControllerRenderingModeResponse)
}
inline PROTOBUF_NDEBUG_INLINE VRControllerRenderingModeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        rendering_mode_(arena, from.rendering_mode_) {}

VRControllerRenderingModeResponse::VRControllerRenderingModeResponse(
    ::google::protobuf::Arena* arena,
    const VRControllerRenderingModeResponse& from)
    : ::google::protobuf::Message(arena) {
  VRControllerRenderingModeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::osirixgrpc::Status>(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.VRControllerRenderingModeResponse)
}
inline PROTOBUF_NDEBUG_INLINE VRControllerRenderingModeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        rendering_mode_(arena) {}

inline void VRControllerRenderingModeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
VRControllerRenderingModeResponse::~VRControllerRenderingModeResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.VRControllerRenderingModeResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VRControllerRenderingModeResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.rendering_mode_.Destroy();
  delete _impl_.status_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VRControllerRenderingModeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.VRControllerRenderingModeResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rendering_mode_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VRControllerRenderingModeResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 67, 2> VRControllerRenderingModeResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VRControllerRenderingModeResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VRControllerRenderingModeResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string rendering_mode = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(VRControllerRenderingModeResponse, _impl_.rendering_mode_)}},
    // .osirixgrpc.Status status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VRControllerRenderingModeResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osirixgrpc.Status status = 1;
    {PROTOBUF_FIELD_OFFSET(VRControllerRenderingModeResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string rendering_mode = 2;
    {PROTOBUF_FIELD_OFFSET(VRControllerRenderingModeResponse, _impl_.rendering_mode_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::Status>()},
  }}, {{
    "\54\0\16\0\0\0\0\0"
    "osirixgrpc.VRControllerRenderingModeResponse"
    "rendering_mode"
  }},
};

::uint8_t* VRControllerRenderingModeResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.VRControllerRenderingModeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // string rendering_mode = 2;
  if (!this->_internal_rendering_mode().empty()) {
    const std::string& _s = this->_internal_rendering_mode();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "osirixgrpc.VRControllerRenderingModeResponse.rendering_mode");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.VRControllerRenderingModeResponse)
  return target;
}

::size_t VRControllerRenderingModeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.VRControllerRenderingModeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string rendering_mode = 2;
  if (!this->_internal_rendering_mode().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_rendering_mode());
  }

  // .osirixgrpc.Status status = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.status_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VRControllerRenderingModeResponse::_class_data_ = {
    VRControllerRenderingModeResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VRControllerRenderingModeResponse::GetClassData() const {
  return &_class_data_;
}

void VRControllerRenderingModeResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VRControllerRenderingModeResponse*>(&to_msg);
  auto& from = static_cast<const VRControllerRenderingModeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.VRControllerRenderingModeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_rendering_mode().empty()) {
    _this->_internal_set_rendering_mode(from._internal_rendering_mode());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_status()->::osirixgrpc::Status::MergeFrom(
        from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VRControllerRenderingModeResponse::CopyFrom(const VRControllerRenderingModeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.VRControllerRenderingModeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VRControllerRenderingModeResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VRControllerRenderingModeResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VRControllerRenderingModeResponse::InternalSwap(VRControllerRenderingModeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.rendering_mode_, &other->_impl_.rendering_mode_, arena);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata VRControllerRenderingModeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_vrcontroller_2eproto_getter, &descriptor_table_vrcontroller_2eproto_once,
      file_level_metadata_vrcontroller_2eproto[2]);
}
// ===================================================================

class VRControllerWLWWResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<VRControllerWLWWResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VRControllerWLWWResponse, _impl_._has_bits_);
  static const ::osirixgrpc::Status& status(const VRControllerWLWWResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osirixgrpc::Status& VRControllerWLWWResponse::_Internal::status(const VRControllerWLWWResponse* msg) {
  return *msg->_impl_.status_;
}
void VRControllerWLWWResponse::clear_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
VRControllerWLWWResponse::VRControllerWLWWResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.VRControllerWLWWResponse)
}
inline PROTOBUF_NDEBUG_INLINE VRControllerWLWWResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

VRControllerWLWWResponse::VRControllerWLWWResponse(
    ::google::protobuf::Arena* arena,
    const VRControllerWLWWResponse& from)
    : ::google::protobuf::Message(arena) {
  VRControllerWLWWResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::osirixgrpc::Status>(arena, *from._impl_.status_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, wl_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, wl_),
           offsetof(Impl_, ww_) -
               offsetof(Impl_, wl_) +
               sizeof(Impl_::ww_));

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.VRControllerWLWWResponse)
}
inline PROTOBUF_NDEBUG_INLINE VRControllerWLWWResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void VRControllerWLWWResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, ww_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::ww_));
}
VRControllerWLWWResponse::~VRControllerWLWWResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.VRControllerWLWWResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VRControllerWLWWResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.status_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VRControllerWLWWResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.VRControllerWLWWResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  ::memset(&_impl_.wl_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.ww_) -
      reinterpret_cast<char*>(&_impl_.wl_)) + sizeof(_impl_.ww_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VRControllerWLWWResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> VRControllerWLWWResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VRControllerWLWWResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VRControllerWLWWResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .osirixgrpc.Status status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VRControllerWLWWResponse, _impl_.status_)}},
    // float wl = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(VRControllerWLWWResponse, _impl_.wl_)}},
    // float ww = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(VRControllerWLWWResponse, _impl_.ww_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osirixgrpc.Status status = 1;
    {PROTOBUF_FIELD_OFFSET(VRControllerWLWWResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // float wl = 2;
    {PROTOBUF_FIELD_OFFSET(VRControllerWLWWResponse, _impl_.wl_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float ww = 3;
    {PROTOBUF_FIELD_OFFSET(VRControllerWLWWResponse, _impl_.ww_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::Status>()},
  }}, {{
  }},
};

::uint8_t* VRControllerWLWWResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.VRControllerWLWWResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // float wl = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_wl = this->_internal_wl();
  ::uint32_t raw_wl;
  memcpy(&raw_wl, &tmp_wl, sizeof(tmp_wl));
  if (raw_wl != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_wl(), target);
  }

  // float ww = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_ww = this->_internal_ww();
  ::uint32_t raw_ww;
  memcpy(&raw_ww, &tmp_ww, sizeof(tmp_ww));
  if (raw_ww != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_ww(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.VRControllerWLWWResponse)
  return target;
}

::size_t VRControllerWLWWResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.VRControllerWLWWResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.status_);
  }

  // float wl = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_wl = this->_internal_wl();
  ::uint32_t raw_wl;
  memcpy(&raw_wl, &tmp_wl, sizeof(tmp_wl));
  if (raw_wl != 0) {
    total_size += 5;
  }

  // float ww = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_ww = this->_internal_ww();
  ::uint32_t raw_ww;
  memcpy(&raw_ww, &tmp_ww, sizeof(tmp_ww));
  if (raw_ww != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VRControllerWLWWResponse::_class_data_ = {
    VRControllerWLWWResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VRControllerWLWWResponse::GetClassData() const {
  return &_class_data_;
}

void VRControllerWLWWResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VRControllerWLWWResponse*>(&to_msg);
  auto& from = static_cast<const VRControllerWLWWResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.VRControllerWLWWResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_status()->::osirixgrpc::Status::MergeFrom(
        from._internal_status());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_wl = from._internal_wl();
  ::uint32_t raw_wl;
  memcpy(&raw_wl, &tmp_wl, sizeof(tmp_wl));
  if (raw_wl != 0) {
    _this->_internal_set_wl(from._internal_wl());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_ww = from._internal_ww();
  ::uint32_t raw_ww;
  memcpy(&raw_ww, &tmp_ww, sizeof(tmp_ww));
  if (raw_ww != 0) {
    _this->_internal_set_ww(from._internal_ww());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VRControllerWLWWResponse::CopyFrom(const VRControllerWLWWResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.VRControllerWLWWResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VRControllerWLWWResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VRControllerWLWWResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VRControllerWLWWResponse::InternalSwap(VRControllerWLWWResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VRControllerWLWWResponse, _impl_.ww_)
      + sizeof(VRControllerWLWWResponse::_impl_.ww_)
      - PROTOBUF_FIELD_OFFSET(VRControllerWLWWResponse, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata VRControllerWLWWResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_vrcontroller_2eproto_getter, &descriptor_table_vrcontroller_2eproto_once,
      file_level_metadata_vrcontroller_2eproto[3]);
}
// ===================================================================

class VRControllerStyleResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<VRControllerStyleResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VRControllerStyleResponse, _impl_._has_bits_);
  static const ::osirixgrpc::Status& status(const VRControllerStyleResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osirixgrpc::Status& VRControllerStyleResponse::_Internal::status(const VRControllerStyleResponse* msg) {
  return *msg->_impl_.status_;
}
void VRControllerStyleResponse::clear_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
VRControllerStyleResponse::VRControllerStyleResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.VRControllerStyleResponse)
}
inline PROTOBUF_NDEBUG_INLINE VRControllerStyleResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        style_(arena, from.style_) {}

VRControllerStyleResponse::VRControllerStyleResponse(
    ::google::protobuf::Arena* arena,
    const VRControllerStyleResponse& from)
    : ::google::protobuf::Message(arena) {
  VRControllerStyleResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::osirixgrpc::Status>(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.VRControllerStyleResponse)
}
inline PROTOBUF_NDEBUG_INLINE VRControllerStyleResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        style_(arena) {}

inline void VRControllerStyleResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
VRControllerStyleResponse::~VRControllerStyleResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.VRControllerStyleResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VRControllerStyleResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.style_.Destroy();
  delete _impl_.status_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VRControllerStyleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.VRControllerStyleResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.style_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VRControllerStyleResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 50, 2> VRControllerStyleResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VRControllerStyleResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VRControllerStyleResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string style = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(VRControllerStyleResponse, _impl_.style_)}},
    // .osirixgrpc.Status status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VRControllerStyleResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osirixgrpc.Status status = 1;
    {PROTOBUF_FIELD_OFFSET(VRControllerStyleResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string style = 2;
    {PROTOBUF_FIELD_OFFSET(VRControllerStyleResponse, _impl_.style_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::Status>()},
  }}, {{
    "\44\0\5\0\0\0\0\0"
    "osirixgrpc.VRControllerStyleResponse"
    "style"
  }},
};

::uint8_t* VRControllerStyleResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.VRControllerStyleResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // string style = 2;
  if (!this->_internal_style().empty()) {
    const std::string& _s = this->_internal_style();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "osirixgrpc.VRControllerStyleResponse.style");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.VRControllerStyleResponse)
  return target;
}

::size_t VRControllerStyleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.VRControllerStyleResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string style = 2;
  if (!this->_internal_style().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_style());
  }

  // .osirixgrpc.Status status = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.status_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VRControllerStyleResponse::_class_data_ = {
    VRControllerStyleResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VRControllerStyleResponse::GetClassData() const {
  return &_class_data_;
}

void VRControllerStyleResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VRControllerStyleResponse*>(&to_msg);
  auto& from = static_cast<const VRControllerStyleResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.VRControllerStyleResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_style().empty()) {
    _this->_internal_set_style(from._internal_style());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_status()->::osirixgrpc::Status::MergeFrom(
        from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VRControllerStyleResponse::CopyFrom(const VRControllerStyleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.VRControllerStyleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VRControllerStyleResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VRControllerStyleResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VRControllerStyleResponse::InternalSwap(VRControllerStyleResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.style_, &other->_impl_.style_, arena);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata VRControllerStyleResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_vrcontroller_2eproto_getter, &descriptor_table_vrcontroller_2eproto_once,
      file_level_metadata_vrcontroller_2eproto[4]);
}
// ===================================================================

class VRControllerTitleResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<VRControllerTitleResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VRControllerTitleResponse, _impl_._has_bits_);
  static const ::osirixgrpc::Status& status(const VRControllerTitleResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osirixgrpc::Status& VRControllerTitleResponse::_Internal::status(const VRControllerTitleResponse* msg) {
  return *msg->_impl_.status_;
}
void VRControllerTitleResponse::clear_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
VRControllerTitleResponse::VRControllerTitleResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.VRControllerTitleResponse)
}
inline PROTOBUF_NDEBUG_INLINE VRControllerTitleResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        title_(arena, from.title_) {}

VRControllerTitleResponse::VRControllerTitleResponse(
    ::google::protobuf::Arena* arena,
    const VRControllerTitleResponse& from)
    : ::google::protobuf::Message(arena) {
  VRControllerTitleResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::osirixgrpc::Status>(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.VRControllerTitleResponse)
}
inline PROTOBUF_NDEBUG_INLINE VRControllerTitleResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        title_(arena) {}

inline void VRControllerTitleResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
VRControllerTitleResponse::~VRControllerTitleResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.VRControllerTitleResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VRControllerTitleResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.title_.Destroy();
  delete _impl_.status_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VRControllerTitleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.VRControllerTitleResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.title_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VRControllerTitleResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 50, 2> VRControllerTitleResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VRControllerTitleResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VRControllerTitleResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string title = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(VRControllerTitleResponse, _impl_.title_)}},
    // .osirixgrpc.Status status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VRControllerTitleResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osirixgrpc.Status status = 1;
    {PROTOBUF_FIELD_OFFSET(VRControllerTitleResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string title = 2;
    {PROTOBUF_FIELD_OFFSET(VRControllerTitleResponse, _impl_.title_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::Status>()},
  }}, {{
    "\44\0\5\0\0\0\0\0"
    "osirixgrpc.VRControllerTitleResponse"
    "title"
  }},
};

::uint8_t* VRControllerTitleResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.VRControllerTitleResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // string title = 2;
  if (!this->_internal_title().empty()) {
    const std::string& _s = this->_internal_title();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "osirixgrpc.VRControllerTitleResponse.title");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.VRControllerTitleResponse)
  return target;
}

::size_t VRControllerTitleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.VRControllerTitleResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string title = 2;
  if (!this->_internal_title().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_title());
  }

  // .osirixgrpc.Status status = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.status_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VRControllerTitleResponse::_class_data_ = {
    VRControllerTitleResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VRControllerTitleResponse::GetClassData() const {
  return &_class_data_;
}

void VRControllerTitleResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VRControllerTitleResponse*>(&to_msg);
  auto& from = static_cast<const VRControllerTitleResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.VRControllerTitleResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_status()->::osirixgrpc::Status::MergeFrom(
        from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VRControllerTitleResponse::CopyFrom(const VRControllerTitleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.VRControllerTitleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VRControllerTitleResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VRControllerTitleResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VRControllerTitleResponse::InternalSwap(VRControllerTitleResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata VRControllerTitleResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_vrcontroller_2eproto_getter, &descriptor_table_vrcontroller_2eproto_once,
      file_level_metadata_vrcontroller_2eproto[5]);
}
// ===================================================================

class VRControllerROIVolumesResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<VRControllerROIVolumesResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VRControllerROIVolumesResponse, _impl_._has_bits_);
  static const ::osirixgrpc::Status& status(const VRControllerROIVolumesResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osirixgrpc::Status& VRControllerROIVolumesResponse::_Internal::status(const VRControllerROIVolumesResponse* msg) {
  return *msg->_impl_.status_;
}
void VRControllerROIVolumesResponse::clear_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void VRControllerROIVolumesResponse::clear_roi_volumes() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.roi_volumes_.Clear();
}
VRControllerROIVolumesResponse::VRControllerROIVolumesResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.VRControllerROIVolumesResponse)
}
inline PROTOBUF_NDEBUG_INLINE VRControllerROIVolumesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        roi_volumes_{visibility, arena, from.roi_volumes_} {}

VRControllerROIVolumesResponse::VRControllerROIVolumesResponse(
    ::google::protobuf::Arena* arena,
    const VRControllerROIVolumesResponse& from)
    : ::google::protobuf::Message(arena) {
  VRControllerROIVolumesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::osirixgrpc::Status>(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.VRControllerROIVolumesResponse)
}
inline PROTOBUF_NDEBUG_INLINE VRControllerROIVolumesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        roi_volumes_{visibility, arena} {}

inline void VRControllerROIVolumesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
VRControllerROIVolumesResponse::~VRControllerROIVolumesResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.VRControllerROIVolumesResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VRControllerROIVolumesResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.status_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VRControllerROIVolumesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.VRControllerROIVolumesResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.roi_volumes_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VRControllerROIVolumesResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> VRControllerROIVolumesResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VRControllerROIVolumesResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VRControllerROIVolumesResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .osirixgrpc.ROIVolume roi_volumes = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(VRControllerROIVolumesResponse, _impl_.roi_volumes_)}},
    // .osirixgrpc.Status status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VRControllerROIVolumesResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osirixgrpc.Status status = 1;
    {PROTOBUF_FIELD_OFFSET(VRControllerROIVolumesResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .osirixgrpc.ROIVolume roi_volumes = 2;
    {PROTOBUF_FIELD_OFFSET(VRControllerROIVolumesResponse, _impl_.roi_volumes_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::Status>()},
    {::_pbi::TcParser::GetTable<::osirixgrpc::ROIVolume>()},
  }}, {{
  }},
};

::uint8_t* VRControllerROIVolumesResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.VRControllerROIVolumesResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // repeated .osirixgrpc.ROIVolume roi_volumes = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_roi_volumes_size()); i < n; i++) {
    const auto& repfield = this->_internal_roi_volumes().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.VRControllerROIVolumesResponse)
  return target;
}

::size_t VRControllerROIVolumesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.VRControllerROIVolumesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .osirixgrpc.ROIVolume roi_volumes = 2;
  total_size += 1UL * this->_internal_roi_volumes_size();
  for (const auto& msg : this->_internal_roi_volumes()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .osirixgrpc.Status status = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.status_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VRControllerROIVolumesResponse::_class_data_ = {
    VRControllerROIVolumesResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VRControllerROIVolumesResponse::GetClassData() const {
  return &_class_data_;
}

void VRControllerROIVolumesResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VRControllerROIVolumesResponse*>(&to_msg);
  auto& from = static_cast<const VRControllerROIVolumesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.VRControllerROIVolumesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_roi_volumes()->MergeFrom(
      from._internal_roi_volumes());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_status()->::osirixgrpc::Status::MergeFrom(
        from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VRControllerROIVolumesResponse::CopyFrom(const VRControllerROIVolumesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.VRControllerROIVolumesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VRControllerROIVolumesResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VRControllerROIVolumesResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VRControllerROIVolumesResponse::InternalSwap(VRControllerROIVolumesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.roi_volumes_.InternalSwap(&other->_impl_.roi_volumes_);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata VRControllerROIVolumesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_vrcontroller_2eproto_getter, &descriptor_table_vrcontroller_2eproto_once,
      file_level_metadata_vrcontroller_2eproto[6]);
}
// ===================================================================

class VRControllerSetRenderingModeRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<VRControllerSetRenderingModeRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VRControllerSetRenderingModeRequest, _impl_._has_bits_);
  static const ::osirixgrpc::VRController& vr_controller(const VRControllerSetRenderingModeRequest* msg);
  static void set_has_vr_controller(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osirixgrpc::VRController& VRControllerSetRenderingModeRequest::_Internal::vr_controller(const VRControllerSetRenderingModeRequest* msg) {
  return *msg->_impl_.vr_controller_;
}
void VRControllerSetRenderingModeRequest::clear_vr_controller() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.vr_controller_ != nullptr) _impl_.vr_controller_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
VRControllerSetRenderingModeRequest::VRControllerSetRenderingModeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.VRControllerSetRenderingModeRequest)
}
inline PROTOBUF_NDEBUG_INLINE VRControllerSetRenderingModeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        rendering_mode_(arena, from.rendering_mode_) {}

VRControllerSetRenderingModeRequest::VRControllerSetRenderingModeRequest(
    ::google::protobuf::Arena* arena,
    const VRControllerSetRenderingModeRequest& from)
    : ::google::protobuf::Message(arena) {
  VRControllerSetRenderingModeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.vr_controller_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::osirixgrpc::VRController>(arena, *from._impl_.vr_controller_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.VRControllerSetRenderingModeRequest)
}
inline PROTOBUF_NDEBUG_INLINE VRControllerSetRenderingModeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        rendering_mode_(arena) {}

inline void VRControllerSetRenderingModeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.vr_controller_ = {};
}
VRControllerSetRenderingModeRequest::~VRControllerSetRenderingModeRequest() {
  // @@protoc_insertion_point(destructor:osirixgrpc.VRControllerSetRenderingModeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VRControllerSetRenderingModeRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.rendering_mode_.Destroy();
  delete _impl_.vr_controller_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VRControllerSetRenderingModeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.VRControllerSetRenderingModeRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rendering_mode_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.vr_controller_ != nullptr);
    _impl_.vr_controller_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VRControllerSetRenderingModeRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 69, 2> VRControllerSetRenderingModeRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VRControllerSetRenderingModeRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VRControllerSetRenderingModeRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string rendering_mode = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(VRControllerSetRenderingModeRequest, _impl_.rendering_mode_)}},
    // .osirixgrpc.VRController vr_controller = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VRControllerSetRenderingModeRequest, _impl_.vr_controller_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osirixgrpc.VRController vr_controller = 1;
    {PROTOBUF_FIELD_OFFSET(VRControllerSetRenderingModeRequest, _impl_.vr_controller_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string rendering_mode = 2;
    {PROTOBUF_FIELD_OFFSET(VRControllerSetRenderingModeRequest, _impl_.rendering_mode_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::VRController>()},
  }}, {{
    "\56\0\16\0\0\0\0\0"
    "osirixgrpc.VRControllerSetRenderingModeRequest"
    "rendering_mode"
  }},
};

::uint8_t* VRControllerSetRenderingModeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.VRControllerSetRenderingModeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.VRController vr_controller = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::vr_controller(this),
        _Internal::vr_controller(this).GetCachedSize(), target, stream);
  }

  // string rendering_mode = 2;
  if (!this->_internal_rendering_mode().empty()) {
    const std::string& _s = this->_internal_rendering_mode();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "osirixgrpc.VRControllerSetRenderingModeRequest.rendering_mode");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.VRControllerSetRenderingModeRequest)
  return target;
}

::size_t VRControllerSetRenderingModeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.VRControllerSetRenderingModeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string rendering_mode = 2;
  if (!this->_internal_rendering_mode().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_rendering_mode());
  }

  // .osirixgrpc.VRController vr_controller = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.vr_controller_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VRControllerSetRenderingModeRequest::_class_data_ = {
    VRControllerSetRenderingModeRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VRControllerSetRenderingModeRequest::GetClassData() const {
  return &_class_data_;
}

void VRControllerSetRenderingModeRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VRControllerSetRenderingModeRequest*>(&to_msg);
  auto& from = static_cast<const VRControllerSetRenderingModeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.VRControllerSetRenderingModeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_rendering_mode().empty()) {
    _this->_internal_set_rendering_mode(from._internal_rendering_mode());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_vr_controller()->::osirixgrpc::VRController::MergeFrom(
        from._internal_vr_controller());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VRControllerSetRenderingModeRequest::CopyFrom(const VRControllerSetRenderingModeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.VRControllerSetRenderingModeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VRControllerSetRenderingModeRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VRControllerSetRenderingModeRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VRControllerSetRenderingModeRequest::InternalSwap(VRControllerSetRenderingModeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.rendering_mode_, &other->_impl_.rendering_mode_, arena);
  swap(_impl_.vr_controller_, other->_impl_.vr_controller_);
}

::google::protobuf::Metadata VRControllerSetRenderingModeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_vrcontroller_2eproto_getter, &descriptor_table_vrcontroller_2eproto_once,
      file_level_metadata_vrcontroller_2eproto[7]);
}
// ===================================================================

class VRControllerSetWLWWRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<VRControllerSetWLWWRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VRControllerSetWLWWRequest, _impl_._has_bits_);
  static const ::osirixgrpc::VRController& vr_controller(const VRControllerSetWLWWRequest* msg);
  static void set_has_vr_controller(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osirixgrpc::VRController& VRControllerSetWLWWRequest::_Internal::vr_controller(const VRControllerSetWLWWRequest* msg) {
  return *msg->_impl_.vr_controller_;
}
void VRControllerSetWLWWRequest::clear_vr_controller() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.vr_controller_ != nullptr) _impl_.vr_controller_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
VRControllerSetWLWWRequest::VRControllerSetWLWWRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.VRControllerSetWLWWRequest)
}
inline PROTOBUF_NDEBUG_INLINE VRControllerSetWLWWRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

VRControllerSetWLWWRequest::VRControllerSetWLWWRequest(
    ::google::protobuf::Arena* arena,
    const VRControllerSetWLWWRequest& from)
    : ::google::protobuf::Message(arena) {
  VRControllerSetWLWWRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.vr_controller_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::osirixgrpc::VRController>(arena, *from._impl_.vr_controller_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, wl_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, wl_),
           offsetof(Impl_, ww_) -
               offsetof(Impl_, wl_) +
               sizeof(Impl_::ww_));

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.VRControllerSetWLWWRequest)
}
inline PROTOBUF_NDEBUG_INLINE VRControllerSetWLWWRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void VRControllerSetWLWWRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, vr_controller_),
           0,
           offsetof(Impl_, ww_) -
               offsetof(Impl_, vr_controller_) +
               sizeof(Impl_::ww_));
}
VRControllerSetWLWWRequest::~VRControllerSetWLWWRequest() {
  // @@protoc_insertion_point(destructor:osirixgrpc.VRControllerSetWLWWRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VRControllerSetWLWWRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.vr_controller_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VRControllerSetWLWWRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.VRControllerSetWLWWRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.vr_controller_ != nullptr);
    _impl_.vr_controller_->Clear();
  }
  ::memset(&_impl_.wl_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.ww_) -
      reinterpret_cast<char*>(&_impl_.wl_)) + sizeof(_impl_.ww_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VRControllerSetWLWWRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> VRControllerSetWLWWRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VRControllerSetWLWWRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VRControllerSetWLWWRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .osirixgrpc.VRController vr_controller = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VRControllerSetWLWWRequest, _impl_.vr_controller_)}},
    // float wl = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(VRControllerSetWLWWRequest, _impl_.wl_)}},
    // float ww = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(VRControllerSetWLWWRequest, _impl_.ww_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osirixgrpc.VRController vr_controller = 1;
    {PROTOBUF_FIELD_OFFSET(VRControllerSetWLWWRequest, _impl_.vr_controller_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // float wl = 2;
    {PROTOBUF_FIELD_OFFSET(VRControllerSetWLWWRequest, _impl_.wl_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float ww = 3;
    {PROTOBUF_FIELD_OFFSET(VRControllerSetWLWWRequest, _impl_.ww_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::VRController>()},
  }}, {{
  }},
};

::uint8_t* VRControllerSetWLWWRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.VRControllerSetWLWWRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.VRController vr_controller = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::vr_controller(this),
        _Internal::vr_controller(this).GetCachedSize(), target, stream);
  }

  // float wl = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_wl = this->_internal_wl();
  ::uint32_t raw_wl;
  memcpy(&raw_wl, &tmp_wl, sizeof(tmp_wl));
  if (raw_wl != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_wl(), target);
  }

  // float ww = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_ww = this->_internal_ww();
  ::uint32_t raw_ww;
  memcpy(&raw_ww, &tmp_ww, sizeof(tmp_ww));
  if (raw_ww != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_ww(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.VRControllerSetWLWWRequest)
  return target;
}

::size_t VRControllerSetWLWWRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.VRControllerSetWLWWRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.VRController vr_controller = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.vr_controller_);
  }

  // float wl = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_wl = this->_internal_wl();
  ::uint32_t raw_wl;
  memcpy(&raw_wl, &tmp_wl, sizeof(tmp_wl));
  if (raw_wl != 0) {
    total_size += 5;
  }

  // float ww = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_ww = this->_internal_ww();
  ::uint32_t raw_ww;
  memcpy(&raw_ww, &tmp_ww, sizeof(tmp_ww));
  if (raw_ww != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VRControllerSetWLWWRequest::_class_data_ = {
    VRControllerSetWLWWRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VRControllerSetWLWWRequest::GetClassData() const {
  return &_class_data_;
}

void VRControllerSetWLWWRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VRControllerSetWLWWRequest*>(&to_msg);
  auto& from = static_cast<const VRControllerSetWLWWRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.VRControllerSetWLWWRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_vr_controller()->::osirixgrpc::VRController::MergeFrom(
        from._internal_vr_controller());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_wl = from._internal_wl();
  ::uint32_t raw_wl;
  memcpy(&raw_wl, &tmp_wl, sizeof(tmp_wl));
  if (raw_wl != 0) {
    _this->_internal_set_wl(from._internal_wl());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_ww = from._internal_ww();
  ::uint32_t raw_ww;
  memcpy(&raw_ww, &tmp_ww, sizeof(tmp_ww));
  if (raw_ww != 0) {
    _this->_internal_set_ww(from._internal_ww());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VRControllerSetWLWWRequest::CopyFrom(const VRControllerSetWLWWRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.VRControllerSetWLWWRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VRControllerSetWLWWRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VRControllerSetWLWWRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VRControllerSetWLWWRequest::InternalSwap(VRControllerSetWLWWRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VRControllerSetWLWWRequest, _impl_.ww_)
      + sizeof(VRControllerSetWLWWRequest::_impl_.ww_)
      - PROTOBUF_FIELD_OFFSET(VRControllerSetWLWWRequest, _impl_.vr_controller_)>(
          reinterpret_cast<char*>(&_impl_.vr_controller_),
          reinterpret_cast<char*>(&other->_impl_.vr_controller_));
}

::google::protobuf::Metadata VRControllerSetWLWWRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_vrcontroller_2eproto_getter, &descriptor_table_vrcontroller_2eproto_once,
      file_level_metadata_vrcontroller_2eproto[8]);
}
// ===================================================================

class VRControllerHideROIVolumeRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<VRControllerHideROIVolumeRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VRControllerHideROIVolumeRequest, _impl_._has_bits_);
  static const ::osirixgrpc::VRController& vr_controller(const VRControllerHideROIVolumeRequest* msg);
  static void set_has_vr_controller(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::osirixgrpc::ROIVolume& roi_volume(const VRControllerHideROIVolumeRequest* msg);
  static void set_has_roi_volume(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::osirixgrpc::VRController& VRControllerHideROIVolumeRequest::_Internal::vr_controller(const VRControllerHideROIVolumeRequest* msg) {
  return *msg->_impl_.vr_controller_;
}
const ::osirixgrpc::ROIVolume& VRControllerHideROIVolumeRequest::_Internal::roi_volume(const VRControllerHideROIVolumeRequest* msg) {
  return *msg->_impl_.roi_volume_;
}
void VRControllerHideROIVolumeRequest::clear_vr_controller() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.vr_controller_ != nullptr) _impl_.vr_controller_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void VRControllerHideROIVolumeRequest::clear_roi_volume() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.roi_volume_ != nullptr) _impl_.roi_volume_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
VRControllerHideROIVolumeRequest::VRControllerHideROIVolumeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.VRControllerHideROIVolumeRequest)
}
inline PROTOBUF_NDEBUG_INLINE VRControllerHideROIVolumeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

VRControllerHideROIVolumeRequest::VRControllerHideROIVolumeRequest(
    ::google::protobuf::Arena* arena,
    const VRControllerHideROIVolumeRequest& from)
    : ::google::protobuf::Message(arena) {
  VRControllerHideROIVolumeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.vr_controller_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::osirixgrpc::VRController>(arena, *from._impl_.vr_controller_)
                : nullptr;
  _impl_.roi_volume_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::osirixgrpc::ROIVolume>(arena, *from._impl_.roi_volume_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.VRControllerHideROIVolumeRequest)
}
inline PROTOBUF_NDEBUG_INLINE VRControllerHideROIVolumeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void VRControllerHideROIVolumeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, vr_controller_),
           0,
           offsetof(Impl_, roi_volume_) -
               offsetof(Impl_, vr_controller_) +
               sizeof(Impl_::roi_volume_));
}
VRControllerHideROIVolumeRequest::~VRControllerHideROIVolumeRequest() {
  // @@protoc_insertion_point(destructor:osirixgrpc.VRControllerHideROIVolumeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VRControllerHideROIVolumeRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.vr_controller_;
  delete _impl_.roi_volume_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VRControllerHideROIVolumeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.VRControllerHideROIVolumeRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.vr_controller_ != nullptr);
      _impl_.vr_controller_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.roi_volume_ != nullptr);
      _impl_.roi_volume_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VRControllerHideROIVolumeRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> VRControllerHideROIVolumeRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VRControllerHideROIVolumeRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VRControllerHideROIVolumeRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .osirixgrpc.ROIVolume roi_volume = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(VRControllerHideROIVolumeRequest, _impl_.roi_volume_)}},
    // .osirixgrpc.VRController vr_controller = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VRControllerHideROIVolumeRequest, _impl_.vr_controller_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osirixgrpc.VRController vr_controller = 1;
    {PROTOBUF_FIELD_OFFSET(VRControllerHideROIVolumeRequest, _impl_.vr_controller_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .osirixgrpc.ROIVolume roi_volume = 2;
    {PROTOBUF_FIELD_OFFSET(VRControllerHideROIVolumeRequest, _impl_.roi_volume_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::VRController>()},
    {::_pbi::TcParser::GetTable<::osirixgrpc::ROIVolume>()},
  }}, {{
  }},
};

::uint8_t* VRControllerHideROIVolumeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.VRControllerHideROIVolumeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.VRController vr_controller = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::vr_controller(this),
        _Internal::vr_controller(this).GetCachedSize(), target, stream);
  }

  // .osirixgrpc.ROIVolume roi_volume = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::roi_volume(this),
        _Internal::roi_volume(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.VRControllerHideROIVolumeRequest)
  return target;
}

::size_t VRControllerHideROIVolumeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.VRControllerHideROIVolumeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .osirixgrpc.VRController vr_controller = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.vr_controller_);
    }

    // .osirixgrpc.ROIVolume roi_volume = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.roi_volume_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VRControllerHideROIVolumeRequest::_class_data_ = {
    VRControllerHideROIVolumeRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VRControllerHideROIVolumeRequest::GetClassData() const {
  return &_class_data_;
}

void VRControllerHideROIVolumeRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VRControllerHideROIVolumeRequest*>(&to_msg);
  auto& from = static_cast<const VRControllerHideROIVolumeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.VRControllerHideROIVolumeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_vr_controller()->::osirixgrpc::VRController::MergeFrom(
          from._internal_vr_controller());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_roi_volume()->::osirixgrpc::ROIVolume::MergeFrom(
          from._internal_roi_volume());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VRControllerHideROIVolumeRequest::CopyFrom(const VRControllerHideROIVolumeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.VRControllerHideROIVolumeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VRControllerHideROIVolumeRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VRControllerHideROIVolumeRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VRControllerHideROIVolumeRequest::InternalSwap(VRControllerHideROIVolumeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VRControllerHideROIVolumeRequest, _impl_.roi_volume_)
      + sizeof(VRControllerHideROIVolumeRequest::_impl_.roi_volume_)
      - PROTOBUF_FIELD_OFFSET(VRControllerHideROIVolumeRequest, _impl_.vr_controller_)>(
          reinterpret_cast<char*>(&_impl_.vr_controller_),
          reinterpret_cast<char*>(&other->_impl_.vr_controller_));
}

::google::protobuf::Metadata VRControllerHideROIVolumeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_vrcontroller_2eproto_getter, &descriptor_table_vrcontroller_2eproto_once,
      file_level_metadata_vrcontroller_2eproto[9]);
}
// ===================================================================

class VRControllerDisplayROIVolumeRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<VRControllerDisplayROIVolumeRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VRControllerDisplayROIVolumeRequest, _impl_._has_bits_);
  static const ::osirixgrpc::VRController& vr_controller(const VRControllerDisplayROIVolumeRequest* msg);
  static void set_has_vr_controller(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::osirixgrpc::ROIVolume& roi_volume(const VRControllerDisplayROIVolumeRequest* msg);
  static void set_has_roi_volume(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::osirixgrpc::VRController& VRControllerDisplayROIVolumeRequest::_Internal::vr_controller(const VRControllerDisplayROIVolumeRequest* msg) {
  return *msg->_impl_.vr_controller_;
}
const ::osirixgrpc::ROIVolume& VRControllerDisplayROIVolumeRequest::_Internal::roi_volume(const VRControllerDisplayROIVolumeRequest* msg) {
  return *msg->_impl_.roi_volume_;
}
void VRControllerDisplayROIVolumeRequest::clear_vr_controller() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.vr_controller_ != nullptr) _impl_.vr_controller_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void VRControllerDisplayROIVolumeRequest::clear_roi_volume() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.roi_volume_ != nullptr) _impl_.roi_volume_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
VRControllerDisplayROIVolumeRequest::VRControllerDisplayROIVolumeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.VRControllerDisplayROIVolumeRequest)
}
inline PROTOBUF_NDEBUG_INLINE VRControllerDisplayROIVolumeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

VRControllerDisplayROIVolumeRequest::VRControllerDisplayROIVolumeRequest(
    ::google::protobuf::Arena* arena,
    const VRControllerDisplayROIVolumeRequest& from)
    : ::google::protobuf::Message(arena) {
  VRControllerDisplayROIVolumeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.vr_controller_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::osirixgrpc::VRController>(arena, *from._impl_.vr_controller_)
                : nullptr;
  _impl_.roi_volume_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::osirixgrpc::ROIVolume>(arena, *from._impl_.roi_volume_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.VRControllerDisplayROIVolumeRequest)
}
inline PROTOBUF_NDEBUG_INLINE VRControllerDisplayROIVolumeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void VRControllerDisplayROIVolumeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, vr_controller_),
           0,
           offsetof(Impl_, roi_volume_) -
               offsetof(Impl_, vr_controller_) +
               sizeof(Impl_::roi_volume_));
}
VRControllerDisplayROIVolumeRequest::~VRControllerDisplayROIVolumeRequest() {
  // @@protoc_insertion_point(destructor:osirixgrpc.VRControllerDisplayROIVolumeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VRControllerDisplayROIVolumeRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.vr_controller_;
  delete _impl_.roi_volume_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VRControllerDisplayROIVolumeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.VRControllerDisplayROIVolumeRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.vr_controller_ != nullptr);
      _impl_.vr_controller_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.roi_volume_ != nullptr);
      _impl_.roi_volume_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VRControllerDisplayROIVolumeRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> VRControllerDisplayROIVolumeRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VRControllerDisplayROIVolumeRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VRControllerDisplayROIVolumeRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .osirixgrpc.ROIVolume roi_volume = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(VRControllerDisplayROIVolumeRequest, _impl_.roi_volume_)}},
    // .osirixgrpc.VRController vr_controller = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VRControllerDisplayROIVolumeRequest, _impl_.vr_controller_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osirixgrpc.VRController vr_controller = 1;
    {PROTOBUF_FIELD_OFFSET(VRControllerDisplayROIVolumeRequest, _impl_.vr_controller_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .osirixgrpc.ROIVolume roi_volume = 2;
    {PROTOBUF_FIELD_OFFSET(VRControllerDisplayROIVolumeRequest, _impl_.roi_volume_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::VRController>()},
    {::_pbi::TcParser::GetTable<::osirixgrpc::ROIVolume>()},
  }}, {{
  }},
};

::uint8_t* VRControllerDisplayROIVolumeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.VRControllerDisplayROIVolumeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.VRController vr_controller = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::vr_controller(this),
        _Internal::vr_controller(this).GetCachedSize(), target, stream);
  }

  // .osirixgrpc.ROIVolume roi_volume = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::roi_volume(this),
        _Internal::roi_volume(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.VRControllerDisplayROIVolumeRequest)
  return target;
}

::size_t VRControllerDisplayROIVolumeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.VRControllerDisplayROIVolumeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .osirixgrpc.VRController vr_controller = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.vr_controller_);
    }

    // .osirixgrpc.ROIVolume roi_volume = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.roi_volume_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VRControllerDisplayROIVolumeRequest::_class_data_ = {
    VRControllerDisplayROIVolumeRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VRControllerDisplayROIVolumeRequest::GetClassData() const {
  return &_class_data_;
}

void VRControllerDisplayROIVolumeRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VRControllerDisplayROIVolumeRequest*>(&to_msg);
  auto& from = static_cast<const VRControllerDisplayROIVolumeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.VRControllerDisplayROIVolumeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_vr_controller()->::osirixgrpc::VRController::MergeFrom(
          from._internal_vr_controller());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_roi_volume()->::osirixgrpc::ROIVolume::MergeFrom(
          from._internal_roi_volume());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VRControllerDisplayROIVolumeRequest::CopyFrom(const VRControllerDisplayROIVolumeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.VRControllerDisplayROIVolumeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VRControllerDisplayROIVolumeRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VRControllerDisplayROIVolumeRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VRControllerDisplayROIVolumeRequest::InternalSwap(VRControllerDisplayROIVolumeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VRControllerDisplayROIVolumeRequest, _impl_.roi_volume_)
      + sizeof(VRControllerDisplayROIVolumeRequest::_impl_.roi_volume_)
      - PROTOBUF_FIELD_OFFSET(VRControllerDisplayROIVolumeRequest, _impl_.vr_controller_)>(
          reinterpret_cast<char*>(&_impl_.vr_controller_),
          reinterpret_cast<char*>(&other->_impl_.vr_controller_));
}

::google::protobuf::Metadata VRControllerDisplayROIVolumeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_vrcontroller_2eproto_getter, &descriptor_table_vrcontroller_2eproto_once,
      file_level_metadata_vrcontroller_2eproto[10]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace osirixgrpc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
