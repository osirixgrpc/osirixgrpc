// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: browsercontroller.proto

#include "browsercontroller.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace osirixgrpc {

inline constexpr BrowserControllerDatabaseSelectionResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        series_{},
        studies_{},
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR BrowserControllerDatabaseSelectionResponse::BrowserControllerDatabaseSelectionResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BrowserControllerDatabaseSelectionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BrowserControllerDatabaseSelectionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BrowserControllerDatabaseSelectionResponseDefaultTypeInternal() {}
  union {
    BrowserControllerDatabaseSelectionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BrowserControllerDatabaseSelectionResponseDefaultTypeInternal _BrowserControllerDatabaseSelectionResponse_default_instance_;

inline constexpr BrowserControllerCopyFilesIfNeededRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        paths_{},
        browser_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR BrowserControllerCopyFilesIfNeededRequest::BrowserControllerCopyFilesIfNeededRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BrowserControllerCopyFilesIfNeededRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BrowserControllerCopyFilesIfNeededRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BrowserControllerCopyFilesIfNeededRequestDefaultTypeInternal() {}
  union {
    BrowserControllerCopyFilesIfNeededRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BrowserControllerCopyFilesIfNeededRequestDefaultTypeInternal _BrowserControllerCopyFilesIfNeededRequest_default_instance_;
}  // namespace osirixgrpc
static ::_pb::Metadata file_level_metadata_browsercontroller_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_browsercontroller_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_browsercontroller_2eproto = nullptr;
const ::uint32_t TableStruct_browsercontroller_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::BrowserControllerDatabaseSelectionResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::BrowserControllerDatabaseSelectionResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::BrowserControllerDatabaseSelectionResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::BrowserControllerDatabaseSelectionResponse, _impl_.series_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::BrowserControllerDatabaseSelectionResponse, _impl_.studies_),
    0,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::BrowserControllerCopyFilesIfNeededRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::BrowserControllerCopyFilesIfNeededRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::BrowserControllerCopyFilesIfNeededRequest, _impl_.browser_),
    PROTOBUF_FIELD_OFFSET(::osirixgrpc::BrowserControllerCopyFilesIfNeededRequest, _impl_.paths_),
    0,
    ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 11, -1, sizeof(::osirixgrpc::BrowserControllerDatabaseSelectionResponse)},
        {14, 24, -1, sizeof(::osirixgrpc::BrowserControllerCopyFilesIfNeededRequest)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::osirixgrpc::_BrowserControllerDatabaseSelectionResponse_default_instance_._instance,
    &::osirixgrpc::_BrowserControllerCopyFilesIfNeededRequest_default_instance_._instance,
};
const char descriptor_table_protodef_browsercontroller_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\027browsercontroller.proto\022\nosirixgrpc\032\017u"
    "tilities.proto\032\013types.proto\"\242\001\n*BrowserC"
    "ontrollerDatabaseSelectionResponse\022\"\n\006st"
    "atus\030\001 \001(\0132\022.osirixgrpc.Status\022\'\n\006series"
    "\030\002 \003(\0132\027.osirixgrpc.DicomSeries\022\'\n\007studi"
    "es\030\003 \003(\0132\026.osirixgrpc.DicomStudy\"j\n)Brow"
    "serControllerCopyFilesIfNeededRequest\022.\n"
    "\007browser\030\001 \001(\0132\035.osirixgrpc.BrowserContr"
    "oller\022\r\n\005paths\030\002 \003(\tb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_browsercontroller_2eproto_deps[2] =
    {
        &::descriptor_table_types_2eproto,
        &::descriptor_table_utilities_2eproto,
};
static ::absl::once_flag descriptor_table_browsercontroller_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_browsercontroller_2eproto = {
    false,
    false,
    348,
    descriptor_table_protodef_browsercontroller_2eproto,
    "browsercontroller.proto",
    &descriptor_table_browsercontroller_2eproto_once,
    descriptor_table_browsercontroller_2eproto_deps,
    2,
    2,
    schemas,
    file_default_instances,
    TableStruct_browsercontroller_2eproto::offsets,
    file_level_metadata_browsercontroller_2eproto,
    file_level_enum_descriptors_browsercontroller_2eproto,
    file_level_service_descriptors_browsercontroller_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_browsercontroller_2eproto_getter() {
  return &descriptor_table_browsercontroller_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_browsercontroller_2eproto(&descriptor_table_browsercontroller_2eproto);
namespace osirixgrpc {
// ===================================================================

class BrowserControllerDatabaseSelectionResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<BrowserControllerDatabaseSelectionResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(BrowserControllerDatabaseSelectionResponse, _impl_._has_bits_);
  static const ::osirixgrpc::Status& status(const BrowserControllerDatabaseSelectionResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osirixgrpc::Status& BrowserControllerDatabaseSelectionResponse::_Internal::status(const BrowserControllerDatabaseSelectionResponse* msg) {
  return *msg->_impl_.status_;
}
void BrowserControllerDatabaseSelectionResponse::clear_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void BrowserControllerDatabaseSelectionResponse::clear_series() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.series_.Clear();
}
void BrowserControllerDatabaseSelectionResponse::clear_studies() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.studies_.Clear();
}
BrowserControllerDatabaseSelectionResponse::BrowserControllerDatabaseSelectionResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.BrowserControllerDatabaseSelectionResponse)
}
inline PROTOBUF_NDEBUG_INLINE BrowserControllerDatabaseSelectionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        series_{visibility, arena, from.series_},
        studies_{visibility, arena, from.studies_} {}

BrowserControllerDatabaseSelectionResponse::BrowserControllerDatabaseSelectionResponse(
    ::google::protobuf::Arena* arena,
    const BrowserControllerDatabaseSelectionResponse& from)
    : ::google::protobuf::Message(arena) {
  BrowserControllerDatabaseSelectionResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::osirixgrpc::Status>(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.BrowserControllerDatabaseSelectionResponse)
}
inline PROTOBUF_NDEBUG_INLINE BrowserControllerDatabaseSelectionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        series_{visibility, arena},
        studies_{visibility, arena} {}

inline void BrowserControllerDatabaseSelectionResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
BrowserControllerDatabaseSelectionResponse::~BrowserControllerDatabaseSelectionResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.BrowserControllerDatabaseSelectionResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BrowserControllerDatabaseSelectionResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.status_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void BrowserControllerDatabaseSelectionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.BrowserControllerDatabaseSelectionResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.series_.Clear();
  _impl_.studies_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BrowserControllerDatabaseSelectionResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> BrowserControllerDatabaseSelectionResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BrowserControllerDatabaseSelectionResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_BrowserControllerDatabaseSelectionResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .osirixgrpc.Status status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(BrowserControllerDatabaseSelectionResponse, _impl_.status_)}},
    // repeated .osirixgrpc.DicomSeries series = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(BrowserControllerDatabaseSelectionResponse, _impl_.series_)}},
    // repeated .osirixgrpc.DicomStudy studies = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(BrowserControllerDatabaseSelectionResponse, _impl_.studies_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osirixgrpc.Status status = 1;
    {PROTOBUF_FIELD_OFFSET(BrowserControllerDatabaseSelectionResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .osirixgrpc.DicomSeries series = 2;
    {PROTOBUF_FIELD_OFFSET(BrowserControllerDatabaseSelectionResponse, _impl_.series_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .osirixgrpc.DicomStudy studies = 3;
    {PROTOBUF_FIELD_OFFSET(BrowserControllerDatabaseSelectionResponse, _impl_.studies_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::Status>()},
    {::_pbi::TcParser::GetTable<::osirixgrpc::DicomSeries>()},
    {::_pbi::TcParser::GetTable<::osirixgrpc::DicomStudy>()},
  }}, {{
  }},
};

::uint8_t* BrowserControllerDatabaseSelectionResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.BrowserControllerDatabaseSelectionResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // repeated .osirixgrpc.DicomSeries series = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_series_size()); i < n; i++) {
    const auto& repfield = this->_internal_series().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .osirixgrpc.DicomStudy studies = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_studies_size()); i < n; i++) {
    const auto& repfield = this->_internal_studies().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.BrowserControllerDatabaseSelectionResponse)
  return target;
}

::size_t BrowserControllerDatabaseSelectionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.BrowserControllerDatabaseSelectionResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .osirixgrpc.DicomSeries series = 2;
  total_size += 1UL * this->_internal_series_size();
  for (const auto& msg : this->_internal_series()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .osirixgrpc.DicomStudy studies = 3;
  total_size += 1UL * this->_internal_studies_size();
  for (const auto& msg : this->_internal_studies()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .osirixgrpc.Status status = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.status_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BrowserControllerDatabaseSelectionResponse::_class_data_ = {
    BrowserControllerDatabaseSelectionResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* BrowserControllerDatabaseSelectionResponse::GetClassData() const {
  return &_class_data_;
}

void BrowserControllerDatabaseSelectionResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BrowserControllerDatabaseSelectionResponse*>(&to_msg);
  auto& from = static_cast<const BrowserControllerDatabaseSelectionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.BrowserControllerDatabaseSelectionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_series()->MergeFrom(
      from._internal_series());
  _this->_internal_mutable_studies()->MergeFrom(
      from._internal_studies());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_status()->::osirixgrpc::Status::MergeFrom(
        from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BrowserControllerDatabaseSelectionResponse::CopyFrom(const BrowserControllerDatabaseSelectionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.BrowserControllerDatabaseSelectionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BrowserControllerDatabaseSelectionResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* BrowserControllerDatabaseSelectionResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void BrowserControllerDatabaseSelectionResponse::InternalSwap(BrowserControllerDatabaseSelectionResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.series_.InternalSwap(&other->_impl_.series_);
  _impl_.studies_.InternalSwap(&other->_impl_.studies_);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata BrowserControllerDatabaseSelectionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_browsercontroller_2eproto_getter, &descriptor_table_browsercontroller_2eproto_once,
      file_level_metadata_browsercontroller_2eproto[0]);
}
// ===================================================================

class BrowserControllerCopyFilesIfNeededRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<BrowserControllerCopyFilesIfNeededRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(BrowserControllerCopyFilesIfNeededRequest, _impl_._has_bits_);
  static const ::osirixgrpc::BrowserController& browser(const BrowserControllerCopyFilesIfNeededRequest* msg);
  static void set_has_browser(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osirixgrpc::BrowserController& BrowserControllerCopyFilesIfNeededRequest::_Internal::browser(const BrowserControllerCopyFilesIfNeededRequest* msg) {
  return *msg->_impl_.browser_;
}
void BrowserControllerCopyFilesIfNeededRequest::clear_browser() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.browser_ != nullptr) _impl_.browser_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
BrowserControllerCopyFilesIfNeededRequest::BrowserControllerCopyFilesIfNeededRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.BrowserControllerCopyFilesIfNeededRequest)
}
inline PROTOBUF_NDEBUG_INLINE BrowserControllerCopyFilesIfNeededRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        paths_{visibility, arena, from.paths_} {}

BrowserControllerCopyFilesIfNeededRequest::BrowserControllerCopyFilesIfNeededRequest(
    ::google::protobuf::Arena* arena,
    const BrowserControllerCopyFilesIfNeededRequest& from)
    : ::google::protobuf::Message(arena) {
  BrowserControllerCopyFilesIfNeededRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.browser_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::osirixgrpc::BrowserController>(arena, *from._impl_.browser_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:osirixgrpc.BrowserControllerCopyFilesIfNeededRequest)
}
inline PROTOBUF_NDEBUG_INLINE BrowserControllerCopyFilesIfNeededRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        paths_{visibility, arena} {}

inline void BrowserControllerCopyFilesIfNeededRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.browser_ = {};
}
BrowserControllerCopyFilesIfNeededRequest::~BrowserControllerCopyFilesIfNeededRequest() {
  // @@protoc_insertion_point(destructor:osirixgrpc.BrowserControllerCopyFilesIfNeededRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BrowserControllerCopyFilesIfNeededRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.browser_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void BrowserControllerCopyFilesIfNeededRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.BrowserControllerCopyFilesIfNeededRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.paths_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.browser_ != nullptr);
    _impl_.browser_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BrowserControllerCopyFilesIfNeededRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 66, 2> BrowserControllerCopyFilesIfNeededRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BrowserControllerCopyFilesIfNeededRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_BrowserControllerCopyFilesIfNeededRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string paths = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(BrowserControllerCopyFilesIfNeededRequest, _impl_.paths_)}},
    // .osirixgrpc.BrowserController browser = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(BrowserControllerCopyFilesIfNeededRequest, _impl_.browser_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osirixgrpc.BrowserController browser = 1;
    {PROTOBUF_FIELD_OFFSET(BrowserControllerCopyFilesIfNeededRequest, _impl_.browser_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string paths = 2;
    {PROTOBUF_FIELD_OFFSET(BrowserControllerCopyFilesIfNeededRequest, _impl_.paths_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osirixgrpc::BrowserController>()},
  }}, {{
    "\64\0\5\0\0\0\0\0"
    "osirixgrpc.BrowserControllerCopyFilesIfNeededRequest"
    "paths"
  }},
};

::uint8_t* BrowserControllerCopyFilesIfNeededRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.BrowserControllerCopyFilesIfNeededRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .osirixgrpc.BrowserController browser = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::browser(this),
        _Internal::browser(this).GetCachedSize(), target, stream);
  }

  // repeated string paths = 2;
  for (int i = 0, n = this->_internal_paths_size(); i < n; ++i) {
    const auto& s = this->_internal_paths().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "osirixgrpc.BrowserControllerCopyFilesIfNeededRequest.paths");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.BrowserControllerCopyFilesIfNeededRequest)
  return target;
}

::size_t BrowserControllerCopyFilesIfNeededRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.BrowserControllerCopyFilesIfNeededRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string paths = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_paths().size());
  for (int i = 0, n = _internal_paths().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_paths().Get(i));
  }
  // .osirixgrpc.BrowserController browser = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.browser_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BrowserControllerCopyFilesIfNeededRequest::_class_data_ = {
    BrowserControllerCopyFilesIfNeededRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* BrowserControllerCopyFilesIfNeededRequest::GetClassData() const {
  return &_class_data_;
}

void BrowserControllerCopyFilesIfNeededRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BrowserControllerCopyFilesIfNeededRequest*>(&to_msg);
  auto& from = static_cast<const BrowserControllerCopyFilesIfNeededRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.BrowserControllerCopyFilesIfNeededRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_paths()->MergeFrom(from._internal_paths());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_browser()->::osirixgrpc::BrowserController::MergeFrom(
        from._internal_browser());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BrowserControllerCopyFilesIfNeededRequest::CopyFrom(const BrowserControllerCopyFilesIfNeededRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.BrowserControllerCopyFilesIfNeededRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BrowserControllerCopyFilesIfNeededRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* BrowserControllerCopyFilesIfNeededRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void BrowserControllerCopyFilesIfNeededRequest::InternalSwap(BrowserControllerCopyFilesIfNeededRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.paths_.InternalSwap(&other->_impl_.paths_);
  swap(_impl_.browser_, other->_impl_.browser_);
}

::google::protobuf::Metadata BrowserControllerCopyFilesIfNeededRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_browsercontroller_2eproto_getter, &descriptor_table_browsercontroller_2eproto_once,
      file_level_metadata_browsercontroller_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace osirixgrpc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
