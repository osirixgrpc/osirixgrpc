// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dicomimage.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_dicomimage_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_dicomimage_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "utilities.pb.h"
#include "types.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_dicomimage_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_dicomimage_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_dicomimage_2eproto;
namespace osirixgrpc {
class DicomImageCompletePathResponse;
struct DicomImageCompletePathResponseDefaultTypeInternal;
extern DicomImageCompletePathResponseDefaultTypeInternal _DicomImageCompletePathResponse_default_instance_;
class DicomImageDateResponse;
struct DicomImageDateResponseDefaultTypeInternal;
extern DicomImageDateResponseDefaultTypeInternal _DicomImageDateResponse_default_instance_;
class DicomImageHeightResponse;
struct DicomImageHeightResponseDefaultTypeInternal;
extern DicomImageHeightResponseDefaultTypeInternal _DicomImageHeightResponse_default_instance_;
class DicomImageInstanceNumberResponse;
struct DicomImageInstanceNumberResponseDefaultTypeInternal;
extern DicomImageInstanceNumberResponseDefaultTypeInternal _DicomImageInstanceNumberResponse_default_instance_;
class DicomImageModalityResponse;
struct DicomImageModalityResponseDefaultTypeInternal;
extern DicomImageModalityResponseDefaultTypeInternal _DicomImageModalityResponse_default_instance_;
class DicomImageNumberOfFramesResponse;
struct DicomImageNumberOfFramesResponseDefaultTypeInternal;
extern DicomImageNumberOfFramesResponseDefaultTypeInternal _DicomImageNumberOfFramesResponse_default_instance_;
class DicomImageSOPInstanceUIDResponse;
struct DicomImageSOPInstanceUIDResponseDefaultTypeInternal;
extern DicomImageSOPInstanceUIDResponseDefaultTypeInternal _DicomImageSOPInstanceUIDResponse_default_instance_;
class DicomImageSeriesResponse;
struct DicomImageSeriesResponseDefaultTypeInternal;
extern DicomImageSeriesResponseDefaultTypeInternal _DicomImageSeriesResponse_default_instance_;
class DicomImageSliceLocationResponse;
struct DicomImageSliceLocationResponseDefaultTypeInternal;
extern DicomImageSliceLocationResponseDefaultTypeInternal _DicomImageSliceLocationResponse_default_instance_;
class DicomImageWidthResponse;
struct DicomImageWidthResponseDefaultTypeInternal;
extern DicomImageWidthResponseDefaultTypeInternal _DicomImageWidthResponse_default_instance_;
}  // namespace osirixgrpc
PROTOBUF_NAMESPACE_OPEN
template <>
::osirixgrpc::DicomImageCompletePathResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomImageCompletePathResponse>(Arena*);
template <>
::osirixgrpc::DicomImageDateResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomImageDateResponse>(Arena*);
template <>
::osirixgrpc::DicomImageHeightResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomImageHeightResponse>(Arena*);
template <>
::osirixgrpc::DicomImageInstanceNumberResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomImageInstanceNumberResponse>(Arena*);
template <>
::osirixgrpc::DicomImageModalityResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomImageModalityResponse>(Arena*);
template <>
::osirixgrpc::DicomImageNumberOfFramesResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomImageNumberOfFramesResponse>(Arena*);
template <>
::osirixgrpc::DicomImageSOPInstanceUIDResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomImageSOPInstanceUIDResponse>(Arena*);
template <>
::osirixgrpc::DicomImageSeriesResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomImageSeriesResponse>(Arena*);
template <>
::osirixgrpc::DicomImageSliceLocationResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomImageSliceLocationResponse>(Arena*);
template <>
::osirixgrpc::DicomImageWidthResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomImageWidthResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace osirixgrpc {

// ===================================================================


// -------------------------------------------------------------------

class DicomImageWidthResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomImageWidthResponse) */ {
 public:
  inline DicomImageWidthResponse() : DicomImageWidthResponse(nullptr) {}
  ~DicomImageWidthResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DicomImageWidthResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DicomImageWidthResponse(const DicomImageWidthResponse& from);
  DicomImageWidthResponse(DicomImageWidthResponse&& from) noexcept
    : DicomImageWidthResponse() {
    *this = ::std::move(from);
  }

  inline DicomImageWidthResponse& operator=(const DicomImageWidthResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomImageWidthResponse& operator=(DicomImageWidthResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DicomImageWidthResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DicomImageWidthResponse* internal_default_instance() {
    return reinterpret_cast<const DicomImageWidthResponse*>(
               &_DicomImageWidthResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(DicomImageWidthResponse& a, DicomImageWidthResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomImageWidthResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomImageWidthResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DicomImageWidthResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DicomImageWidthResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DicomImageWidthResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const DicomImageWidthResponse& from) {
    DicomImageWidthResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomImageWidthResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.DicomImageWidthResponse";
  }
  protected:
  explicit DicomImageWidthResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kWidthFieldNumber = 2,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::osirixgrpc::Status& status() const;
  PROTOBUF_NODISCARD ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();
  // uint32 width = 2;
  void clear_width() ;
  ::uint32_t width() const;
  void set_width(::uint32_t value);

  private:
  ::uint32_t _internal_width() const;
  void _internal_set_width(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomImageWidthResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::osirixgrpc::Status* status_;
    ::uint32_t width_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dicomimage_2eproto;
};// -------------------------------------------------------------------

class DicomImageHeightResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomImageHeightResponse) */ {
 public:
  inline DicomImageHeightResponse() : DicomImageHeightResponse(nullptr) {}
  ~DicomImageHeightResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DicomImageHeightResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DicomImageHeightResponse(const DicomImageHeightResponse& from);
  DicomImageHeightResponse(DicomImageHeightResponse&& from) noexcept
    : DicomImageHeightResponse() {
    *this = ::std::move(from);
  }

  inline DicomImageHeightResponse& operator=(const DicomImageHeightResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomImageHeightResponse& operator=(DicomImageHeightResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DicomImageHeightResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DicomImageHeightResponse* internal_default_instance() {
    return reinterpret_cast<const DicomImageHeightResponse*>(
               &_DicomImageHeightResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(DicomImageHeightResponse& a, DicomImageHeightResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomImageHeightResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomImageHeightResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DicomImageHeightResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DicomImageHeightResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DicomImageHeightResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const DicomImageHeightResponse& from) {
    DicomImageHeightResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomImageHeightResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.DicomImageHeightResponse";
  }
  protected:
  explicit DicomImageHeightResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kHeightFieldNumber = 2,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::osirixgrpc::Status& status() const;
  PROTOBUF_NODISCARD ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();
  // uint32 height = 2;
  void clear_height() ;
  ::uint32_t height() const;
  void set_height(::uint32_t value);

  private:
  ::uint32_t _internal_height() const;
  void _internal_set_height(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomImageHeightResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::osirixgrpc::Status* status_;
    ::uint32_t height_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dicomimage_2eproto;
};// -------------------------------------------------------------------

class DicomImageSOPInstanceUIDResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomImageSOPInstanceUIDResponse) */ {
 public:
  inline DicomImageSOPInstanceUIDResponse() : DicomImageSOPInstanceUIDResponse(nullptr) {}
  ~DicomImageSOPInstanceUIDResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DicomImageSOPInstanceUIDResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DicomImageSOPInstanceUIDResponse(const DicomImageSOPInstanceUIDResponse& from);
  DicomImageSOPInstanceUIDResponse(DicomImageSOPInstanceUIDResponse&& from) noexcept
    : DicomImageSOPInstanceUIDResponse() {
    *this = ::std::move(from);
  }

  inline DicomImageSOPInstanceUIDResponse& operator=(const DicomImageSOPInstanceUIDResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomImageSOPInstanceUIDResponse& operator=(DicomImageSOPInstanceUIDResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DicomImageSOPInstanceUIDResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DicomImageSOPInstanceUIDResponse* internal_default_instance() {
    return reinterpret_cast<const DicomImageSOPInstanceUIDResponse*>(
               &_DicomImageSOPInstanceUIDResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(DicomImageSOPInstanceUIDResponse& a, DicomImageSOPInstanceUIDResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomImageSOPInstanceUIDResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomImageSOPInstanceUIDResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DicomImageSOPInstanceUIDResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DicomImageSOPInstanceUIDResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DicomImageSOPInstanceUIDResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const DicomImageSOPInstanceUIDResponse& from) {
    DicomImageSOPInstanceUIDResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomImageSOPInstanceUIDResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.DicomImageSOPInstanceUIDResponse";
  }
  protected:
  explicit DicomImageSOPInstanceUIDResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSopInstanceUidFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string sop_instance_uid = 2;
  void clear_sop_instance_uid() ;
  const std::string& sop_instance_uid() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sop_instance_uid(Arg_&& arg, Args_... args);
  std::string* mutable_sop_instance_uid();
  PROTOBUF_NODISCARD std::string* release_sop_instance_uid();
  void set_allocated_sop_instance_uid(std::string* ptr);

  private:
  const std::string& _internal_sop_instance_uid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sop_instance_uid(
      const std::string& value);
  std::string* _internal_mutable_sop_instance_uid();

  public:
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::osirixgrpc::Status& status() const;
  PROTOBUF_NODISCARD ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();
  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomImageSOPInstanceUIDResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sop_instance_uid_;
    ::osirixgrpc::Status* status_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dicomimage_2eproto;
};// -------------------------------------------------------------------

class DicomImageCompletePathResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomImageCompletePathResponse) */ {
 public:
  inline DicomImageCompletePathResponse() : DicomImageCompletePathResponse(nullptr) {}
  ~DicomImageCompletePathResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DicomImageCompletePathResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DicomImageCompletePathResponse(const DicomImageCompletePathResponse& from);
  DicomImageCompletePathResponse(DicomImageCompletePathResponse&& from) noexcept
    : DicomImageCompletePathResponse() {
    *this = ::std::move(from);
  }

  inline DicomImageCompletePathResponse& operator=(const DicomImageCompletePathResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomImageCompletePathResponse& operator=(DicomImageCompletePathResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DicomImageCompletePathResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DicomImageCompletePathResponse* internal_default_instance() {
    return reinterpret_cast<const DicomImageCompletePathResponse*>(
               &_DicomImageCompletePathResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(DicomImageCompletePathResponse& a, DicomImageCompletePathResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomImageCompletePathResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomImageCompletePathResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DicomImageCompletePathResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DicomImageCompletePathResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DicomImageCompletePathResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const DicomImageCompletePathResponse& from) {
    DicomImageCompletePathResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomImageCompletePathResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.DicomImageCompletePathResponse";
  }
  protected:
  explicit DicomImageCompletePathResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathNameFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string path_name = 2;
  void clear_path_name() ;
  const std::string& path_name() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_path_name(Arg_&& arg, Args_... args);
  std::string* mutable_path_name();
  PROTOBUF_NODISCARD std::string* release_path_name();
  void set_allocated_path_name(std::string* ptr);

  private:
  const std::string& _internal_path_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_path_name(
      const std::string& value);
  std::string* _internal_mutable_path_name();

  public:
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::osirixgrpc::Status& status() const;
  PROTOBUF_NODISCARD ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();
  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomImageCompletePathResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr path_name_;
    ::osirixgrpc::Status* status_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dicomimage_2eproto;
};// -------------------------------------------------------------------

class DicomImageDateResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomImageDateResponse) */ {
 public:
  inline DicomImageDateResponse() : DicomImageDateResponse(nullptr) {}
  ~DicomImageDateResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DicomImageDateResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DicomImageDateResponse(const DicomImageDateResponse& from);
  DicomImageDateResponse(DicomImageDateResponse&& from) noexcept
    : DicomImageDateResponse() {
    *this = ::std::move(from);
  }

  inline DicomImageDateResponse& operator=(const DicomImageDateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomImageDateResponse& operator=(DicomImageDateResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DicomImageDateResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DicomImageDateResponse* internal_default_instance() {
    return reinterpret_cast<const DicomImageDateResponse*>(
               &_DicomImageDateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(DicomImageDateResponse& a, DicomImageDateResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomImageDateResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomImageDateResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DicomImageDateResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DicomImageDateResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DicomImageDateResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const DicomImageDateResponse& from) {
    DicomImageDateResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomImageDateResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.DicomImageDateResponse";
  }
  protected:
  explicit DicomImageDateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kYearFieldNumber = 2,
    kMonthFieldNumber = 3,
    kDayFieldNumber = 4,
    kHourFieldNumber = 5,
    kMinuteFieldNumber = 6,
    kSecondFieldNumber = 7,
    kMillisecondFieldNumber = 8,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::osirixgrpc::Status& status() const;
  PROTOBUF_NODISCARD ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();
  // int32 year = 2;
  void clear_year() ;
  ::int32_t year() const;
  void set_year(::int32_t value);

  private:
  ::int32_t _internal_year() const;
  void _internal_set_year(::int32_t value);

  public:
  // int32 month = 3;
  void clear_month() ;
  ::int32_t month() const;
  void set_month(::int32_t value);

  private:
  ::int32_t _internal_month() const;
  void _internal_set_month(::int32_t value);

  public:
  // int32 day = 4;
  void clear_day() ;
  ::int32_t day() const;
  void set_day(::int32_t value);

  private:
  ::int32_t _internal_day() const;
  void _internal_set_day(::int32_t value);

  public:
  // int32 hour = 5;
  void clear_hour() ;
  ::int32_t hour() const;
  void set_hour(::int32_t value);

  private:
  ::int32_t _internal_hour() const;
  void _internal_set_hour(::int32_t value);

  public:
  // int32 minute = 6;
  void clear_minute() ;
  ::int32_t minute() const;
  void set_minute(::int32_t value);

  private:
  ::int32_t _internal_minute() const;
  void _internal_set_minute(::int32_t value);

  public:
  // int32 second = 7;
  void clear_second() ;
  ::int32_t second() const;
  void set_second(::int32_t value);

  private:
  ::int32_t _internal_second() const;
  void _internal_set_second(::int32_t value);

  public:
  // int32 millisecond = 8;
  void clear_millisecond() ;
  ::int32_t millisecond() const;
  void set_millisecond(::int32_t value);

  private:
  ::int32_t _internal_millisecond() const;
  void _internal_set_millisecond(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomImageDateResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::osirixgrpc::Status* status_;
    ::int32_t year_;
    ::int32_t month_;
    ::int32_t day_;
    ::int32_t hour_;
    ::int32_t minute_;
    ::int32_t second_;
    ::int32_t millisecond_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dicomimage_2eproto;
};// -------------------------------------------------------------------

class DicomImageNumberOfFramesResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomImageNumberOfFramesResponse) */ {
 public:
  inline DicomImageNumberOfFramesResponse() : DicomImageNumberOfFramesResponse(nullptr) {}
  ~DicomImageNumberOfFramesResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DicomImageNumberOfFramesResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DicomImageNumberOfFramesResponse(const DicomImageNumberOfFramesResponse& from);
  DicomImageNumberOfFramesResponse(DicomImageNumberOfFramesResponse&& from) noexcept
    : DicomImageNumberOfFramesResponse() {
    *this = ::std::move(from);
  }

  inline DicomImageNumberOfFramesResponse& operator=(const DicomImageNumberOfFramesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomImageNumberOfFramesResponse& operator=(DicomImageNumberOfFramesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DicomImageNumberOfFramesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DicomImageNumberOfFramesResponse* internal_default_instance() {
    return reinterpret_cast<const DicomImageNumberOfFramesResponse*>(
               &_DicomImageNumberOfFramesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(DicomImageNumberOfFramesResponse& a, DicomImageNumberOfFramesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomImageNumberOfFramesResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomImageNumberOfFramesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DicomImageNumberOfFramesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DicomImageNumberOfFramesResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DicomImageNumberOfFramesResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const DicomImageNumberOfFramesResponse& from) {
    DicomImageNumberOfFramesResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomImageNumberOfFramesResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.DicomImageNumberOfFramesResponse";
  }
  protected:
  explicit DicomImageNumberOfFramesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kNumberOfFramesFieldNumber = 2,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::osirixgrpc::Status& status() const;
  PROTOBUF_NODISCARD ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();
  // uint32 number_of_frames = 2;
  void clear_number_of_frames() ;
  ::uint32_t number_of_frames() const;
  void set_number_of_frames(::uint32_t value);

  private:
  ::uint32_t _internal_number_of_frames() const;
  void _internal_set_number_of_frames(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomImageNumberOfFramesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::osirixgrpc::Status* status_;
    ::uint32_t number_of_frames_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dicomimage_2eproto;
};// -------------------------------------------------------------------

class DicomImageModalityResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomImageModalityResponse) */ {
 public:
  inline DicomImageModalityResponse() : DicomImageModalityResponse(nullptr) {}
  ~DicomImageModalityResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DicomImageModalityResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DicomImageModalityResponse(const DicomImageModalityResponse& from);
  DicomImageModalityResponse(DicomImageModalityResponse&& from) noexcept
    : DicomImageModalityResponse() {
    *this = ::std::move(from);
  }

  inline DicomImageModalityResponse& operator=(const DicomImageModalityResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomImageModalityResponse& operator=(DicomImageModalityResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DicomImageModalityResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DicomImageModalityResponse* internal_default_instance() {
    return reinterpret_cast<const DicomImageModalityResponse*>(
               &_DicomImageModalityResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(DicomImageModalityResponse& a, DicomImageModalityResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomImageModalityResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomImageModalityResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DicomImageModalityResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DicomImageModalityResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DicomImageModalityResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const DicomImageModalityResponse& from) {
    DicomImageModalityResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomImageModalityResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.DicomImageModalityResponse";
  }
  protected:
  explicit DicomImageModalityResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModalityFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string modality = 2;
  void clear_modality() ;
  const std::string& modality() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_modality(Arg_&& arg, Args_... args);
  std::string* mutable_modality();
  PROTOBUF_NODISCARD std::string* release_modality();
  void set_allocated_modality(std::string* ptr);

  private:
  const std::string& _internal_modality() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_modality(
      const std::string& value);
  std::string* _internal_mutable_modality();

  public:
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::osirixgrpc::Status& status() const;
  PROTOBUF_NODISCARD ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();
  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomImageModalityResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr modality_;
    ::osirixgrpc::Status* status_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dicomimage_2eproto;
};// -------------------------------------------------------------------

class DicomImageSeriesResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomImageSeriesResponse) */ {
 public:
  inline DicomImageSeriesResponse() : DicomImageSeriesResponse(nullptr) {}
  ~DicomImageSeriesResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DicomImageSeriesResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DicomImageSeriesResponse(const DicomImageSeriesResponse& from);
  DicomImageSeriesResponse(DicomImageSeriesResponse&& from) noexcept
    : DicomImageSeriesResponse() {
    *this = ::std::move(from);
  }

  inline DicomImageSeriesResponse& operator=(const DicomImageSeriesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomImageSeriesResponse& operator=(DicomImageSeriesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DicomImageSeriesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DicomImageSeriesResponse* internal_default_instance() {
    return reinterpret_cast<const DicomImageSeriesResponse*>(
               &_DicomImageSeriesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(DicomImageSeriesResponse& a, DicomImageSeriesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomImageSeriesResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomImageSeriesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DicomImageSeriesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DicomImageSeriesResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DicomImageSeriesResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const DicomImageSeriesResponse& from) {
    DicomImageSeriesResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomImageSeriesResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.DicomImageSeriesResponse";
  }
  protected:
  explicit DicomImageSeriesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kSeriesFieldNumber = 2,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::osirixgrpc::Status& status() const;
  PROTOBUF_NODISCARD ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();
  // .osirixgrpc.DicomSeries series = 2;
  bool has_series() const;
  void clear_series() ;
  const ::osirixgrpc::DicomSeries& series() const;
  PROTOBUF_NODISCARD ::osirixgrpc::DicomSeries* release_series();
  ::osirixgrpc::DicomSeries* mutable_series();
  void set_allocated_series(::osirixgrpc::DicomSeries* series);
  private:
  const ::osirixgrpc::DicomSeries& _internal_series() const;
  ::osirixgrpc::DicomSeries* _internal_mutable_series();
  public:
  void unsafe_arena_set_allocated_series(
      ::osirixgrpc::DicomSeries* series);
  ::osirixgrpc::DicomSeries* unsafe_arena_release_series();
  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomImageSeriesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::osirixgrpc::Status* status_;
    ::osirixgrpc::DicomSeries* series_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dicomimage_2eproto;
};// -------------------------------------------------------------------

class DicomImageSliceLocationResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomImageSliceLocationResponse) */ {
 public:
  inline DicomImageSliceLocationResponse() : DicomImageSliceLocationResponse(nullptr) {}
  ~DicomImageSliceLocationResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DicomImageSliceLocationResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DicomImageSliceLocationResponse(const DicomImageSliceLocationResponse& from);
  DicomImageSliceLocationResponse(DicomImageSliceLocationResponse&& from) noexcept
    : DicomImageSliceLocationResponse() {
    *this = ::std::move(from);
  }

  inline DicomImageSliceLocationResponse& operator=(const DicomImageSliceLocationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomImageSliceLocationResponse& operator=(DicomImageSliceLocationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DicomImageSliceLocationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DicomImageSliceLocationResponse* internal_default_instance() {
    return reinterpret_cast<const DicomImageSliceLocationResponse*>(
               &_DicomImageSliceLocationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(DicomImageSliceLocationResponse& a, DicomImageSliceLocationResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomImageSliceLocationResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomImageSliceLocationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DicomImageSliceLocationResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DicomImageSliceLocationResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DicomImageSliceLocationResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const DicomImageSliceLocationResponse& from) {
    DicomImageSliceLocationResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomImageSliceLocationResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.DicomImageSliceLocationResponse";
  }
  protected:
  explicit DicomImageSliceLocationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kSliceLocationsFieldNumber = 2,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::osirixgrpc::Status& status() const;
  PROTOBUF_NODISCARD ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();
  // float slice_locations = 2;
  void clear_slice_locations() ;
  float slice_locations() const;
  void set_slice_locations(float value);

  private:
  float _internal_slice_locations() const;
  void _internal_set_slice_locations(float value);

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomImageSliceLocationResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::osirixgrpc::Status* status_;
    float slice_locations_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dicomimage_2eproto;
};// -------------------------------------------------------------------

class DicomImageInstanceNumberResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomImageInstanceNumberResponse) */ {
 public:
  inline DicomImageInstanceNumberResponse() : DicomImageInstanceNumberResponse(nullptr) {}
  ~DicomImageInstanceNumberResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DicomImageInstanceNumberResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DicomImageInstanceNumberResponse(const DicomImageInstanceNumberResponse& from);
  DicomImageInstanceNumberResponse(DicomImageInstanceNumberResponse&& from) noexcept
    : DicomImageInstanceNumberResponse() {
    *this = ::std::move(from);
  }

  inline DicomImageInstanceNumberResponse& operator=(const DicomImageInstanceNumberResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomImageInstanceNumberResponse& operator=(DicomImageInstanceNumberResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DicomImageInstanceNumberResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DicomImageInstanceNumberResponse* internal_default_instance() {
    return reinterpret_cast<const DicomImageInstanceNumberResponse*>(
               &_DicomImageInstanceNumberResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(DicomImageInstanceNumberResponse& a, DicomImageInstanceNumberResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomImageInstanceNumberResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomImageInstanceNumberResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DicomImageInstanceNumberResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DicomImageInstanceNumberResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DicomImageInstanceNumberResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const DicomImageInstanceNumberResponse& from) {
    DicomImageInstanceNumberResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomImageInstanceNumberResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.DicomImageInstanceNumberResponse";
  }
  protected:
  explicit DicomImageInstanceNumberResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kInstanceNumberFieldNumber = 2,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::osirixgrpc::Status& status() const;
  PROTOBUF_NODISCARD ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();
  // uint32 instance_number = 2;
  void clear_instance_number() ;
  ::uint32_t instance_number() const;
  void set_instance_number(::uint32_t value);

  private:
  ::uint32_t _internal_instance_number() const;
  void _internal_set_instance_number(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomImageInstanceNumberResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::osirixgrpc::Status* status_;
    ::uint32_t instance_number_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dicomimage_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// DicomImageWidthResponse

// .osirixgrpc.Status status = 1;
inline bool DicomImageWidthResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::osirixgrpc::Status& DicomImageWidthResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomImageWidthResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageWidthResponse.status)
  return _internal_status();
}
inline void DicomImageWidthResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = status;
  if (status) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomImageWidthResponse.status)
}
inline ::osirixgrpc::Status* DicomImageWidthResponse::release_status() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::osirixgrpc::Status* DicomImageWidthResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomImageWidthResponse.status)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomImageWidthResponse::_internal_mutable_status() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArenaForAllocation());
    _impl_.status_ = p;
  }
  return _impl_.status_;
}
inline ::osirixgrpc::Status* DicomImageWidthResponse::mutable_status() {
  ::osirixgrpc::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomImageWidthResponse.status)
  return _msg;
}
inline void DicomImageWidthResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status));
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomImageWidthResponse.status)
}

// uint32 width = 2;
inline void DicomImageWidthResponse::clear_width() {
  _impl_.width_ = 0u;
}
inline ::uint32_t DicomImageWidthResponse::width() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageWidthResponse.width)
  return _internal_width();
}
inline void DicomImageWidthResponse::set_width(::uint32_t value) {
  _internal_set_width(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomImageWidthResponse.width)
}
inline ::uint32_t DicomImageWidthResponse::_internal_width() const {
  return _impl_.width_;
}
inline void DicomImageWidthResponse::_internal_set_width(::uint32_t value) {
  ;
  _impl_.width_ = value;
}

// -------------------------------------------------------------------

// DicomImageHeightResponse

// .osirixgrpc.Status status = 1;
inline bool DicomImageHeightResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::osirixgrpc::Status& DicomImageHeightResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomImageHeightResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageHeightResponse.status)
  return _internal_status();
}
inline void DicomImageHeightResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = status;
  if (status) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomImageHeightResponse.status)
}
inline ::osirixgrpc::Status* DicomImageHeightResponse::release_status() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::osirixgrpc::Status* DicomImageHeightResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomImageHeightResponse.status)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomImageHeightResponse::_internal_mutable_status() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArenaForAllocation());
    _impl_.status_ = p;
  }
  return _impl_.status_;
}
inline ::osirixgrpc::Status* DicomImageHeightResponse::mutable_status() {
  ::osirixgrpc::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomImageHeightResponse.status)
  return _msg;
}
inline void DicomImageHeightResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status));
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomImageHeightResponse.status)
}

// uint32 height = 2;
inline void DicomImageHeightResponse::clear_height() {
  _impl_.height_ = 0u;
}
inline ::uint32_t DicomImageHeightResponse::height() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageHeightResponse.height)
  return _internal_height();
}
inline void DicomImageHeightResponse::set_height(::uint32_t value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomImageHeightResponse.height)
}
inline ::uint32_t DicomImageHeightResponse::_internal_height() const {
  return _impl_.height_;
}
inline void DicomImageHeightResponse::_internal_set_height(::uint32_t value) {
  ;
  _impl_.height_ = value;
}

// -------------------------------------------------------------------

// DicomImageSOPInstanceUIDResponse

// .osirixgrpc.Status status = 1;
inline bool DicomImageSOPInstanceUIDResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::osirixgrpc::Status& DicomImageSOPInstanceUIDResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomImageSOPInstanceUIDResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageSOPInstanceUIDResponse.status)
  return _internal_status();
}
inline void DicomImageSOPInstanceUIDResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = status;
  if (status) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomImageSOPInstanceUIDResponse.status)
}
inline ::osirixgrpc::Status* DicomImageSOPInstanceUIDResponse::release_status() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::osirixgrpc::Status* DicomImageSOPInstanceUIDResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomImageSOPInstanceUIDResponse.status)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomImageSOPInstanceUIDResponse::_internal_mutable_status() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArenaForAllocation());
    _impl_.status_ = p;
  }
  return _impl_.status_;
}
inline ::osirixgrpc::Status* DicomImageSOPInstanceUIDResponse::mutable_status() {
  ::osirixgrpc::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomImageSOPInstanceUIDResponse.status)
  return _msg;
}
inline void DicomImageSOPInstanceUIDResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status));
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomImageSOPInstanceUIDResponse.status)
}

// string sop_instance_uid = 2;
inline void DicomImageSOPInstanceUIDResponse::clear_sop_instance_uid() {
  _impl_.sop_instance_uid_.ClearToEmpty();
}
inline const std::string& DicomImageSOPInstanceUIDResponse::sop_instance_uid() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageSOPInstanceUIDResponse.sop_instance_uid)
  return _internal_sop_instance_uid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DicomImageSOPInstanceUIDResponse::set_sop_instance_uid(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.sop_instance_uid_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomImageSOPInstanceUIDResponse.sop_instance_uid)
}
inline std::string* DicomImageSOPInstanceUIDResponse::mutable_sop_instance_uid() {
  std::string* _s = _internal_mutable_sop_instance_uid();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomImageSOPInstanceUIDResponse.sop_instance_uid)
  return _s;
}
inline const std::string& DicomImageSOPInstanceUIDResponse::_internal_sop_instance_uid() const {
  return _impl_.sop_instance_uid_.Get();
}
inline void DicomImageSOPInstanceUIDResponse::_internal_set_sop_instance_uid(const std::string& value) {
  ;


  _impl_.sop_instance_uid_.Set(value, GetArenaForAllocation());
}
inline std::string* DicomImageSOPInstanceUIDResponse::_internal_mutable_sop_instance_uid() {
  ;
  return _impl_.sop_instance_uid_.Mutable( GetArenaForAllocation());
}
inline std::string* DicomImageSOPInstanceUIDResponse::release_sop_instance_uid() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomImageSOPInstanceUIDResponse.sop_instance_uid)
  return _impl_.sop_instance_uid_.Release();
}
inline void DicomImageSOPInstanceUIDResponse::set_allocated_sop_instance_uid(std::string* value) {
  _impl_.sop_instance_uid_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.sop_instance_uid_.IsDefault()) {
          _impl_.sop_instance_uid_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomImageSOPInstanceUIDResponse.sop_instance_uid)
}

// -------------------------------------------------------------------

// DicomImageCompletePathResponse

// .osirixgrpc.Status status = 1;
inline bool DicomImageCompletePathResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::osirixgrpc::Status& DicomImageCompletePathResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomImageCompletePathResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageCompletePathResponse.status)
  return _internal_status();
}
inline void DicomImageCompletePathResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = status;
  if (status) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomImageCompletePathResponse.status)
}
inline ::osirixgrpc::Status* DicomImageCompletePathResponse::release_status() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::osirixgrpc::Status* DicomImageCompletePathResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomImageCompletePathResponse.status)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomImageCompletePathResponse::_internal_mutable_status() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArenaForAllocation());
    _impl_.status_ = p;
  }
  return _impl_.status_;
}
inline ::osirixgrpc::Status* DicomImageCompletePathResponse::mutable_status() {
  ::osirixgrpc::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomImageCompletePathResponse.status)
  return _msg;
}
inline void DicomImageCompletePathResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status));
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomImageCompletePathResponse.status)
}

// string path_name = 2;
inline void DicomImageCompletePathResponse::clear_path_name() {
  _impl_.path_name_.ClearToEmpty();
}
inline const std::string& DicomImageCompletePathResponse::path_name() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageCompletePathResponse.path_name)
  return _internal_path_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DicomImageCompletePathResponse::set_path_name(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.path_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomImageCompletePathResponse.path_name)
}
inline std::string* DicomImageCompletePathResponse::mutable_path_name() {
  std::string* _s = _internal_mutable_path_name();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomImageCompletePathResponse.path_name)
  return _s;
}
inline const std::string& DicomImageCompletePathResponse::_internal_path_name() const {
  return _impl_.path_name_.Get();
}
inline void DicomImageCompletePathResponse::_internal_set_path_name(const std::string& value) {
  ;


  _impl_.path_name_.Set(value, GetArenaForAllocation());
}
inline std::string* DicomImageCompletePathResponse::_internal_mutable_path_name() {
  ;
  return _impl_.path_name_.Mutable( GetArenaForAllocation());
}
inline std::string* DicomImageCompletePathResponse::release_path_name() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomImageCompletePathResponse.path_name)
  return _impl_.path_name_.Release();
}
inline void DicomImageCompletePathResponse::set_allocated_path_name(std::string* value) {
  _impl_.path_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.path_name_.IsDefault()) {
          _impl_.path_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomImageCompletePathResponse.path_name)
}

// -------------------------------------------------------------------

// DicomImageDateResponse

// .osirixgrpc.Status status = 1;
inline bool DicomImageDateResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::osirixgrpc::Status& DicomImageDateResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomImageDateResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageDateResponse.status)
  return _internal_status();
}
inline void DicomImageDateResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = status;
  if (status) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomImageDateResponse.status)
}
inline ::osirixgrpc::Status* DicomImageDateResponse::release_status() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::osirixgrpc::Status* DicomImageDateResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomImageDateResponse.status)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomImageDateResponse::_internal_mutable_status() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArenaForAllocation());
    _impl_.status_ = p;
  }
  return _impl_.status_;
}
inline ::osirixgrpc::Status* DicomImageDateResponse::mutable_status() {
  ::osirixgrpc::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomImageDateResponse.status)
  return _msg;
}
inline void DicomImageDateResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status));
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomImageDateResponse.status)
}

// int32 year = 2;
inline void DicomImageDateResponse::clear_year() {
  _impl_.year_ = 0;
}
inline ::int32_t DicomImageDateResponse::year() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageDateResponse.year)
  return _internal_year();
}
inline void DicomImageDateResponse::set_year(::int32_t value) {
  _internal_set_year(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomImageDateResponse.year)
}
inline ::int32_t DicomImageDateResponse::_internal_year() const {
  return _impl_.year_;
}
inline void DicomImageDateResponse::_internal_set_year(::int32_t value) {
  ;
  _impl_.year_ = value;
}

// int32 month = 3;
inline void DicomImageDateResponse::clear_month() {
  _impl_.month_ = 0;
}
inline ::int32_t DicomImageDateResponse::month() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageDateResponse.month)
  return _internal_month();
}
inline void DicomImageDateResponse::set_month(::int32_t value) {
  _internal_set_month(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomImageDateResponse.month)
}
inline ::int32_t DicomImageDateResponse::_internal_month() const {
  return _impl_.month_;
}
inline void DicomImageDateResponse::_internal_set_month(::int32_t value) {
  ;
  _impl_.month_ = value;
}

// int32 day = 4;
inline void DicomImageDateResponse::clear_day() {
  _impl_.day_ = 0;
}
inline ::int32_t DicomImageDateResponse::day() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageDateResponse.day)
  return _internal_day();
}
inline void DicomImageDateResponse::set_day(::int32_t value) {
  _internal_set_day(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomImageDateResponse.day)
}
inline ::int32_t DicomImageDateResponse::_internal_day() const {
  return _impl_.day_;
}
inline void DicomImageDateResponse::_internal_set_day(::int32_t value) {
  ;
  _impl_.day_ = value;
}

// int32 hour = 5;
inline void DicomImageDateResponse::clear_hour() {
  _impl_.hour_ = 0;
}
inline ::int32_t DicomImageDateResponse::hour() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageDateResponse.hour)
  return _internal_hour();
}
inline void DicomImageDateResponse::set_hour(::int32_t value) {
  _internal_set_hour(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomImageDateResponse.hour)
}
inline ::int32_t DicomImageDateResponse::_internal_hour() const {
  return _impl_.hour_;
}
inline void DicomImageDateResponse::_internal_set_hour(::int32_t value) {
  ;
  _impl_.hour_ = value;
}

// int32 minute = 6;
inline void DicomImageDateResponse::clear_minute() {
  _impl_.minute_ = 0;
}
inline ::int32_t DicomImageDateResponse::minute() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageDateResponse.minute)
  return _internal_minute();
}
inline void DicomImageDateResponse::set_minute(::int32_t value) {
  _internal_set_minute(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomImageDateResponse.minute)
}
inline ::int32_t DicomImageDateResponse::_internal_minute() const {
  return _impl_.minute_;
}
inline void DicomImageDateResponse::_internal_set_minute(::int32_t value) {
  ;
  _impl_.minute_ = value;
}

// int32 second = 7;
inline void DicomImageDateResponse::clear_second() {
  _impl_.second_ = 0;
}
inline ::int32_t DicomImageDateResponse::second() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageDateResponse.second)
  return _internal_second();
}
inline void DicomImageDateResponse::set_second(::int32_t value) {
  _internal_set_second(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomImageDateResponse.second)
}
inline ::int32_t DicomImageDateResponse::_internal_second() const {
  return _impl_.second_;
}
inline void DicomImageDateResponse::_internal_set_second(::int32_t value) {
  ;
  _impl_.second_ = value;
}

// int32 millisecond = 8;
inline void DicomImageDateResponse::clear_millisecond() {
  _impl_.millisecond_ = 0;
}
inline ::int32_t DicomImageDateResponse::millisecond() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageDateResponse.millisecond)
  return _internal_millisecond();
}
inline void DicomImageDateResponse::set_millisecond(::int32_t value) {
  _internal_set_millisecond(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomImageDateResponse.millisecond)
}
inline ::int32_t DicomImageDateResponse::_internal_millisecond() const {
  return _impl_.millisecond_;
}
inline void DicomImageDateResponse::_internal_set_millisecond(::int32_t value) {
  ;
  _impl_.millisecond_ = value;
}

// -------------------------------------------------------------------

// DicomImageNumberOfFramesResponse

// .osirixgrpc.Status status = 1;
inline bool DicomImageNumberOfFramesResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::osirixgrpc::Status& DicomImageNumberOfFramesResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomImageNumberOfFramesResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageNumberOfFramesResponse.status)
  return _internal_status();
}
inline void DicomImageNumberOfFramesResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = status;
  if (status) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomImageNumberOfFramesResponse.status)
}
inline ::osirixgrpc::Status* DicomImageNumberOfFramesResponse::release_status() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::osirixgrpc::Status* DicomImageNumberOfFramesResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomImageNumberOfFramesResponse.status)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomImageNumberOfFramesResponse::_internal_mutable_status() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArenaForAllocation());
    _impl_.status_ = p;
  }
  return _impl_.status_;
}
inline ::osirixgrpc::Status* DicomImageNumberOfFramesResponse::mutable_status() {
  ::osirixgrpc::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomImageNumberOfFramesResponse.status)
  return _msg;
}
inline void DicomImageNumberOfFramesResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status));
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomImageNumberOfFramesResponse.status)
}

// uint32 number_of_frames = 2;
inline void DicomImageNumberOfFramesResponse::clear_number_of_frames() {
  _impl_.number_of_frames_ = 0u;
}
inline ::uint32_t DicomImageNumberOfFramesResponse::number_of_frames() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageNumberOfFramesResponse.number_of_frames)
  return _internal_number_of_frames();
}
inline void DicomImageNumberOfFramesResponse::set_number_of_frames(::uint32_t value) {
  _internal_set_number_of_frames(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomImageNumberOfFramesResponse.number_of_frames)
}
inline ::uint32_t DicomImageNumberOfFramesResponse::_internal_number_of_frames() const {
  return _impl_.number_of_frames_;
}
inline void DicomImageNumberOfFramesResponse::_internal_set_number_of_frames(::uint32_t value) {
  ;
  _impl_.number_of_frames_ = value;
}

// -------------------------------------------------------------------

// DicomImageModalityResponse

// .osirixgrpc.Status status = 1;
inline bool DicomImageModalityResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::osirixgrpc::Status& DicomImageModalityResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomImageModalityResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageModalityResponse.status)
  return _internal_status();
}
inline void DicomImageModalityResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = status;
  if (status) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomImageModalityResponse.status)
}
inline ::osirixgrpc::Status* DicomImageModalityResponse::release_status() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::osirixgrpc::Status* DicomImageModalityResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomImageModalityResponse.status)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomImageModalityResponse::_internal_mutable_status() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArenaForAllocation());
    _impl_.status_ = p;
  }
  return _impl_.status_;
}
inline ::osirixgrpc::Status* DicomImageModalityResponse::mutable_status() {
  ::osirixgrpc::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomImageModalityResponse.status)
  return _msg;
}
inline void DicomImageModalityResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status));
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomImageModalityResponse.status)
}

// string modality = 2;
inline void DicomImageModalityResponse::clear_modality() {
  _impl_.modality_.ClearToEmpty();
}
inline const std::string& DicomImageModalityResponse::modality() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageModalityResponse.modality)
  return _internal_modality();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DicomImageModalityResponse::set_modality(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.modality_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomImageModalityResponse.modality)
}
inline std::string* DicomImageModalityResponse::mutable_modality() {
  std::string* _s = _internal_mutable_modality();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomImageModalityResponse.modality)
  return _s;
}
inline const std::string& DicomImageModalityResponse::_internal_modality() const {
  return _impl_.modality_.Get();
}
inline void DicomImageModalityResponse::_internal_set_modality(const std::string& value) {
  ;


  _impl_.modality_.Set(value, GetArenaForAllocation());
}
inline std::string* DicomImageModalityResponse::_internal_mutable_modality() {
  ;
  return _impl_.modality_.Mutable( GetArenaForAllocation());
}
inline std::string* DicomImageModalityResponse::release_modality() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomImageModalityResponse.modality)
  return _impl_.modality_.Release();
}
inline void DicomImageModalityResponse::set_allocated_modality(std::string* value) {
  _impl_.modality_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.modality_.IsDefault()) {
          _impl_.modality_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomImageModalityResponse.modality)
}

// -------------------------------------------------------------------

// DicomImageSeriesResponse

// .osirixgrpc.Status status = 1;
inline bool DicomImageSeriesResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::osirixgrpc::Status& DicomImageSeriesResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomImageSeriesResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageSeriesResponse.status)
  return _internal_status();
}
inline void DicomImageSeriesResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = status;
  if (status) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomImageSeriesResponse.status)
}
inline ::osirixgrpc::Status* DicomImageSeriesResponse::release_status() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::osirixgrpc::Status* DicomImageSeriesResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomImageSeriesResponse.status)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomImageSeriesResponse::_internal_mutable_status() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArenaForAllocation());
    _impl_.status_ = p;
  }
  return _impl_.status_;
}
inline ::osirixgrpc::Status* DicomImageSeriesResponse::mutable_status() {
  ::osirixgrpc::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomImageSeriesResponse.status)
  return _msg;
}
inline void DicomImageSeriesResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status));
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomImageSeriesResponse.status)
}

// .osirixgrpc.DicomSeries series = 2;
inline bool DicomImageSeriesResponse::has_series() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.series_ != nullptr);
  return value;
}
inline const ::osirixgrpc::DicomSeries& DicomImageSeriesResponse::_internal_series() const {
  const ::osirixgrpc::DicomSeries* p = _impl_.series_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::DicomSeries&>(
      ::osirixgrpc::_DicomSeries_default_instance_);
}
inline const ::osirixgrpc::DicomSeries& DicomImageSeriesResponse::series() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageSeriesResponse.series)
  return _internal_series();
}
inline void DicomImageSeriesResponse::unsafe_arena_set_allocated_series(
    ::osirixgrpc::DicomSeries* series) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.series_);
  }
  _impl_.series_ = series;
  if (series) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomImageSeriesResponse.series)
}
inline ::osirixgrpc::DicomSeries* DicomImageSeriesResponse::release_series() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::osirixgrpc::DicomSeries* temp = _impl_.series_;
  _impl_.series_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::osirixgrpc::DicomSeries* DicomImageSeriesResponse::unsafe_arena_release_series() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomImageSeriesResponse.series)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::osirixgrpc::DicomSeries* temp = _impl_.series_;
  _impl_.series_ = nullptr;
  return temp;
}
inline ::osirixgrpc::DicomSeries* DicomImageSeriesResponse::_internal_mutable_series() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.series_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::DicomSeries>(GetArenaForAllocation());
    _impl_.series_ = p;
  }
  return _impl_.series_;
}
inline ::osirixgrpc::DicomSeries* DicomImageSeriesResponse::mutable_series() {
  ::osirixgrpc::DicomSeries* _msg = _internal_mutable_series();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomImageSeriesResponse.series)
  return _msg;
}
inline void DicomImageSeriesResponse::set_allocated_series(::osirixgrpc::DicomSeries* series) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.series_);
  }
  if (series) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(series));
    if (message_arena != submessage_arena) {
      series = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, series, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.series_ = series;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomImageSeriesResponse.series)
}

// -------------------------------------------------------------------

// DicomImageSliceLocationResponse

// .osirixgrpc.Status status = 1;
inline bool DicomImageSliceLocationResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::osirixgrpc::Status& DicomImageSliceLocationResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomImageSliceLocationResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageSliceLocationResponse.status)
  return _internal_status();
}
inline void DicomImageSliceLocationResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = status;
  if (status) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomImageSliceLocationResponse.status)
}
inline ::osirixgrpc::Status* DicomImageSliceLocationResponse::release_status() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::osirixgrpc::Status* DicomImageSliceLocationResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomImageSliceLocationResponse.status)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomImageSliceLocationResponse::_internal_mutable_status() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArenaForAllocation());
    _impl_.status_ = p;
  }
  return _impl_.status_;
}
inline ::osirixgrpc::Status* DicomImageSliceLocationResponse::mutable_status() {
  ::osirixgrpc::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomImageSliceLocationResponse.status)
  return _msg;
}
inline void DicomImageSliceLocationResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status));
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomImageSliceLocationResponse.status)
}

// float slice_locations = 2;
inline void DicomImageSliceLocationResponse::clear_slice_locations() {
  _impl_.slice_locations_ = 0;
}
inline float DicomImageSliceLocationResponse::slice_locations() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageSliceLocationResponse.slice_locations)
  return _internal_slice_locations();
}
inline void DicomImageSliceLocationResponse::set_slice_locations(float value) {
  _internal_set_slice_locations(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomImageSliceLocationResponse.slice_locations)
}
inline float DicomImageSliceLocationResponse::_internal_slice_locations() const {
  return _impl_.slice_locations_;
}
inline void DicomImageSliceLocationResponse::_internal_set_slice_locations(float value) {
  ;
  _impl_.slice_locations_ = value;
}

// -------------------------------------------------------------------

// DicomImageInstanceNumberResponse

// .osirixgrpc.Status status = 1;
inline bool DicomImageInstanceNumberResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::osirixgrpc::Status& DicomImageInstanceNumberResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomImageInstanceNumberResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageInstanceNumberResponse.status)
  return _internal_status();
}
inline void DicomImageInstanceNumberResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = status;
  if (status) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomImageInstanceNumberResponse.status)
}
inline ::osirixgrpc::Status* DicomImageInstanceNumberResponse::release_status() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::osirixgrpc::Status* DicomImageInstanceNumberResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomImageInstanceNumberResponse.status)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomImageInstanceNumberResponse::_internal_mutable_status() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArenaForAllocation());
    _impl_.status_ = p;
  }
  return _impl_.status_;
}
inline ::osirixgrpc::Status* DicomImageInstanceNumberResponse::mutable_status() {
  ::osirixgrpc::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomImageInstanceNumberResponse.status)
  return _msg;
}
inline void DicomImageInstanceNumberResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status));
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomImageInstanceNumberResponse.status)
}

// uint32 instance_number = 2;
inline void DicomImageInstanceNumberResponse::clear_instance_number() {
  _impl_.instance_number_ = 0u;
}
inline ::uint32_t DicomImageInstanceNumberResponse::instance_number() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageInstanceNumberResponse.instance_number)
  return _internal_instance_number();
}
inline void DicomImageInstanceNumberResponse::set_instance_number(::uint32_t value) {
  _internal_set_instance_number(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomImageInstanceNumberResponse.instance_number)
}
inline ::uint32_t DicomImageInstanceNumberResponse::_internal_instance_number() const {
  return _impl_.instance_number_;
}
inline void DicomImageInstanceNumberResponse::_internal_set_instance_number(::uint32_t value) {
  ;
  _impl_.instance_number_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace osirixgrpc


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_dicomimage_2eproto_2epb_2eh
