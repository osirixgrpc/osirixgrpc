// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: types.proto
// Protobuf C++ Version: 4.25.0

#ifndef GOOGLE_PROTOBUF_INCLUDED_types_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_types_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_types_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_types_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_types_2eproto;
namespace osirixgrpc {
class BrowserController;
struct BrowserControllerDefaultTypeInternal;
extern BrowserControllerDefaultTypeInternal _BrowserController_default_instance_;
class DCMPix;
struct DCMPixDefaultTypeInternal;
extern DCMPixDefaultTypeInternal _DCMPix_default_instance_;
class DicomImage;
struct DicomImageDefaultTypeInternal;
extern DicomImageDefaultTypeInternal _DicomImage_default_instance_;
class DicomSeries;
struct DicomSeriesDefaultTypeInternal;
extern DicomSeriesDefaultTypeInternal _DicomSeries_default_instance_;
class DicomStudy;
struct DicomStudyDefaultTypeInternal;
extern DicomStudyDefaultTypeInternal _DicomStudy_default_instance_;
class ROI;
struct ROIDefaultTypeInternal;
extern ROIDefaultTypeInternal _ROI_default_instance_;
class ROIVolume;
struct ROIVolumeDefaultTypeInternal;
extern ROIVolumeDefaultTypeInternal _ROIVolume_default_instance_;
class VRController;
struct VRControllerDefaultTypeInternal;
extern VRControllerDefaultTypeInternal _VRController_default_instance_;
class ViewerController;
struct ViewerControllerDefaultTypeInternal;
extern ViewerControllerDefaultTypeInternal _ViewerController_default_instance_;
}  // namespace osirixgrpc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace osirixgrpc {

// ===================================================================


// -------------------------------------------------------------------

class ViewerController final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.ViewerController) */ {
 public:
  inline ViewerController() : ViewerController(nullptr) {}
  ~ViewerController() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ViewerController(::google::protobuf::internal::ConstantInitialized);

  inline ViewerController(const ViewerController& from)
      : ViewerController(nullptr, from) {}
  ViewerController(ViewerController&& from) noexcept
    : ViewerController() {
    *this = ::std::move(from);
  }

  inline ViewerController& operator=(const ViewerController& from) {
    CopyFrom(from);
    return *this;
  }
  inline ViewerController& operator=(ViewerController&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ViewerController& default_instance() {
    return *internal_default_instance();
  }
  static inline const ViewerController* internal_default_instance() {
    return reinterpret_cast<const ViewerController*>(
               &_ViewerController_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ViewerController& a, ViewerController& b) {
    a.Swap(&b);
  }
  inline void Swap(ViewerController* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ViewerController* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ViewerController* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ViewerController>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ViewerController& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ViewerController& from) {
    ViewerController::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ViewerController* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.ViewerController";
  }
  protected:
  explicit ViewerController(::google::protobuf::Arena* arena);
  ViewerController(::google::protobuf::Arena* arena, const ViewerController& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOsirixrpcUidFieldNumber = 1,
  };
  // string osirixrpc_uid = 1;
  void clear_osirixrpc_uid() ;
  const std::string& osirixrpc_uid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_osirixrpc_uid(Arg_&& arg, Args_... args);
  std::string* mutable_osirixrpc_uid();
  PROTOBUF_NODISCARD std::string* release_osirixrpc_uid();
  void set_allocated_osirixrpc_uid(std::string* value);

  private:
  const std::string& _internal_osirixrpc_uid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_osirixrpc_uid(
      const std::string& value);
  std::string* _internal_mutable_osirixrpc_uid();

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.ViewerController)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      49, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr osirixrpc_uid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_types_2eproto;
};// -------------------------------------------------------------------

class VRController final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.VRController) */ {
 public:
  inline VRController() : VRController(nullptr) {}
  ~VRController() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR VRController(::google::protobuf::internal::ConstantInitialized);

  inline VRController(const VRController& from)
      : VRController(nullptr, from) {}
  VRController(VRController&& from) noexcept
    : VRController() {
    *this = ::std::move(from);
  }

  inline VRController& operator=(const VRController& from) {
    CopyFrom(from);
    return *this;
  }
  inline VRController& operator=(VRController&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VRController& default_instance() {
    return *internal_default_instance();
  }
  static inline const VRController* internal_default_instance() {
    return reinterpret_cast<const VRController*>(
               &_VRController_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(VRController& a, VRController& b) {
    a.Swap(&b);
  }
  inline void Swap(VRController* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VRController* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VRController* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<VRController>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VRController& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const VRController& from) {
    VRController::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(VRController* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.VRController";
  }
  protected:
  explicit VRController(::google::protobuf::Arena* arena);
  VRController(::google::protobuf::Arena* arena, const VRController& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOsirixrpcUidFieldNumber = 1,
  };
  // string osirixrpc_uid = 1;
  void clear_osirixrpc_uid() ;
  const std::string& osirixrpc_uid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_osirixrpc_uid(Arg_&& arg, Args_... args);
  std::string* mutable_osirixrpc_uid();
  PROTOBUF_NODISCARD std::string* release_osirixrpc_uid();
  void set_allocated_osirixrpc_uid(std::string* value);

  private:
  const std::string& _internal_osirixrpc_uid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_osirixrpc_uid(
      const std::string& value);
  std::string* _internal_mutable_osirixrpc_uid();

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.VRController)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      45, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr osirixrpc_uid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_types_2eproto;
};// -------------------------------------------------------------------

class ROIVolume final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.ROIVolume) */ {
 public:
  inline ROIVolume() : ROIVolume(nullptr) {}
  ~ROIVolume() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ROIVolume(::google::protobuf::internal::ConstantInitialized);

  inline ROIVolume(const ROIVolume& from)
      : ROIVolume(nullptr, from) {}
  ROIVolume(ROIVolume&& from) noexcept
    : ROIVolume() {
    *this = ::std::move(from);
  }

  inline ROIVolume& operator=(const ROIVolume& from) {
    CopyFrom(from);
    return *this;
  }
  inline ROIVolume& operator=(ROIVolume&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ROIVolume& default_instance() {
    return *internal_default_instance();
  }
  static inline const ROIVolume* internal_default_instance() {
    return reinterpret_cast<const ROIVolume*>(
               &_ROIVolume_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ROIVolume& a, ROIVolume& b) {
    a.Swap(&b);
  }
  inline void Swap(ROIVolume* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ROIVolume* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ROIVolume* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ROIVolume>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ROIVolume& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ROIVolume& from) {
    ROIVolume::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ROIVolume* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.ROIVolume";
  }
  protected:
  explicit ROIVolume(::google::protobuf::Arena* arena);
  ROIVolume(::google::protobuf::Arena* arena, const ROIVolume& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOsirixrpcUidFieldNumber = 1,
  };
  // string osirixrpc_uid = 1;
  void clear_osirixrpc_uid() ;
  const std::string& osirixrpc_uid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_osirixrpc_uid(Arg_&& arg, Args_... args);
  std::string* mutable_osirixrpc_uid();
  PROTOBUF_NODISCARD std::string* release_osirixrpc_uid();
  void set_allocated_osirixrpc_uid(std::string* value);

  private:
  const std::string& _internal_osirixrpc_uid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_osirixrpc_uid(
      const std::string& value);
  std::string* _internal_mutable_osirixrpc_uid();

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.ROIVolume)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      42, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr osirixrpc_uid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_types_2eproto;
};// -------------------------------------------------------------------

class ROI final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.ROI) */ {
 public:
  inline ROI() : ROI(nullptr) {}
  ~ROI() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ROI(::google::protobuf::internal::ConstantInitialized);

  inline ROI(const ROI& from)
      : ROI(nullptr, from) {}
  ROI(ROI&& from) noexcept
    : ROI() {
    *this = ::std::move(from);
  }

  inline ROI& operator=(const ROI& from) {
    CopyFrom(from);
    return *this;
  }
  inline ROI& operator=(ROI&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ROI& default_instance() {
    return *internal_default_instance();
  }
  static inline const ROI* internal_default_instance() {
    return reinterpret_cast<const ROI*>(
               &_ROI_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ROI& a, ROI& b) {
    a.Swap(&b);
  }
  inline void Swap(ROI* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ROI* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ROI* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ROI>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ROI& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ROI& from) {
    ROI::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ROI* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.ROI";
  }
  protected:
  explicit ROI(::google::protobuf::Arena* arena);
  ROI(::google::protobuf::Arena* arena, const ROI& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOsirixrpcUidFieldNumber = 1,
  };
  // string osirixrpc_uid = 1;
  void clear_osirixrpc_uid() ;
  const std::string& osirixrpc_uid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_osirixrpc_uid(Arg_&& arg, Args_... args);
  std::string* mutable_osirixrpc_uid();
  PROTOBUF_NODISCARD std::string* release_osirixrpc_uid();
  void set_allocated_osirixrpc_uid(std::string* value);

  private:
  const std::string& _internal_osirixrpc_uid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_osirixrpc_uid(
      const std::string& value);
  std::string* _internal_mutable_osirixrpc_uid();

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.ROI)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      36, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr osirixrpc_uid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_types_2eproto;
};// -------------------------------------------------------------------

class DicomStudy final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomStudy) */ {
 public:
  inline DicomStudy() : DicomStudy(nullptr) {}
  ~DicomStudy() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DicomStudy(::google::protobuf::internal::ConstantInitialized);

  inline DicomStudy(const DicomStudy& from)
      : DicomStudy(nullptr, from) {}
  DicomStudy(DicomStudy&& from) noexcept
    : DicomStudy() {
    *this = ::std::move(from);
  }

  inline DicomStudy& operator=(const DicomStudy& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomStudy& operator=(DicomStudy&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DicomStudy& default_instance() {
    return *internal_default_instance();
  }
  static inline const DicomStudy* internal_default_instance() {
    return reinterpret_cast<const DicomStudy*>(
               &_DicomStudy_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(DicomStudy& a, DicomStudy& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomStudy* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomStudy* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DicomStudy* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DicomStudy>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DicomStudy& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DicomStudy& from) {
    DicomStudy::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DicomStudy* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.DicomStudy";
  }
  protected:
  explicit DicomStudy(::google::protobuf::Arena* arena);
  DicomStudy(::google::protobuf::Arena* arena, const DicomStudy& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOsirixrpcUidFieldNumber = 1,
  };
  // string osirixrpc_uid = 1;
  void clear_osirixrpc_uid() ;
  const std::string& osirixrpc_uid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_osirixrpc_uid(Arg_&& arg, Args_... args);
  std::string* mutable_osirixrpc_uid();
  PROTOBUF_NODISCARD std::string* release_osirixrpc_uid();
  void set_allocated_osirixrpc_uid(std::string* value);

  private:
  const std::string& _internal_osirixrpc_uid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_osirixrpc_uid(
      const std::string& value);
  std::string* _internal_mutable_osirixrpc_uid();

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomStudy)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      43, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr osirixrpc_uid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_types_2eproto;
};// -------------------------------------------------------------------

class DicomSeries final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomSeries) */ {
 public:
  inline DicomSeries() : DicomSeries(nullptr) {}
  ~DicomSeries() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DicomSeries(::google::protobuf::internal::ConstantInitialized);

  inline DicomSeries(const DicomSeries& from)
      : DicomSeries(nullptr, from) {}
  DicomSeries(DicomSeries&& from) noexcept
    : DicomSeries() {
    *this = ::std::move(from);
  }

  inline DicomSeries& operator=(const DicomSeries& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomSeries& operator=(DicomSeries&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DicomSeries& default_instance() {
    return *internal_default_instance();
  }
  static inline const DicomSeries* internal_default_instance() {
    return reinterpret_cast<const DicomSeries*>(
               &_DicomSeries_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(DicomSeries& a, DicomSeries& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomSeries* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomSeries* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DicomSeries* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DicomSeries>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DicomSeries& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DicomSeries& from) {
    DicomSeries::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DicomSeries* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.DicomSeries";
  }
  protected:
  explicit DicomSeries(::google::protobuf::Arena* arena);
  DicomSeries(::google::protobuf::Arena* arena, const DicomSeries& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOsirixrpcUidFieldNumber = 1,
  };
  // string osirixrpc_uid = 1;
  void clear_osirixrpc_uid() ;
  const std::string& osirixrpc_uid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_osirixrpc_uid(Arg_&& arg, Args_... args);
  std::string* mutable_osirixrpc_uid();
  PROTOBUF_NODISCARD std::string* release_osirixrpc_uid();
  void set_allocated_osirixrpc_uid(std::string* value);

  private:
  const std::string& _internal_osirixrpc_uid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_osirixrpc_uid(
      const std::string& value);
  std::string* _internal_mutable_osirixrpc_uid();

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomSeries)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      44, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr osirixrpc_uid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_types_2eproto;
};// -------------------------------------------------------------------

class DicomImage final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomImage) */ {
 public:
  inline DicomImage() : DicomImage(nullptr) {}
  ~DicomImage() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DicomImage(::google::protobuf::internal::ConstantInitialized);

  inline DicomImage(const DicomImage& from)
      : DicomImage(nullptr, from) {}
  DicomImage(DicomImage&& from) noexcept
    : DicomImage() {
    *this = ::std::move(from);
  }

  inline DicomImage& operator=(const DicomImage& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomImage& operator=(DicomImage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DicomImage& default_instance() {
    return *internal_default_instance();
  }
  static inline const DicomImage* internal_default_instance() {
    return reinterpret_cast<const DicomImage*>(
               &_DicomImage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(DicomImage& a, DicomImage& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomImage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomImage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DicomImage* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DicomImage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DicomImage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DicomImage& from) {
    DicomImage::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DicomImage* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.DicomImage";
  }
  protected:
  explicit DicomImage(::google::protobuf::Arena* arena);
  DicomImage(::google::protobuf::Arena* arena, const DicomImage& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOsirixrpcUidFieldNumber = 1,
  };
  // string osirixrpc_uid = 1;
  void clear_osirixrpc_uid() ;
  const std::string& osirixrpc_uid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_osirixrpc_uid(Arg_&& arg, Args_... args);
  std::string* mutable_osirixrpc_uid();
  PROTOBUF_NODISCARD std::string* release_osirixrpc_uid();
  void set_allocated_osirixrpc_uid(std::string* value);

  private:
  const std::string& _internal_osirixrpc_uid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_osirixrpc_uid(
      const std::string& value);
  std::string* _internal_mutable_osirixrpc_uid();

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomImage)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      43, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr osirixrpc_uid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_types_2eproto;
};// -------------------------------------------------------------------

class DCMPix final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DCMPix) */ {
 public:
  inline DCMPix() : DCMPix(nullptr) {}
  ~DCMPix() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DCMPix(::google::protobuf::internal::ConstantInitialized);

  inline DCMPix(const DCMPix& from)
      : DCMPix(nullptr, from) {}
  DCMPix(DCMPix&& from) noexcept
    : DCMPix() {
    *this = ::std::move(from);
  }

  inline DCMPix& operator=(const DCMPix& from) {
    CopyFrom(from);
    return *this;
  }
  inline DCMPix& operator=(DCMPix&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DCMPix& default_instance() {
    return *internal_default_instance();
  }
  static inline const DCMPix* internal_default_instance() {
    return reinterpret_cast<const DCMPix*>(
               &_DCMPix_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(DCMPix& a, DCMPix& b) {
    a.Swap(&b);
  }
  inline void Swap(DCMPix* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DCMPix* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DCMPix* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DCMPix>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DCMPix& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DCMPix& from) {
    DCMPix::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DCMPix* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.DCMPix";
  }
  protected:
  explicit DCMPix(::google::protobuf::Arena* arena);
  DCMPix(::google::protobuf::Arena* arena, const DCMPix& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOsirixrpcUidFieldNumber = 1,
  };
  // string osirixrpc_uid = 1;
  void clear_osirixrpc_uid() ;
  const std::string& osirixrpc_uid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_osirixrpc_uid(Arg_&& arg, Args_... args);
  std::string* mutable_osirixrpc_uid();
  PROTOBUF_NODISCARD std::string* release_osirixrpc_uid();
  void set_allocated_osirixrpc_uid(std::string* value);

  private:
  const std::string& _internal_osirixrpc_uid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_osirixrpc_uid(
      const std::string& value);
  std::string* _internal_mutable_osirixrpc_uid();

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.DCMPix)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      39, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr osirixrpc_uid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_types_2eproto;
};// -------------------------------------------------------------------

class BrowserController final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.BrowserController) */ {
 public:
  inline BrowserController() : BrowserController(nullptr) {}
  ~BrowserController() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR BrowserController(::google::protobuf::internal::ConstantInitialized);

  inline BrowserController(const BrowserController& from)
      : BrowserController(nullptr, from) {}
  BrowserController(BrowserController&& from) noexcept
    : BrowserController() {
    *this = ::std::move(from);
  }

  inline BrowserController& operator=(const BrowserController& from) {
    CopyFrom(from);
    return *this;
  }
  inline BrowserController& operator=(BrowserController&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BrowserController& default_instance() {
    return *internal_default_instance();
  }
  static inline const BrowserController* internal_default_instance() {
    return reinterpret_cast<const BrowserController*>(
               &_BrowserController_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(BrowserController& a, BrowserController& b) {
    a.Swap(&b);
  }
  inline void Swap(BrowserController* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BrowserController* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BrowserController* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BrowserController>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BrowserController& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const BrowserController& from) {
    BrowserController::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BrowserController* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.BrowserController";
  }
  protected:
  explicit BrowserController(::google::protobuf::Arena* arena);
  BrowserController(::google::protobuf::Arena* arena, const BrowserController& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOsirixrpcUidFieldNumber = 1,
  };
  // string osirixrpc_uid = 1;
  void clear_osirixrpc_uid() ;
  const std::string& osirixrpc_uid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_osirixrpc_uid(Arg_&& arg, Args_... args);
  std::string* mutable_osirixrpc_uid();
  PROTOBUF_NODISCARD std::string* release_osirixrpc_uid();
  void set_allocated_osirixrpc_uid(std::string* value);

  private:
  const std::string& _internal_osirixrpc_uid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_osirixrpc_uid(
      const std::string& value);
  std::string* _internal_mutable_osirixrpc_uid();

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.BrowserController)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      50, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr osirixrpc_uid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_types_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// BrowserController

// string osirixrpc_uid = 1;
inline void BrowserController::clear_osirixrpc_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.osirixrpc_uid_.ClearToEmpty();
}
inline const std::string& BrowserController::osirixrpc_uid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.BrowserController.osirixrpc_uid)
  return _internal_osirixrpc_uid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BrowserController::set_osirixrpc_uid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.osirixrpc_uid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:osirixgrpc.BrowserController.osirixrpc_uid)
}
inline std::string* BrowserController::mutable_osirixrpc_uid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_osirixrpc_uid();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.BrowserController.osirixrpc_uid)
  return _s;
}
inline const std::string& BrowserController::_internal_osirixrpc_uid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.osirixrpc_uid_.Get();
}
inline void BrowserController::_internal_set_osirixrpc_uid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.osirixrpc_uid_.Set(value, GetArena());
}
inline std::string* BrowserController::_internal_mutable_osirixrpc_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.osirixrpc_uid_.Mutable( GetArena());
}
inline std::string* BrowserController::release_osirixrpc_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.BrowserController.osirixrpc_uid)
  return _impl_.osirixrpc_uid_.Release();
}
inline void BrowserController::set_allocated_osirixrpc_uid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.osirixrpc_uid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.osirixrpc_uid_.IsDefault()) {
          _impl_.osirixrpc_uid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.BrowserController.osirixrpc_uid)
}

// -------------------------------------------------------------------

// ViewerController

// string osirixrpc_uid = 1;
inline void ViewerController::clear_osirixrpc_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.osirixrpc_uid_.ClearToEmpty();
}
inline const std::string& ViewerController::osirixrpc_uid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.ViewerController.osirixrpc_uid)
  return _internal_osirixrpc_uid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ViewerController::set_osirixrpc_uid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.osirixrpc_uid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:osirixgrpc.ViewerController.osirixrpc_uid)
}
inline std::string* ViewerController::mutable_osirixrpc_uid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_osirixrpc_uid();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.ViewerController.osirixrpc_uid)
  return _s;
}
inline const std::string& ViewerController::_internal_osirixrpc_uid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.osirixrpc_uid_.Get();
}
inline void ViewerController::_internal_set_osirixrpc_uid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.osirixrpc_uid_.Set(value, GetArena());
}
inline std::string* ViewerController::_internal_mutable_osirixrpc_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.osirixrpc_uid_.Mutable( GetArena());
}
inline std::string* ViewerController::release_osirixrpc_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.ViewerController.osirixrpc_uid)
  return _impl_.osirixrpc_uid_.Release();
}
inline void ViewerController::set_allocated_osirixrpc_uid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.osirixrpc_uid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.osirixrpc_uid_.IsDefault()) {
          _impl_.osirixrpc_uid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.ViewerController.osirixrpc_uid)
}

// -------------------------------------------------------------------

// VRController

// string osirixrpc_uid = 1;
inline void VRController::clear_osirixrpc_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.osirixrpc_uid_.ClearToEmpty();
}
inline const std::string& VRController::osirixrpc_uid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.VRController.osirixrpc_uid)
  return _internal_osirixrpc_uid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void VRController::set_osirixrpc_uid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.osirixrpc_uid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:osirixgrpc.VRController.osirixrpc_uid)
}
inline std::string* VRController::mutable_osirixrpc_uid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_osirixrpc_uid();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.VRController.osirixrpc_uid)
  return _s;
}
inline const std::string& VRController::_internal_osirixrpc_uid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.osirixrpc_uid_.Get();
}
inline void VRController::_internal_set_osirixrpc_uid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.osirixrpc_uid_.Set(value, GetArena());
}
inline std::string* VRController::_internal_mutable_osirixrpc_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.osirixrpc_uid_.Mutable( GetArena());
}
inline std::string* VRController::release_osirixrpc_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.VRController.osirixrpc_uid)
  return _impl_.osirixrpc_uid_.Release();
}
inline void VRController::set_allocated_osirixrpc_uid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.osirixrpc_uid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.osirixrpc_uid_.IsDefault()) {
          _impl_.osirixrpc_uid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.VRController.osirixrpc_uid)
}

// -------------------------------------------------------------------

// DCMPix

// string osirixrpc_uid = 1;
inline void DCMPix::clear_osirixrpc_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.osirixrpc_uid_.ClearToEmpty();
}
inline const std::string& DCMPix::osirixrpc_uid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPix.osirixrpc_uid)
  return _internal_osirixrpc_uid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DCMPix::set_osirixrpc_uid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.osirixrpc_uid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:osirixgrpc.DCMPix.osirixrpc_uid)
}
inline std::string* DCMPix::mutable_osirixrpc_uid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_osirixrpc_uid();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DCMPix.osirixrpc_uid)
  return _s;
}
inline const std::string& DCMPix::_internal_osirixrpc_uid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.osirixrpc_uid_.Get();
}
inline void DCMPix::_internal_set_osirixrpc_uid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.osirixrpc_uid_.Set(value, GetArena());
}
inline std::string* DCMPix::_internal_mutable_osirixrpc_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.osirixrpc_uid_.Mutable( GetArena());
}
inline std::string* DCMPix::release_osirixrpc_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.DCMPix.osirixrpc_uid)
  return _impl_.osirixrpc_uid_.Release();
}
inline void DCMPix::set_allocated_osirixrpc_uid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.osirixrpc_uid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.osirixrpc_uid_.IsDefault()) {
          _impl_.osirixrpc_uid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DCMPix.osirixrpc_uid)
}

// -------------------------------------------------------------------

// ROI

// string osirixrpc_uid = 1;
inline void ROI::clear_osirixrpc_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.osirixrpc_uid_.ClearToEmpty();
}
inline const std::string& ROI::osirixrpc_uid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROI.osirixrpc_uid)
  return _internal_osirixrpc_uid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ROI::set_osirixrpc_uid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.osirixrpc_uid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:osirixgrpc.ROI.osirixrpc_uid)
}
inline std::string* ROI::mutable_osirixrpc_uid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_osirixrpc_uid();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.ROI.osirixrpc_uid)
  return _s;
}
inline const std::string& ROI::_internal_osirixrpc_uid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.osirixrpc_uid_.Get();
}
inline void ROI::_internal_set_osirixrpc_uid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.osirixrpc_uid_.Set(value, GetArena());
}
inline std::string* ROI::_internal_mutable_osirixrpc_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.osirixrpc_uid_.Mutable( GetArena());
}
inline std::string* ROI::release_osirixrpc_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.ROI.osirixrpc_uid)
  return _impl_.osirixrpc_uid_.Release();
}
inline void ROI::set_allocated_osirixrpc_uid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.osirixrpc_uid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.osirixrpc_uid_.IsDefault()) {
          _impl_.osirixrpc_uid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.ROI.osirixrpc_uid)
}

// -------------------------------------------------------------------

// ROIVolume

// string osirixrpc_uid = 1;
inline void ROIVolume::clear_osirixrpc_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.osirixrpc_uid_.ClearToEmpty();
}
inline const std::string& ROIVolume::osirixrpc_uid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIVolume.osirixrpc_uid)
  return _internal_osirixrpc_uid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ROIVolume::set_osirixrpc_uid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.osirixrpc_uid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:osirixgrpc.ROIVolume.osirixrpc_uid)
}
inline std::string* ROIVolume::mutable_osirixrpc_uid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_osirixrpc_uid();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.ROIVolume.osirixrpc_uid)
  return _s;
}
inline const std::string& ROIVolume::_internal_osirixrpc_uid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.osirixrpc_uid_.Get();
}
inline void ROIVolume::_internal_set_osirixrpc_uid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.osirixrpc_uid_.Set(value, GetArena());
}
inline std::string* ROIVolume::_internal_mutable_osirixrpc_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.osirixrpc_uid_.Mutable( GetArena());
}
inline std::string* ROIVolume::release_osirixrpc_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.ROIVolume.osirixrpc_uid)
  return _impl_.osirixrpc_uid_.Release();
}
inline void ROIVolume::set_allocated_osirixrpc_uid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.osirixrpc_uid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.osirixrpc_uid_.IsDefault()) {
          _impl_.osirixrpc_uid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.ROIVolume.osirixrpc_uid)
}

// -------------------------------------------------------------------

// DicomImage

// string osirixrpc_uid = 1;
inline void DicomImage::clear_osirixrpc_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.osirixrpc_uid_.ClearToEmpty();
}
inline const std::string& DicomImage::osirixrpc_uid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImage.osirixrpc_uid)
  return _internal_osirixrpc_uid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DicomImage::set_osirixrpc_uid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.osirixrpc_uid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomImage.osirixrpc_uid)
}
inline std::string* DicomImage::mutable_osirixrpc_uid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_osirixrpc_uid();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomImage.osirixrpc_uid)
  return _s;
}
inline const std::string& DicomImage::_internal_osirixrpc_uid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.osirixrpc_uid_.Get();
}
inline void DicomImage::_internal_set_osirixrpc_uid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.osirixrpc_uid_.Set(value, GetArena());
}
inline std::string* DicomImage::_internal_mutable_osirixrpc_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.osirixrpc_uid_.Mutable( GetArena());
}
inline std::string* DicomImage::release_osirixrpc_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomImage.osirixrpc_uid)
  return _impl_.osirixrpc_uid_.Release();
}
inline void DicomImage::set_allocated_osirixrpc_uid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.osirixrpc_uid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.osirixrpc_uid_.IsDefault()) {
          _impl_.osirixrpc_uid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomImage.osirixrpc_uid)
}

// -------------------------------------------------------------------

// DicomSeries

// string osirixrpc_uid = 1;
inline void DicomSeries::clear_osirixrpc_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.osirixrpc_uid_.ClearToEmpty();
}
inline const std::string& DicomSeries::osirixrpc_uid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomSeries.osirixrpc_uid)
  return _internal_osirixrpc_uid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DicomSeries::set_osirixrpc_uid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.osirixrpc_uid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomSeries.osirixrpc_uid)
}
inline std::string* DicomSeries::mutable_osirixrpc_uid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_osirixrpc_uid();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomSeries.osirixrpc_uid)
  return _s;
}
inline const std::string& DicomSeries::_internal_osirixrpc_uid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.osirixrpc_uid_.Get();
}
inline void DicomSeries::_internal_set_osirixrpc_uid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.osirixrpc_uid_.Set(value, GetArena());
}
inline std::string* DicomSeries::_internal_mutable_osirixrpc_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.osirixrpc_uid_.Mutable( GetArena());
}
inline std::string* DicomSeries::release_osirixrpc_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomSeries.osirixrpc_uid)
  return _impl_.osirixrpc_uid_.Release();
}
inline void DicomSeries::set_allocated_osirixrpc_uid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.osirixrpc_uid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.osirixrpc_uid_.IsDefault()) {
          _impl_.osirixrpc_uid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomSeries.osirixrpc_uid)
}

// -------------------------------------------------------------------

// DicomStudy

// string osirixrpc_uid = 1;
inline void DicomStudy::clear_osirixrpc_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.osirixrpc_uid_.ClearToEmpty();
}
inline const std::string& DicomStudy::osirixrpc_uid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudy.osirixrpc_uid)
  return _internal_osirixrpc_uid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DicomStudy::set_osirixrpc_uid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.osirixrpc_uid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomStudy.osirixrpc_uid)
}
inline std::string* DicomStudy::mutable_osirixrpc_uid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_osirixrpc_uid();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomStudy.osirixrpc_uid)
  return _s;
}
inline const std::string& DicomStudy::_internal_osirixrpc_uid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.osirixrpc_uid_.Get();
}
inline void DicomStudy::_internal_set_osirixrpc_uid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.osirixrpc_uid_.Set(value, GetArena());
}
inline std::string* DicomStudy::_internal_mutable_osirixrpc_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.osirixrpc_uid_.Mutable( GetArena());
}
inline std::string* DicomStudy::release_osirixrpc_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomStudy.osirixrpc_uid)
  return _impl_.osirixrpc_uid_.Release();
}
inline void DicomStudy::set_allocated_osirixrpc_uid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.osirixrpc_uid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.osirixrpc_uid_.IsDefault()) {
          _impl_.osirixrpc_uid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomStudy.osirixrpc_uid)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace osirixgrpc


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_types_2eproto_2epb_2eh
