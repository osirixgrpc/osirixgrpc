// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vrcontroller.proto
// Protobuf C++ Version: 4.25.0

#ifndef GOOGLE_PROTOBUF_INCLUDED_vrcontroller_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_vrcontroller_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "utilities.pb.h"
#include "types.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_vrcontroller_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_vrcontroller_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_vrcontroller_2eproto;
namespace osirixgrpc {
class VRControllerBlendingControllerResponse;
struct VRControllerBlendingControllerResponseDefaultTypeInternal;
extern VRControllerBlendingControllerResponseDefaultTypeInternal _VRControllerBlendingControllerResponse_default_instance_;
class VRControllerDisplayROIVolumeRequest;
struct VRControllerDisplayROIVolumeRequestDefaultTypeInternal;
extern VRControllerDisplayROIVolumeRequestDefaultTypeInternal _VRControllerDisplayROIVolumeRequest_default_instance_;
class VRControllerHideROIVolumeRequest;
struct VRControllerHideROIVolumeRequestDefaultTypeInternal;
extern VRControllerHideROIVolumeRequestDefaultTypeInternal _VRControllerHideROIVolumeRequest_default_instance_;
class VRControllerROIVolumesResponse;
struct VRControllerROIVolumesResponseDefaultTypeInternal;
extern VRControllerROIVolumesResponseDefaultTypeInternal _VRControllerROIVolumesResponse_default_instance_;
class VRControllerRenderingModeResponse;
struct VRControllerRenderingModeResponseDefaultTypeInternal;
extern VRControllerRenderingModeResponseDefaultTypeInternal _VRControllerRenderingModeResponse_default_instance_;
class VRControllerSetRenderingModeRequest;
struct VRControllerSetRenderingModeRequestDefaultTypeInternal;
extern VRControllerSetRenderingModeRequestDefaultTypeInternal _VRControllerSetRenderingModeRequest_default_instance_;
class VRControllerSetWLWWRequest;
struct VRControllerSetWLWWRequestDefaultTypeInternal;
extern VRControllerSetWLWWRequestDefaultTypeInternal _VRControllerSetWLWWRequest_default_instance_;
class VRControllerStyleResponse;
struct VRControllerStyleResponseDefaultTypeInternal;
extern VRControllerStyleResponseDefaultTypeInternal _VRControllerStyleResponse_default_instance_;
class VRControllerTitleResponse;
struct VRControllerTitleResponseDefaultTypeInternal;
extern VRControllerTitleResponseDefaultTypeInternal _VRControllerTitleResponse_default_instance_;
class VRControllerViewer2DResponse;
struct VRControllerViewer2DResponseDefaultTypeInternal;
extern VRControllerViewer2DResponseDefaultTypeInternal _VRControllerViewer2DResponse_default_instance_;
class VRControllerWLWWResponse;
struct VRControllerWLWWResponseDefaultTypeInternal;
extern VRControllerWLWWResponseDefaultTypeInternal _VRControllerWLWWResponse_default_instance_;
}  // namespace osirixgrpc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace osirixgrpc {

// ===================================================================


// -------------------------------------------------------------------

class VRControllerWLWWResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.VRControllerWLWWResponse) */ {
 public:
  inline VRControllerWLWWResponse() : VRControllerWLWWResponse(nullptr) {}
  ~VRControllerWLWWResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR VRControllerWLWWResponse(::google::protobuf::internal::ConstantInitialized);

  inline VRControllerWLWWResponse(const VRControllerWLWWResponse& from)
      : VRControllerWLWWResponse(nullptr, from) {}
  VRControllerWLWWResponse(VRControllerWLWWResponse&& from) noexcept
    : VRControllerWLWWResponse() {
    *this = ::std::move(from);
  }

  inline VRControllerWLWWResponse& operator=(const VRControllerWLWWResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline VRControllerWLWWResponse& operator=(VRControllerWLWWResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VRControllerWLWWResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const VRControllerWLWWResponse* internal_default_instance() {
    return reinterpret_cast<const VRControllerWLWWResponse*>(
               &_VRControllerWLWWResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(VRControllerWLWWResponse& a, VRControllerWLWWResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(VRControllerWLWWResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VRControllerWLWWResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VRControllerWLWWResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<VRControllerWLWWResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VRControllerWLWWResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const VRControllerWLWWResponse& from) {
    VRControllerWLWWResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(VRControllerWLWWResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.VRControllerWLWWResponse";
  }
  protected:
  explicit VRControllerWLWWResponse(::google::protobuf::Arena* arena);
  VRControllerWLWWResponse(::google::protobuf::Arena* arena, const VRControllerWLWWResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kWlFieldNumber = 2,
    kWwFieldNumber = 3,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::osirixgrpc::Status& status() const;
  PROTOBUF_NODISCARD ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* value);
  void unsafe_arena_set_allocated_status(::osirixgrpc::Status* value);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();

  public:
  // float wl = 2;
  void clear_wl() ;
  float wl() const;
  void set_wl(float value);

  private:
  float _internal_wl() const;
  void _internal_set_wl(float value);

  public:
  // float ww = 3;
  void clear_ww() ;
  float ww() const;
  void set_ww(float value);

  private:
  float _internal_ww() const;
  void _internal_set_ww(float value);

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.VRControllerWLWWResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::osirixgrpc::Status* status_;
    float wl_;
    float ww_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_vrcontroller_2eproto;
};// -------------------------------------------------------------------

class VRControllerViewer2DResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.VRControllerViewer2DResponse) */ {
 public:
  inline VRControllerViewer2DResponse() : VRControllerViewer2DResponse(nullptr) {}
  ~VRControllerViewer2DResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR VRControllerViewer2DResponse(::google::protobuf::internal::ConstantInitialized);

  inline VRControllerViewer2DResponse(const VRControllerViewer2DResponse& from)
      : VRControllerViewer2DResponse(nullptr, from) {}
  VRControllerViewer2DResponse(VRControllerViewer2DResponse&& from) noexcept
    : VRControllerViewer2DResponse() {
    *this = ::std::move(from);
  }

  inline VRControllerViewer2DResponse& operator=(const VRControllerViewer2DResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline VRControllerViewer2DResponse& operator=(VRControllerViewer2DResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VRControllerViewer2DResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const VRControllerViewer2DResponse* internal_default_instance() {
    return reinterpret_cast<const VRControllerViewer2DResponse*>(
               &_VRControllerViewer2DResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(VRControllerViewer2DResponse& a, VRControllerViewer2DResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(VRControllerViewer2DResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VRControllerViewer2DResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VRControllerViewer2DResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<VRControllerViewer2DResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VRControllerViewer2DResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const VRControllerViewer2DResponse& from) {
    VRControllerViewer2DResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(VRControllerViewer2DResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.VRControllerViewer2DResponse";
  }
  protected:
  explicit VRControllerViewer2DResponse(::google::protobuf::Arena* arena);
  VRControllerViewer2DResponse(::google::protobuf::Arena* arena, const VRControllerViewer2DResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kViewerControllerFieldNumber = 2,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::osirixgrpc::Status& status() const;
  PROTOBUF_NODISCARD ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* value);
  void unsafe_arena_set_allocated_status(::osirixgrpc::Status* value);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();

  public:
  // .osirixgrpc.ViewerController viewer_controller = 2;
  bool has_viewer_controller() const;
  void clear_viewer_controller() ;
  const ::osirixgrpc::ViewerController& viewer_controller() const;
  PROTOBUF_NODISCARD ::osirixgrpc::ViewerController* release_viewer_controller();
  ::osirixgrpc::ViewerController* mutable_viewer_controller();
  void set_allocated_viewer_controller(::osirixgrpc::ViewerController* value);
  void unsafe_arena_set_allocated_viewer_controller(::osirixgrpc::ViewerController* value);
  ::osirixgrpc::ViewerController* unsafe_arena_release_viewer_controller();

  private:
  const ::osirixgrpc::ViewerController& _internal_viewer_controller() const;
  ::osirixgrpc::ViewerController* _internal_mutable_viewer_controller();

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.VRControllerViewer2DResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::osirixgrpc::Status* status_;
    ::osirixgrpc::ViewerController* viewer_controller_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_vrcontroller_2eproto;
};// -------------------------------------------------------------------

class VRControllerTitleResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.VRControllerTitleResponse) */ {
 public:
  inline VRControllerTitleResponse() : VRControllerTitleResponse(nullptr) {}
  ~VRControllerTitleResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR VRControllerTitleResponse(::google::protobuf::internal::ConstantInitialized);

  inline VRControllerTitleResponse(const VRControllerTitleResponse& from)
      : VRControllerTitleResponse(nullptr, from) {}
  VRControllerTitleResponse(VRControllerTitleResponse&& from) noexcept
    : VRControllerTitleResponse() {
    *this = ::std::move(from);
  }

  inline VRControllerTitleResponse& operator=(const VRControllerTitleResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline VRControllerTitleResponse& operator=(VRControllerTitleResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VRControllerTitleResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const VRControllerTitleResponse* internal_default_instance() {
    return reinterpret_cast<const VRControllerTitleResponse*>(
               &_VRControllerTitleResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(VRControllerTitleResponse& a, VRControllerTitleResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(VRControllerTitleResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VRControllerTitleResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VRControllerTitleResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<VRControllerTitleResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VRControllerTitleResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const VRControllerTitleResponse& from) {
    VRControllerTitleResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(VRControllerTitleResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.VRControllerTitleResponse";
  }
  protected:
  explicit VRControllerTitleResponse(::google::protobuf::Arena* arena);
  VRControllerTitleResponse(::google::protobuf::Arena* arena, const VRControllerTitleResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTitleFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string title = 2;
  void clear_title() ;
  const std::string& title() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_title(Arg_&& arg, Args_... args);
  std::string* mutable_title();
  PROTOBUF_NODISCARD std::string* release_title();
  void set_allocated_title(std::string* value);

  private:
  const std::string& _internal_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_title(
      const std::string& value);
  std::string* _internal_mutable_title();

  public:
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::osirixgrpc::Status& status() const;
  PROTOBUF_NODISCARD ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* value);
  void unsafe_arena_set_allocated_status(::osirixgrpc::Status* value);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.VRControllerTitleResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      50, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr title_;
    ::osirixgrpc::Status* status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_vrcontroller_2eproto;
};// -------------------------------------------------------------------

class VRControllerStyleResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.VRControllerStyleResponse) */ {
 public:
  inline VRControllerStyleResponse() : VRControllerStyleResponse(nullptr) {}
  ~VRControllerStyleResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR VRControllerStyleResponse(::google::protobuf::internal::ConstantInitialized);

  inline VRControllerStyleResponse(const VRControllerStyleResponse& from)
      : VRControllerStyleResponse(nullptr, from) {}
  VRControllerStyleResponse(VRControllerStyleResponse&& from) noexcept
    : VRControllerStyleResponse() {
    *this = ::std::move(from);
  }

  inline VRControllerStyleResponse& operator=(const VRControllerStyleResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline VRControllerStyleResponse& operator=(VRControllerStyleResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VRControllerStyleResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const VRControllerStyleResponse* internal_default_instance() {
    return reinterpret_cast<const VRControllerStyleResponse*>(
               &_VRControllerStyleResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(VRControllerStyleResponse& a, VRControllerStyleResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(VRControllerStyleResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VRControllerStyleResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VRControllerStyleResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<VRControllerStyleResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VRControllerStyleResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const VRControllerStyleResponse& from) {
    VRControllerStyleResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(VRControllerStyleResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.VRControllerStyleResponse";
  }
  protected:
  explicit VRControllerStyleResponse(::google::protobuf::Arena* arena);
  VRControllerStyleResponse(::google::protobuf::Arena* arena, const VRControllerStyleResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStyleFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string style = 2;
  void clear_style() ;
  const std::string& style() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_style(Arg_&& arg, Args_... args);
  std::string* mutable_style();
  PROTOBUF_NODISCARD std::string* release_style();
  void set_allocated_style(std::string* value);

  private:
  const std::string& _internal_style() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_style(
      const std::string& value);
  std::string* _internal_mutable_style();

  public:
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::osirixgrpc::Status& status() const;
  PROTOBUF_NODISCARD ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* value);
  void unsafe_arena_set_allocated_status(::osirixgrpc::Status* value);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.VRControllerStyleResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      50, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr style_;
    ::osirixgrpc::Status* status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_vrcontroller_2eproto;
};// -------------------------------------------------------------------

class VRControllerSetWLWWRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.VRControllerSetWLWWRequest) */ {
 public:
  inline VRControllerSetWLWWRequest() : VRControllerSetWLWWRequest(nullptr) {}
  ~VRControllerSetWLWWRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR VRControllerSetWLWWRequest(::google::protobuf::internal::ConstantInitialized);

  inline VRControllerSetWLWWRequest(const VRControllerSetWLWWRequest& from)
      : VRControllerSetWLWWRequest(nullptr, from) {}
  VRControllerSetWLWWRequest(VRControllerSetWLWWRequest&& from) noexcept
    : VRControllerSetWLWWRequest() {
    *this = ::std::move(from);
  }

  inline VRControllerSetWLWWRequest& operator=(const VRControllerSetWLWWRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline VRControllerSetWLWWRequest& operator=(VRControllerSetWLWWRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VRControllerSetWLWWRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const VRControllerSetWLWWRequest* internal_default_instance() {
    return reinterpret_cast<const VRControllerSetWLWWRequest*>(
               &_VRControllerSetWLWWRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(VRControllerSetWLWWRequest& a, VRControllerSetWLWWRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(VRControllerSetWLWWRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VRControllerSetWLWWRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VRControllerSetWLWWRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<VRControllerSetWLWWRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VRControllerSetWLWWRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const VRControllerSetWLWWRequest& from) {
    VRControllerSetWLWWRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(VRControllerSetWLWWRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.VRControllerSetWLWWRequest";
  }
  protected:
  explicit VRControllerSetWLWWRequest(::google::protobuf::Arena* arena);
  VRControllerSetWLWWRequest(::google::protobuf::Arena* arena, const VRControllerSetWLWWRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVrControllerFieldNumber = 1,
    kWlFieldNumber = 2,
    kWwFieldNumber = 3,
  };
  // .osirixgrpc.VRController vr_controller = 1;
  bool has_vr_controller() const;
  void clear_vr_controller() ;
  const ::osirixgrpc::VRController& vr_controller() const;
  PROTOBUF_NODISCARD ::osirixgrpc::VRController* release_vr_controller();
  ::osirixgrpc::VRController* mutable_vr_controller();
  void set_allocated_vr_controller(::osirixgrpc::VRController* value);
  void unsafe_arena_set_allocated_vr_controller(::osirixgrpc::VRController* value);
  ::osirixgrpc::VRController* unsafe_arena_release_vr_controller();

  private:
  const ::osirixgrpc::VRController& _internal_vr_controller() const;
  ::osirixgrpc::VRController* _internal_mutable_vr_controller();

  public:
  // float wl = 2;
  void clear_wl() ;
  float wl() const;
  void set_wl(float value);

  private:
  float _internal_wl() const;
  void _internal_set_wl(float value);

  public:
  // float ww = 3;
  void clear_ww() ;
  float ww() const;
  void set_ww(float value);

  private:
  float _internal_ww() const;
  void _internal_set_ww(float value);

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.VRControllerSetWLWWRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::osirixgrpc::VRController* vr_controller_;
    float wl_;
    float ww_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_vrcontroller_2eproto;
};// -------------------------------------------------------------------

class VRControllerSetRenderingModeRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.VRControllerSetRenderingModeRequest) */ {
 public:
  inline VRControllerSetRenderingModeRequest() : VRControllerSetRenderingModeRequest(nullptr) {}
  ~VRControllerSetRenderingModeRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR VRControllerSetRenderingModeRequest(::google::protobuf::internal::ConstantInitialized);

  inline VRControllerSetRenderingModeRequest(const VRControllerSetRenderingModeRequest& from)
      : VRControllerSetRenderingModeRequest(nullptr, from) {}
  VRControllerSetRenderingModeRequest(VRControllerSetRenderingModeRequest&& from) noexcept
    : VRControllerSetRenderingModeRequest() {
    *this = ::std::move(from);
  }

  inline VRControllerSetRenderingModeRequest& operator=(const VRControllerSetRenderingModeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline VRControllerSetRenderingModeRequest& operator=(VRControllerSetRenderingModeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VRControllerSetRenderingModeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const VRControllerSetRenderingModeRequest* internal_default_instance() {
    return reinterpret_cast<const VRControllerSetRenderingModeRequest*>(
               &_VRControllerSetRenderingModeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(VRControllerSetRenderingModeRequest& a, VRControllerSetRenderingModeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(VRControllerSetRenderingModeRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VRControllerSetRenderingModeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VRControllerSetRenderingModeRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<VRControllerSetRenderingModeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VRControllerSetRenderingModeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const VRControllerSetRenderingModeRequest& from) {
    VRControllerSetRenderingModeRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(VRControllerSetRenderingModeRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.VRControllerSetRenderingModeRequest";
  }
  protected:
  explicit VRControllerSetRenderingModeRequest(::google::protobuf::Arena* arena);
  VRControllerSetRenderingModeRequest(::google::protobuf::Arena* arena, const VRControllerSetRenderingModeRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRenderingModeFieldNumber = 2,
    kVrControllerFieldNumber = 1,
  };
  // string rendering_mode = 2;
  void clear_rendering_mode() ;
  const std::string& rendering_mode() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_rendering_mode(Arg_&& arg, Args_... args);
  std::string* mutable_rendering_mode();
  PROTOBUF_NODISCARD std::string* release_rendering_mode();
  void set_allocated_rendering_mode(std::string* value);

  private:
  const std::string& _internal_rendering_mode() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_rendering_mode(
      const std::string& value);
  std::string* _internal_mutable_rendering_mode();

  public:
  // .osirixgrpc.VRController vr_controller = 1;
  bool has_vr_controller() const;
  void clear_vr_controller() ;
  const ::osirixgrpc::VRController& vr_controller() const;
  PROTOBUF_NODISCARD ::osirixgrpc::VRController* release_vr_controller();
  ::osirixgrpc::VRController* mutable_vr_controller();
  void set_allocated_vr_controller(::osirixgrpc::VRController* value);
  void unsafe_arena_set_allocated_vr_controller(::osirixgrpc::VRController* value);
  ::osirixgrpc::VRController* unsafe_arena_release_vr_controller();

  private:
  const ::osirixgrpc::VRController& _internal_vr_controller() const;
  ::osirixgrpc::VRController* _internal_mutable_vr_controller();

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.VRControllerSetRenderingModeRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      69, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr rendering_mode_;
    ::osirixgrpc::VRController* vr_controller_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_vrcontroller_2eproto;
};// -------------------------------------------------------------------

class VRControllerRenderingModeResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.VRControllerRenderingModeResponse) */ {
 public:
  inline VRControllerRenderingModeResponse() : VRControllerRenderingModeResponse(nullptr) {}
  ~VRControllerRenderingModeResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR VRControllerRenderingModeResponse(::google::protobuf::internal::ConstantInitialized);

  inline VRControllerRenderingModeResponse(const VRControllerRenderingModeResponse& from)
      : VRControllerRenderingModeResponse(nullptr, from) {}
  VRControllerRenderingModeResponse(VRControllerRenderingModeResponse&& from) noexcept
    : VRControllerRenderingModeResponse() {
    *this = ::std::move(from);
  }

  inline VRControllerRenderingModeResponse& operator=(const VRControllerRenderingModeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline VRControllerRenderingModeResponse& operator=(VRControllerRenderingModeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VRControllerRenderingModeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const VRControllerRenderingModeResponse* internal_default_instance() {
    return reinterpret_cast<const VRControllerRenderingModeResponse*>(
               &_VRControllerRenderingModeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(VRControllerRenderingModeResponse& a, VRControllerRenderingModeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(VRControllerRenderingModeResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VRControllerRenderingModeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VRControllerRenderingModeResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<VRControllerRenderingModeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VRControllerRenderingModeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const VRControllerRenderingModeResponse& from) {
    VRControllerRenderingModeResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(VRControllerRenderingModeResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.VRControllerRenderingModeResponse";
  }
  protected:
  explicit VRControllerRenderingModeResponse(::google::protobuf::Arena* arena);
  VRControllerRenderingModeResponse(::google::protobuf::Arena* arena, const VRControllerRenderingModeResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRenderingModeFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string rendering_mode = 2;
  void clear_rendering_mode() ;
  const std::string& rendering_mode() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_rendering_mode(Arg_&& arg, Args_... args);
  std::string* mutable_rendering_mode();
  PROTOBUF_NODISCARD std::string* release_rendering_mode();
  void set_allocated_rendering_mode(std::string* value);

  private:
  const std::string& _internal_rendering_mode() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_rendering_mode(
      const std::string& value);
  std::string* _internal_mutable_rendering_mode();

  public:
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::osirixgrpc::Status& status() const;
  PROTOBUF_NODISCARD ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* value);
  void unsafe_arena_set_allocated_status(::osirixgrpc::Status* value);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.VRControllerRenderingModeResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      67, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr rendering_mode_;
    ::osirixgrpc::Status* status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_vrcontroller_2eproto;
};// -------------------------------------------------------------------

class VRControllerROIVolumesResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.VRControllerROIVolumesResponse) */ {
 public:
  inline VRControllerROIVolumesResponse() : VRControllerROIVolumesResponse(nullptr) {}
  ~VRControllerROIVolumesResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR VRControllerROIVolumesResponse(::google::protobuf::internal::ConstantInitialized);

  inline VRControllerROIVolumesResponse(const VRControllerROIVolumesResponse& from)
      : VRControllerROIVolumesResponse(nullptr, from) {}
  VRControllerROIVolumesResponse(VRControllerROIVolumesResponse&& from) noexcept
    : VRControllerROIVolumesResponse() {
    *this = ::std::move(from);
  }

  inline VRControllerROIVolumesResponse& operator=(const VRControllerROIVolumesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline VRControllerROIVolumesResponse& operator=(VRControllerROIVolumesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VRControllerROIVolumesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const VRControllerROIVolumesResponse* internal_default_instance() {
    return reinterpret_cast<const VRControllerROIVolumesResponse*>(
               &_VRControllerROIVolumesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(VRControllerROIVolumesResponse& a, VRControllerROIVolumesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(VRControllerROIVolumesResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VRControllerROIVolumesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VRControllerROIVolumesResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<VRControllerROIVolumesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VRControllerROIVolumesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const VRControllerROIVolumesResponse& from) {
    VRControllerROIVolumesResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(VRControllerROIVolumesResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.VRControllerROIVolumesResponse";
  }
  protected:
  explicit VRControllerROIVolumesResponse(::google::protobuf::Arena* arena);
  VRControllerROIVolumesResponse(::google::protobuf::Arena* arena, const VRControllerROIVolumesResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoiVolumesFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // repeated .osirixgrpc.ROIVolume roi_volumes = 2;
  int roi_volumes_size() const;
  private:
  int _internal_roi_volumes_size() const;

  public:
  void clear_roi_volumes() ;
  ::osirixgrpc::ROIVolume* mutable_roi_volumes(int index);
  ::google::protobuf::RepeatedPtrField< ::osirixgrpc::ROIVolume >*
      mutable_roi_volumes();
  private:
  const ::google::protobuf::RepeatedPtrField<::osirixgrpc::ROIVolume>& _internal_roi_volumes() const;
  ::google::protobuf::RepeatedPtrField<::osirixgrpc::ROIVolume>* _internal_mutable_roi_volumes();
  public:
  const ::osirixgrpc::ROIVolume& roi_volumes(int index) const;
  ::osirixgrpc::ROIVolume* add_roi_volumes();
  const ::google::protobuf::RepeatedPtrField< ::osirixgrpc::ROIVolume >&
      roi_volumes() const;
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::osirixgrpc::Status& status() const;
  PROTOBUF_NODISCARD ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* value);
  void unsafe_arena_set_allocated_status(::osirixgrpc::Status* value);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.VRControllerROIVolumesResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::osirixgrpc::ROIVolume > roi_volumes_;
    ::osirixgrpc::Status* status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_vrcontroller_2eproto;
};// -------------------------------------------------------------------

class VRControllerHideROIVolumeRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.VRControllerHideROIVolumeRequest) */ {
 public:
  inline VRControllerHideROIVolumeRequest() : VRControllerHideROIVolumeRequest(nullptr) {}
  ~VRControllerHideROIVolumeRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR VRControllerHideROIVolumeRequest(::google::protobuf::internal::ConstantInitialized);

  inline VRControllerHideROIVolumeRequest(const VRControllerHideROIVolumeRequest& from)
      : VRControllerHideROIVolumeRequest(nullptr, from) {}
  VRControllerHideROIVolumeRequest(VRControllerHideROIVolumeRequest&& from) noexcept
    : VRControllerHideROIVolumeRequest() {
    *this = ::std::move(from);
  }

  inline VRControllerHideROIVolumeRequest& operator=(const VRControllerHideROIVolumeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline VRControllerHideROIVolumeRequest& operator=(VRControllerHideROIVolumeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VRControllerHideROIVolumeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const VRControllerHideROIVolumeRequest* internal_default_instance() {
    return reinterpret_cast<const VRControllerHideROIVolumeRequest*>(
               &_VRControllerHideROIVolumeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(VRControllerHideROIVolumeRequest& a, VRControllerHideROIVolumeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(VRControllerHideROIVolumeRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VRControllerHideROIVolumeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VRControllerHideROIVolumeRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<VRControllerHideROIVolumeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VRControllerHideROIVolumeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const VRControllerHideROIVolumeRequest& from) {
    VRControllerHideROIVolumeRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(VRControllerHideROIVolumeRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.VRControllerHideROIVolumeRequest";
  }
  protected:
  explicit VRControllerHideROIVolumeRequest(::google::protobuf::Arena* arena);
  VRControllerHideROIVolumeRequest(::google::protobuf::Arena* arena, const VRControllerHideROIVolumeRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVrControllerFieldNumber = 1,
    kRoiVolumeFieldNumber = 2,
  };
  // .osirixgrpc.VRController vr_controller = 1;
  bool has_vr_controller() const;
  void clear_vr_controller() ;
  const ::osirixgrpc::VRController& vr_controller() const;
  PROTOBUF_NODISCARD ::osirixgrpc::VRController* release_vr_controller();
  ::osirixgrpc::VRController* mutable_vr_controller();
  void set_allocated_vr_controller(::osirixgrpc::VRController* value);
  void unsafe_arena_set_allocated_vr_controller(::osirixgrpc::VRController* value);
  ::osirixgrpc::VRController* unsafe_arena_release_vr_controller();

  private:
  const ::osirixgrpc::VRController& _internal_vr_controller() const;
  ::osirixgrpc::VRController* _internal_mutable_vr_controller();

  public:
  // .osirixgrpc.ROIVolume roi_volume = 2;
  bool has_roi_volume() const;
  void clear_roi_volume() ;
  const ::osirixgrpc::ROIVolume& roi_volume() const;
  PROTOBUF_NODISCARD ::osirixgrpc::ROIVolume* release_roi_volume();
  ::osirixgrpc::ROIVolume* mutable_roi_volume();
  void set_allocated_roi_volume(::osirixgrpc::ROIVolume* value);
  void unsafe_arena_set_allocated_roi_volume(::osirixgrpc::ROIVolume* value);
  ::osirixgrpc::ROIVolume* unsafe_arena_release_roi_volume();

  private:
  const ::osirixgrpc::ROIVolume& _internal_roi_volume() const;
  ::osirixgrpc::ROIVolume* _internal_mutable_roi_volume();

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.VRControllerHideROIVolumeRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::osirixgrpc::VRController* vr_controller_;
    ::osirixgrpc::ROIVolume* roi_volume_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_vrcontroller_2eproto;
};// -------------------------------------------------------------------

class VRControllerDisplayROIVolumeRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.VRControllerDisplayROIVolumeRequest) */ {
 public:
  inline VRControllerDisplayROIVolumeRequest() : VRControllerDisplayROIVolumeRequest(nullptr) {}
  ~VRControllerDisplayROIVolumeRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR VRControllerDisplayROIVolumeRequest(::google::protobuf::internal::ConstantInitialized);

  inline VRControllerDisplayROIVolumeRequest(const VRControllerDisplayROIVolumeRequest& from)
      : VRControllerDisplayROIVolumeRequest(nullptr, from) {}
  VRControllerDisplayROIVolumeRequest(VRControllerDisplayROIVolumeRequest&& from) noexcept
    : VRControllerDisplayROIVolumeRequest() {
    *this = ::std::move(from);
  }

  inline VRControllerDisplayROIVolumeRequest& operator=(const VRControllerDisplayROIVolumeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline VRControllerDisplayROIVolumeRequest& operator=(VRControllerDisplayROIVolumeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VRControllerDisplayROIVolumeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const VRControllerDisplayROIVolumeRequest* internal_default_instance() {
    return reinterpret_cast<const VRControllerDisplayROIVolumeRequest*>(
               &_VRControllerDisplayROIVolumeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(VRControllerDisplayROIVolumeRequest& a, VRControllerDisplayROIVolumeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(VRControllerDisplayROIVolumeRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VRControllerDisplayROIVolumeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VRControllerDisplayROIVolumeRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<VRControllerDisplayROIVolumeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VRControllerDisplayROIVolumeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const VRControllerDisplayROIVolumeRequest& from) {
    VRControllerDisplayROIVolumeRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(VRControllerDisplayROIVolumeRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.VRControllerDisplayROIVolumeRequest";
  }
  protected:
  explicit VRControllerDisplayROIVolumeRequest(::google::protobuf::Arena* arena);
  VRControllerDisplayROIVolumeRequest(::google::protobuf::Arena* arena, const VRControllerDisplayROIVolumeRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVrControllerFieldNumber = 1,
    kRoiVolumeFieldNumber = 2,
  };
  // .osirixgrpc.VRController vr_controller = 1;
  bool has_vr_controller() const;
  void clear_vr_controller() ;
  const ::osirixgrpc::VRController& vr_controller() const;
  PROTOBUF_NODISCARD ::osirixgrpc::VRController* release_vr_controller();
  ::osirixgrpc::VRController* mutable_vr_controller();
  void set_allocated_vr_controller(::osirixgrpc::VRController* value);
  void unsafe_arena_set_allocated_vr_controller(::osirixgrpc::VRController* value);
  ::osirixgrpc::VRController* unsafe_arena_release_vr_controller();

  private:
  const ::osirixgrpc::VRController& _internal_vr_controller() const;
  ::osirixgrpc::VRController* _internal_mutable_vr_controller();

  public:
  // .osirixgrpc.ROIVolume roi_volume = 2;
  bool has_roi_volume() const;
  void clear_roi_volume() ;
  const ::osirixgrpc::ROIVolume& roi_volume() const;
  PROTOBUF_NODISCARD ::osirixgrpc::ROIVolume* release_roi_volume();
  ::osirixgrpc::ROIVolume* mutable_roi_volume();
  void set_allocated_roi_volume(::osirixgrpc::ROIVolume* value);
  void unsafe_arena_set_allocated_roi_volume(::osirixgrpc::ROIVolume* value);
  ::osirixgrpc::ROIVolume* unsafe_arena_release_roi_volume();

  private:
  const ::osirixgrpc::ROIVolume& _internal_roi_volume() const;
  ::osirixgrpc::ROIVolume* _internal_mutable_roi_volume();

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.VRControllerDisplayROIVolumeRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::osirixgrpc::VRController* vr_controller_;
    ::osirixgrpc::ROIVolume* roi_volume_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_vrcontroller_2eproto;
};// -------------------------------------------------------------------

class VRControllerBlendingControllerResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.VRControllerBlendingControllerResponse) */ {
 public:
  inline VRControllerBlendingControllerResponse() : VRControllerBlendingControllerResponse(nullptr) {}
  ~VRControllerBlendingControllerResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR VRControllerBlendingControllerResponse(::google::protobuf::internal::ConstantInitialized);

  inline VRControllerBlendingControllerResponse(const VRControllerBlendingControllerResponse& from)
      : VRControllerBlendingControllerResponse(nullptr, from) {}
  VRControllerBlendingControllerResponse(VRControllerBlendingControllerResponse&& from) noexcept
    : VRControllerBlendingControllerResponse() {
    *this = ::std::move(from);
  }

  inline VRControllerBlendingControllerResponse& operator=(const VRControllerBlendingControllerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline VRControllerBlendingControllerResponse& operator=(VRControllerBlendingControllerResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VRControllerBlendingControllerResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const VRControllerBlendingControllerResponse* internal_default_instance() {
    return reinterpret_cast<const VRControllerBlendingControllerResponse*>(
               &_VRControllerBlendingControllerResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(VRControllerBlendingControllerResponse& a, VRControllerBlendingControllerResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(VRControllerBlendingControllerResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VRControllerBlendingControllerResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VRControllerBlendingControllerResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<VRControllerBlendingControllerResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VRControllerBlendingControllerResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const VRControllerBlendingControllerResponse& from) {
    VRControllerBlendingControllerResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(VRControllerBlendingControllerResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.VRControllerBlendingControllerResponse";
  }
  protected:
  explicit VRControllerBlendingControllerResponse(::google::protobuf::Arena* arena);
  VRControllerBlendingControllerResponse(::google::protobuf::Arena* arena, const VRControllerBlendingControllerResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kViewerControllerFieldNumber = 2,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::osirixgrpc::Status& status() const;
  PROTOBUF_NODISCARD ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* value);
  void unsafe_arena_set_allocated_status(::osirixgrpc::Status* value);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();

  public:
  // .osirixgrpc.ViewerController viewer_controller = 2;
  bool has_viewer_controller() const;
  void clear_viewer_controller() ;
  const ::osirixgrpc::ViewerController& viewer_controller() const;
  PROTOBUF_NODISCARD ::osirixgrpc::ViewerController* release_viewer_controller();
  ::osirixgrpc::ViewerController* mutable_viewer_controller();
  void set_allocated_viewer_controller(::osirixgrpc::ViewerController* value);
  void unsafe_arena_set_allocated_viewer_controller(::osirixgrpc::ViewerController* value);
  ::osirixgrpc::ViewerController* unsafe_arena_release_viewer_controller();

  private:
  const ::osirixgrpc::ViewerController& _internal_viewer_controller() const;
  ::osirixgrpc::ViewerController* _internal_mutable_viewer_controller();

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.VRControllerBlendingControllerResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::osirixgrpc::Status* status_;
    ::osirixgrpc::ViewerController* viewer_controller_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_vrcontroller_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// VRControllerViewer2DResponse

// .osirixgrpc.Status status = 1;
inline bool VRControllerViewer2DResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::osirixgrpc::Status& VRControllerViewer2DResponse::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& VRControllerViewer2DResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.VRControllerViewer2DResponse.status)
  return _internal_status();
}
inline void VRControllerViewer2DResponse::unsafe_arena_set_allocated_status(::osirixgrpc::Status* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.VRControllerViewer2DResponse.status)
}
inline ::osirixgrpc::Status* VRControllerViewer2DResponse::release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* released = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::Status* VRControllerViewer2DResponse::unsafe_arena_release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.VRControllerViewer2DResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* VRControllerViewer2DResponse::_internal_mutable_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(p);
  }
  return _impl_.status_;
}
inline ::osirixgrpc::Status* VRControllerViewer2DResponse::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.VRControllerViewer2DResponse.status)
  return _msg;
}
inline void VRControllerViewer2DResponse::set_allocated_status(::osirixgrpc::Status* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.VRControllerViewer2DResponse.status)
}

// .osirixgrpc.ViewerController viewer_controller = 2;
inline bool VRControllerViewer2DResponse::has_viewer_controller() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.viewer_controller_ != nullptr);
  return value;
}
inline const ::osirixgrpc::ViewerController& VRControllerViewer2DResponse::_internal_viewer_controller() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::ViewerController* p = _impl_.viewer_controller_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::ViewerController&>(::osirixgrpc::_ViewerController_default_instance_);
}
inline const ::osirixgrpc::ViewerController& VRControllerViewer2DResponse::viewer_controller() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.VRControllerViewer2DResponse.viewer_controller)
  return _internal_viewer_controller();
}
inline void VRControllerViewer2DResponse::unsafe_arena_set_allocated_viewer_controller(::osirixgrpc::ViewerController* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.viewer_controller_);
  }
  _impl_.viewer_controller_ = reinterpret_cast<::osirixgrpc::ViewerController*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.VRControllerViewer2DResponse.viewer_controller)
}
inline ::osirixgrpc::ViewerController* VRControllerViewer2DResponse::release_viewer_controller() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::osirixgrpc::ViewerController* released = _impl_.viewer_controller_;
  _impl_.viewer_controller_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::ViewerController* VRControllerViewer2DResponse::unsafe_arena_release_viewer_controller() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.VRControllerViewer2DResponse.viewer_controller)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::osirixgrpc::ViewerController* temp = _impl_.viewer_controller_;
  _impl_.viewer_controller_ = nullptr;
  return temp;
}
inline ::osirixgrpc::ViewerController* VRControllerViewer2DResponse::_internal_mutable_viewer_controller() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.viewer_controller_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::ViewerController>(GetArena());
    _impl_.viewer_controller_ = reinterpret_cast<::osirixgrpc::ViewerController*>(p);
  }
  return _impl_.viewer_controller_;
}
inline ::osirixgrpc::ViewerController* VRControllerViewer2DResponse::mutable_viewer_controller() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::ViewerController* _msg = _internal_mutable_viewer_controller();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.VRControllerViewer2DResponse.viewer_controller)
  return _msg;
}
inline void VRControllerViewer2DResponse::set_allocated_viewer_controller(::osirixgrpc::ViewerController* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.viewer_controller_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.viewer_controller_ = reinterpret_cast<::osirixgrpc::ViewerController*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.VRControllerViewer2DResponse.viewer_controller)
}

// -------------------------------------------------------------------

// VRControllerBlendingControllerResponse

// .osirixgrpc.Status status = 1;
inline bool VRControllerBlendingControllerResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::osirixgrpc::Status& VRControllerBlendingControllerResponse::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& VRControllerBlendingControllerResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.VRControllerBlendingControllerResponse.status)
  return _internal_status();
}
inline void VRControllerBlendingControllerResponse::unsafe_arena_set_allocated_status(::osirixgrpc::Status* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.VRControllerBlendingControllerResponse.status)
}
inline ::osirixgrpc::Status* VRControllerBlendingControllerResponse::release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* released = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::Status* VRControllerBlendingControllerResponse::unsafe_arena_release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.VRControllerBlendingControllerResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* VRControllerBlendingControllerResponse::_internal_mutable_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(p);
  }
  return _impl_.status_;
}
inline ::osirixgrpc::Status* VRControllerBlendingControllerResponse::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.VRControllerBlendingControllerResponse.status)
  return _msg;
}
inline void VRControllerBlendingControllerResponse::set_allocated_status(::osirixgrpc::Status* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.VRControllerBlendingControllerResponse.status)
}

// .osirixgrpc.ViewerController viewer_controller = 2;
inline bool VRControllerBlendingControllerResponse::has_viewer_controller() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.viewer_controller_ != nullptr);
  return value;
}
inline const ::osirixgrpc::ViewerController& VRControllerBlendingControllerResponse::_internal_viewer_controller() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::ViewerController* p = _impl_.viewer_controller_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::ViewerController&>(::osirixgrpc::_ViewerController_default_instance_);
}
inline const ::osirixgrpc::ViewerController& VRControllerBlendingControllerResponse::viewer_controller() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.VRControllerBlendingControllerResponse.viewer_controller)
  return _internal_viewer_controller();
}
inline void VRControllerBlendingControllerResponse::unsafe_arena_set_allocated_viewer_controller(::osirixgrpc::ViewerController* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.viewer_controller_);
  }
  _impl_.viewer_controller_ = reinterpret_cast<::osirixgrpc::ViewerController*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.VRControllerBlendingControllerResponse.viewer_controller)
}
inline ::osirixgrpc::ViewerController* VRControllerBlendingControllerResponse::release_viewer_controller() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::osirixgrpc::ViewerController* released = _impl_.viewer_controller_;
  _impl_.viewer_controller_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::ViewerController* VRControllerBlendingControllerResponse::unsafe_arena_release_viewer_controller() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.VRControllerBlendingControllerResponse.viewer_controller)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::osirixgrpc::ViewerController* temp = _impl_.viewer_controller_;
  _impl_.viewer_controller_ = nullptr;
  return temp;
}
inline ::osirixgrpc::ViewerController* VRControllerBlendingControllerResponse::_internal_mutable_viewer_controller() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.viewer_controller_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::ViewerController>(GetArena());
    _impl_.viewer_controller_ = reinterpret_cast<::osirixgrpc::ViewerController*>(p);
  }
  return _impl_.viewer_controller_;
}
inline ::osirixgrpc::ViewerController* VRControllerBlendingControllerResponse::mutable_viewer_controller() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::ViewerController* _msg = _internal_mutable_viewer_controller();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.VRControllerBlendingControllerResponse.viewer_controller)
  return _msg;
}
inline void VRControllerBlendingControllerResponse::set_allocated_viewer_controller(::osirixgrpc::ViewerController* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.viewer_controller_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.viewer_controller_ = reinterpret_cast<::osirixgrpc::ViewerController*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.VRControllerBlendingControllerResponse.viewer_controller)
}

// -------------------------------------------------------------------

// VRControllerRenderingModeResponse

// .osirixgrpc.Status status = 1;
inline bool VRControllerRenderingModeResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::osirixgrpc::Status& VRControllerRenderingModeResponse::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& VRControllerRenderingModeResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.VRControllerRenderingModeResponse.status)
  return _internal_status();
}
inline void VRControllerRenderingModeResponse::unsafe_arena_set_allocated_status(::osirixgrpc::Status* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.VRControllerRenderingModeResponse.status)
}
inline ::osirixgrpc::Status* VRControllerRenderingModeResponse::release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* released = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::Status* VRControllerRenderingModeResponse::unsafe_arena_release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.VRControllerRenderingModeResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* VRControllerRenderingModeResponse::_internal_mutable_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(p);
  }
  return _impl_.status_;
}
inline ::osirixgrpc::Status* VRControllerRenderingModeResponse::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.VRControllerRenderingModeResponse.status)
  return _msg;
}
inline void VRControllerRenderingModeResponse::set_allocated_status(::osirixgrpc::Status* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.VRControllerRenderingModeResponse.status)
}

// string rendering_mode = 2;
inline void VRControllerRenderingModeResponse::clear_rendering_mode() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rendering_mode_.ClearToEmpty();
}
inline const std::string& VRControllerRenderingModeResponse::rendering_mode() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.VRControllerRenderingModeResponse.rendering_mode)
  return _internal_rendering_mode();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void VRControllerRenderingModeResponse::set_rendering_mode(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rendering_mode_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:osirixgrpc.VRControllerRenderingModeResponse.rendering_mode)
}
inline std::string* VRControllerRenderingModeResponse::mutable_rendering_mode() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_rendering_mode();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.VRControllerRenderingModeResponse.rendering_mode)
  return _s;
}
inline const std::string& VRControllerRenderingModeResponse::_internal_rendering_mode() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rendering_mode_.Get();
}
inline void VRControllerRenderingModeResponse::_internal_set_rendering_mode(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rendering_mode_.Set(value, GetArena());
}
inline std::string* VRControllerRenderingModeResponse::_internal_mutable_rendering_mode() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.rendering_mode_.Mutable( GetArena());
}
inline std::string* VRControllerRenderingModeResponse::release_rendering_mode() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.VRControllerRenderingModeResponse.rendering_mode)
  return _impl_.rendering_mode_.Release();
}
inline void VRControllerRenderingModeResponse::set_allocated_rendering_mode(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rendering_mode_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.rendering_mode_.IsDefault()) {
          _impl_.rendering_mode_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.VRControllerRenderingModeResponse.rendering_mode)
}

// -------------------------------------------------------------------

// VRControllerWLWWResponse

// .osirixgrpc.Status status = 1;
inline bool VRControllerWLWWResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::osirixgrpc::Status& VRControllerWLWWResponse::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& VRControllerWLWWResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.VRControllerWLWWResponse.status)
  return _internal_status();
}
inline void VRControllerWLWWResponse::unsafe_arena_set_allocated_status(::osirixgrpc::Status* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.VRControllerWLWWResponse.status)
}
inline ::osirixgrpc::Status* VRControllerWLWWResponse::release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* released = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::Status* VRControllerWLWWResponse::unsafe_arena_release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.VRControllerWLWWResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* VRControllerWLWWResponse::_internal_mutable_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(p);
  }
  return _impl_.status_;
}
inline ::osirixgrpc::Status* VRControllerWLWWResponse::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.VRControllerWLWWResponse.status)
  return _msg;
}
inline void VRControllerWLWWResponse::set_allocated_status(::osirixgrpc::Status* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.VRControllerWLWWResponse.status)
}

// float wl = 2;
inline void VRControllerWLWWResponse::clear_wl() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.wl_ = 0;
}
inline float VRControllerWLWWResponse::wl() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.VRControllerWLWWResponse.wl)
  return _internal_wl();
}
inline void VRControllerWLWWResponse::set_wl(float value) {
  _internal_set_wl(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.VRControllerWLWWResponse.wl)
}
inline float VRControllerWLWWResponse::_internal_wl() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.wl_;
}
inline void VRControllerWLWWResponse::_internal_set_wl(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.wl_ = value;
}

// float ww = 3;
inline void VRControllerWLWWResponse::clear_ww() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ww_ = 0;
}
inline float VRControllerWLWWResponse::ww() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.VRControllerWLWWResponse.ww)
  return _internal_ww();
}
inline void VRControllerWLWWResponse::set_ww(float value) {
  _internal_set_ww(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.VRControllerWLWWResponse.ww)
}
inline float VRControllerWLWWResponse::_internal_ww() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ww_;
}
inline void VRControllerWLWWResponse::_internal_set_ww(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ww_ = value;
}

// -------------------------------------------------------------------

// VRControllerStyleResponse

// .osirixgrpc.Status status = 1;
inline bool VRControllerStyleResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::osirixgrpc::Status& VRControllerStyleResponse::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& VRControllerStyleResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.VRControllerStyleResponse.status)
  return _internal_status();
}
inline void VRControllerStyleResponse::unsafe_arena_set_allocated_status(::osirixgrpc::Status* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.VRControllerStyleResponse.status)
}
inline ::osirixgrpc::Status* VRControllerStyleResponse::release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* released = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::Status* VRControllerStyleResponse::unsafe_arena_release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.VRControllerStyleResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* VRControllerStyleResponse::_internal_mutable_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(p);
  }
  return _impl_.status_;
}
inline ::osirixgrpc::Status* VRControllerStyleResponse::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.VRControllerStyleResponse.status)
  return _msg;
}
inline void VRControllerStyleResponse::set_allocated_status(::osirixgrpc::Status* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.VRControllerStyleResponse.status)
}

// string style = 2;
inline void VRControllerStyleResponse::clear_style() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.style_.ClearToEmpty();
}
inline const std::string& VRControllerStyleResponse::style() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.VRControllerStyleResponse.style)
  return _internal_style();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void VRControllerStyleResponse::set_style(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.style_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:osirixgrpc.VRControllerStyleResponse.style)
}
inline std::string* VRControllerStyleResponse::mutable_style() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_style();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.VRControllerStyleResponse.style)
  return _s;
}
inline const std::string& VRControllerStyleResponse::_internal_style() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.style_.Get();
}
inline void VRControllerStyleResponse::_internal_set_style(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.style_.Set(value, GetArena());
}
inline std::string* VRControllerStyleResponse::_internal_mutable_style() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.style_.Mutable( GetArena());
}
inline std::string* VRControllerStyleResponse::release_style() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.VRControllerStyleResponse.style)
  return _impl_.style_.Release();
}
inline void VRControllerStyleResponse::set_allocated_style(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.style_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.style_.IsDefault()) {
          _impl_.style_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.VRControllerStyleResponse.style)
}

// -------------------------------------------------------------------

// VRControllerTitleResponse

// .osirixgrpc.Status status = 1;
inline bool VRControllerTitleResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::osirixgrpc::Status& VRControllerTitleResponse::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& VRControllerTitleResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.VRControllerTitleResponse.status)
  return _internal_status();
}
inline void VRControllerTitleResponse::unsafe_arena_set_allocated_status(::osirixgrpc::Status* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.VRControllerTitleResponse.status)
}
inline ::osirixgrpc::Status* VRControllerTitleResponse::release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* released = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::Status* VRControllerTitleResponse::unsafe_arena_release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.VRControllerTitleResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* VRControllerTitleResponse::_internal_mutable_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(p);
  }
  return _impl_.status_;
}
inline ::osirixgrpc::Status* VRControllerTitleResponse::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.VRControllerTitleResponse.status)
  return _msg;
}
inline void VRControllerTitleResponse::set_allocated_status(::osirixgrpc::Status* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.VRControllerTitleResponse.status)
}

// string title = 2;
inline void VRControllerTitleResponse::clear_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.title_.ClearToEmpty();
}
inline const std::string& VRControllerTitleResponse::title() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.VRControllerTitleResponse.title)
  return _internal_title();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void VRControllerTitleResponse::set_title(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.title_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:osirixgrpc.VRControllerTitleResponse.title)
}
inline std::string* VRControllerTitleResponse::mutable_title() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_title();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.VRControllerTitleResponse.title)
  return _s;
}
inline const std::string& VRControllerTitleResponse::_internal_title() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.title_.Get();
}
inline void VRControllerTitleResponse::_internal_set_title(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.title_.Set(value, GetArena());
}
inline std::string* VRControllerTitleResponse::_internal_mutable_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.title_.Mutable( GetArena());
}
inline std::string* VRControllerTitleResponse::release_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.VRControllerTitleResponse.title)
  return _impl_.title_.Release();
}
inline void VRControllerTitleResponse::set_allocated_title(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.title_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.title_.IsDefault()) {
          _impl_.title_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.VRControllerTitleResponse.title)
}

// -------------------------------------------------------------------

// VRControllerROIVolumesResponse

// .osirixgrpc.Status status = 1;
inline bool VRControllerROIVolumesResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::osirixgrpc::Status& VRControllerROIVolumesResponse::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& VRControllerROIVolumesResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.VRControllerROIVolumesResponse.status)
  return _internal_status();
}
inline void VRControllerROIVolumesResponse::unsafe_arena_set_allocated_status(::osirixgrpc::Status* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.VRControllerROIVolumesResponse.status)
}
inline ::osirixgrpc::Status* VRControllerROIVolumesResponse::release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* released = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::Status* VRControllerROIVolumesResponse::unsafe_arena_release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.VRControllerROIVolumesResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* VRControllerROIVolumesResponse::_internal_mutable_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(p);
  }
  return _impl_.status_;
}
inline ::osirixgrpc::Status* VRControllerROIVolumesResponse::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.VRControllerROIVolumesResponse.status)
  return _msg;
}
inline void VRControllerROIVolumesResponse::set_allocated_status(::osirixgrpc::Status* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.VRControllerROIVolumesResponse.status)
}

// repeated .osirixgrpc.ROIVolume roi_volumes = 2;
inline int VRControllerROIVolumesResponse::_internal_roi_volumes_size() const {
  return _internal_roi_volumes().size();
}
inline int VRControllerROIVolumesResponse::roi_volumes_size() const {
  return _internal_roi_volumes_size();
}
inline ::osirixgrpc::ROIVolume* VRControllerROIVolumesResponse::mutable_roi_volumes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.VRControllerROIVolumesResponse.roi_volumes)
  return _internal_mutable_roi_volumes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::osirixgrpc::ROIVolume>* VRControllerROIVolumesResponse::mutable_roi_volumes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:osirixgrpc.VRControllerROIVolumesResponse.roi_volumes)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_roi_volumes();
}
inline const ::osirixgrpc::ROIVolume& VRControllerROIVolumesResponse::roi_volumes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.VRControllerROIVolumesResponse.roi_volumes)
  return _internal_roi_volumes().Get(index);
}
inline ::osirixgrpc::ROIVolume* VRControllerROIVolumesResponse::add_roi_volumes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::osirixgrpc::ROIVolume* _add = _internal_mutable_roi_volumes()->Add();
  // @@protoc_insertion_point(field_add:osirixgrpc.VRControllerROIVolumesResponse.roi_volumes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::osirixgrpc::ROIVolume>& VRControllerROIVolumesResponse::roi_volumes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:osirixgrpc.VRControllerROIVolumesResponse.roi_volumes)
  return _internal_roi_volumes();
}
inline const ::google::protobuf::RepeatedPtrField<::osirixgrpc::ROIVolume>&
VRControllerROIVolumesResponse::_internal_roi_volumes() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.roi_volumes_;
}
inline ::google::protobuf::RepeatedPtrField<::osirixgrpc::ROIVolume>*
VRControllerROIVolumesResponse::_internal_mutable_roi_volumes() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.roi_volumes_;
}

// -------------------------------------------------------------------

// VRControllerSetRenderingModeRequest

// .osirixgrpc.VRController vr_controller = 1;
inline bool VRControllerSetRenderingModeRequest::has_vr_controller() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.vr_controller_ != nullptr);
  return value;
}
inline const ::osirixgrpc::VRController& VRControllerSetRenderingModeRequest::_internal_vr_controller() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::VRController* p = _impl_.vr_controller_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::VRController&>(::osirixgrpc::_VRController_default_instance_);
}
inline const ::osirixgrpc::VRController& VRControllerSetRenderingModeRequest::vr_controller() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.VRControllerSetRenderingModeRequest.vr_controller)
  return _internal_vr_controller();
}
inline void VRControllerSetRenderingModeRequest::unsafe_arena_set_allocated_vr_controller(::osirixgrpc::VRController* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vr_controller_);
  }
  _impl_.vr_controller_ = reinterpret_cast<::osirixgrpc::VRController*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.VRControllerSetRenderingModeRequest.vr_controller)
}
inline ::osirixgrpc::VRController* VRControllerSetRenderingModeRequest::release_vr_controller() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::VRController* released = _impl_.vr_controller_;
  _impl_.vr_controller_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::VRController* VRControllerSetRenderingModeRequest::unsafe_arena_release_vr_controller() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.VRControllerSetRenderingModeRequest.vr_controller)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::VRController* temp = _impl_.vr_controller_;
  _impl_.vr_controller_ = nullptr;
  return temp;
}
inline ::osirixgrpc::VRController* VRControllerSetRenderingModeRequest::_internal_mutable_vr_controller() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.vr_controller_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::VRController>(GetArena());
    _impl_.vr_controller_ = reinterpret_cast<::osirixgrpc::VRController*>(p);
  }
  return _impl_.vr_controller_;
}
inline ::osirixgrpc::VRController* VRControllerSetRenderingModeRequest::mutable_vr_controller() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::VRController* _msg = _internal_mutable_vr_controller();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.VRControllerSetRenderingModeRequest.vr_controller)
  return _msg;
}
inline void VRControllerSetRenderingModeRequest::set_allocated_vr_controller(::osirixgrpc::VRController* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vr_controller_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.vr_controller_ = reinterpret_cast<::osirixgrpc::VRController*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.VRControllerSetRenderingModeRequest.vr_controller)
}

// string rendering_mode = 2;
inline void VRControllerSetRenderingModeRequest::clear_rendering_mode() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rendering_mode_.ClearToEmpty();
}
inline const std::string& VRControllerSetRenderingModeRequest::rendering_mode() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.VRControllerSetRenderingModeRequest.rendering_mode)
  return _internal_rendering_mode();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void VRControllerSetRenderingModeRequest::set_rendering_mode(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rendering_mode_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:osirixgrpc.VRControllerSetRenderingModeRequest.rendering_mode)
}
inline std::string* VRControllerSetRenderingModeRequest::mutable_rendering_mode() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_rendering_mode();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.VRControllerSetRenderingModeRequest.rendering_mode)
  return _s;
}
inline const std::string& VRControllerSetRenderingModeRequest::_internal_rendering_mode() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rendering_mode_.Get();
}
inline void VRControllerSetRenderingModeRequest::_internal_set_rendering_mode(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rendering_mode_.Set(value, GetArena());
}
inline std::string* VRControllerSetRenderingModeRequest::_internal_mutable_rendering_mode() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.rendering_mode_.Mutable( GetArena());
}
inline std::string* VRControllerSetRenderingModeRequest::release_rendering_mode() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.VRControllerSetRenderingModeRequest.rendering_mode)
  return _impl_.rendering_mode_.Release();
}
inline void VRControllerSetRenderingModeRequest::set_allocated_rendering_mode(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rendering_mode_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.rendering_mode_.IsDefault()) {
          _impl_.rendering_mode_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.VRControllerSetRenderingModeRequest.rendering_mode)
}

// -------------------------------------------------------------------

// VRControllerSetWLWWRequest

// .osirixgrpc.VRController vr_controller = 1;
inline bool VRControllerSetWLWWRequest::has_vr_controller() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.vr_controller_ != nullptr);
  return value;
}
inline const ::osirixgrpc::VRController& VRControllerSetWLWWRequest::_internal_vr_controller() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::VRController* p = _impl_.vr_controller_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::VRController&>(::osirixgrpc::_VRController_default_instance_);
}
inline const ::osirixgrpc::VRController& VRControllerSetWLWWRequest::vr_controller() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.VRControllerSetWLWWRequest.vr_controller)
  return _internal_vr_controller();
}
inline void VRControllerSetWLWWRequest::unsafe_arena_set_allocated_vr_controller(::osirixgrpc::VRController* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vr_controller_);
  }
  _impl_.vr_controller_ = reinterpret_cast<::osirixgrpc::VRController*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.VRControllerSetWLWWRequest.vr_controller)
}
inline ::osirixgrpc::VRController* VRControllerSetWLWWRequest::release_vr_controller() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::VRController* released = _impl_.vr_controller_;
  _impl_.vr_controller_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::VRController* VRControllerSetWLWWRequest::unsafe_arena_release_vr_controller() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.VRControllerSetWLWWRequest.vr_controller)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::VRController* temp = _impl_.vr_controller_;
  _impl_.vr_controller_ = nullptr;
  return temp;
}
inline ::osirixgrpc::VRController* VRControllerSetWLWWRequest::_internal_mutable_vr_controller() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.vr_controller_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::VRController>(GetArena());
    _impl_.vr_controller_ = reinterpret_cast<::osirixgrpc::VRController*>(p);
  }
  return _impl_.vr_controller_;
}
inline ::osirixgrpc::VRController* VRControllerSetWLWWRequest::mutable_vr_controller() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::VRController* _msg = _internal_mutable_vr_controller();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.VRControllerSetWLWWRequest.vr_controller)
  return _msg;
}
inline void VRControllerSetWLWWRequest::set_allocated_vr_controller(::osirixgrpc::VRController* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vr_controller_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.vr_controller_ = reinterpret_cast<::osirixgrpc::VRController*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.VRControllerSetWLWWRequest.vr_controller)
}

// float wl = 2;
inline void VRControllerSetWLWWRequest::clear_wl() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.wl_ = 0;
}
inline float VRControllerSetWLWWRequest::wl() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.VRControllerSetWLWWRequest.wl)
  return _internal_wl();
}
inline void VRControllerSetWLWWRequest::set_wl(float value) {
  _internal_set_wl(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.VRControllerSetWLWWRequest.wl)
}
inline float VRControllerSetWLWWRequest::_internal_wl() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.wl_;
}
inline void VRControllerSetWLWWRequest::_internal_set_wl(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.wl_ = value;
}

// float ww = 3;
inline void VRControllerSetWLWWRequest::clear_ww() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ww_ = 0;
}
inline float VRControllerSetWLWWRequest::ww() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.VRControllerSetWLWWRequest.ww)
  return _internal_ww();
}
inline void VRControllerSetWLWWRequest::set_ww(float value) {
  _internal_set_ww(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.VRControllerSetWLWWRequest.ww)
}
inline float VRControllerSetWLWWRequest::_internal_ww() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ww_;
}
inline void VRControllerSetWLWWRequest::_internal_set_ww(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ww_ = value;
}

// -------------------------------------------------------------------

// VRControllerHideROIVolumeRequest

// .osirixgrpc.VRController vr_controller = 1;
inline bool VRControllerHideROIVolumeRequest::has_vr_controller() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.vr_controller_ != nullptr);
  return value;
}
inline const ::osirixgrpc::VRController& VRControllerHideROIVolumeRequest::_internal_vr_controller() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::VRController* p = _impl_.vr_controller_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::VRController&>(::osirixgrpc::_VRController_default_instance_);
}
inline const ::osirixgrpc::VRController& VRControllerHideROIVolumeRequest::vr_controller() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.VRControllerHideROIVolumeRequest.vr_controller)
  return _internal_vr_controller();
}
inline void VRControllerHideROIVolumeRequest::unsafe_arena_set_allocated_vr_controller(::osirixgrpc::VRController* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vr_controller_);
  }
  _impl_.vr_controller_ = reinterpret_cast<::osirixgrpc::VRController*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.VRControllerHideROIVolumeRequest.vr_controller)
}
inline ::osirixgrpc::VRController* VRControllerHideROIVolumeRequest::release_vr_controller() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::VRController* released = _impl_.vr_controller_;
  _impl_.vr_controller_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::VRController* VRControllerHideROIVolumeRequest::unsafe_arena_release_vr_controller() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.VRControllerHideROIVolumeRequest.vr_controller)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::VRController* temp = _impl_.vr_controller_;
  _impl_.vr_controller_ = nullptr;
  return temp;
}
inline ::osirixgrpc::VRController* VRControllerHideROIVolumeRequest::_internal_mutable_vr_controller() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.vr_controller_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::VRController>(GetArena());
    _impl_.vr_controller_ = reinterpret_cast<::osirixgrpc::VRController*>(p);
  }
  return _impl_.vr_controller_;
}
inline ::osirixgrpc::VRController* VRControllerHideROIVolumeRequest::mutable_vr_controller() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::VRController* _msg = _internal_mutable_vr_controller();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.VRControllerHideROIVolumeRequest.vr_controller)
  return _msg;
}
inline void VRControllerHideROIVolumeRequest::set_allocated_vr_controller(::osirixgrpc::VRController* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vr_controller_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.vr_controller_ = reinterpret_cast<::osirixgrpc::VRController*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.VRControllerHideROIVolumeRequest.vr_controller)
}

// .osirixgrpc.ROIVolume roi_volume = 2;
inline bool VRControllerHideROIVolumeRequest::has_roi_volume() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.roi_volume_ != nullptr);
  return value;
}
inline const ::osirixgrpc::ROIVolume& VRControllerHideROIVolumeRequest::_internal_roi_volume() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::ROIVolume* p = _impl_.roi_volume_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::ROIVolume&>(::osirixgrpc::_ROIVolume_default_instance_);
}
inline const ::osirixgrpc::ROIVolume& VRControllerHideROIVolumeRequest::roi_volume() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.VRControllerHideROIVolumeRequest.roi_volume)
  return _internal_roi_volume();
}
inline void VRControllerHideROIVolumeRequest::unsafe_arena_set_allocated_roi_volume(::osirixgrpc::ROIVolume* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.roi_volume_);
  }
  _impl_.roi_volume_ = reinterpret_cast<::osirixgrpc::ROIVolume*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.VRControllerHideROIVolumeRequest.roi_volume)
}
inline ::osirixgrpc::ROIVolume* VRControllerHideROIVolumeRequest::release_roi_volume() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::osirixgrpc::ROIVolume* released = _impl_.roi_volume_;
  _impl_.roi_volume_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::ROIVolume* VRControllerHideROIVolumeRequest::unsafe_arena_release_roi_volume() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.VRControllerHideROIVolumeRequest.roi_volume)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::osirixgrpc::ROIVolume* temp = _impl_.roi_volume_;
  _impl_.roi_volume_ = nullptr;
  return temp;
}
inline ::osirixgrpc::ROIVolume* VRControllerHideROIVolumeRequest::_internal_mutable_roi_volume() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.roi_volume_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::ROIVolume>(GetArena());
    _impl_.roi_volume_ = reinterpret_cast<::osirixgrpc::ROIVolume*>(p);
  }
  return _impl_.roi_volume_;
}
inline ::osirixgrpc::ROIVolume* VRControllerHideROIVolumeRequest::mutable_roi_volume() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::ROIVolume* _msg = _internal_mutable_roi_volume();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.VRControllerHideROIVolumeRequest.roi_volume)
  return _msg;
}
inline void VRControllerHideROIVolumeRequest::set_allocated_roi_volume(::osirixgrpc::ROIVolume* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.roi_volume_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.roi_volume_ = reinterpret_cast<::osirixgrpc::ROIVolume*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.VRControllerHideROIVolumeRequest.roi_volume)
}

// -------------------------------------------------------------------

// VRControllerDisplayROIVolumeRequest

// .osirixgrpc.VRController vr_controller = 1;
inline bool VRControllerDisplayROIVolumeRequest::has_vr_controller() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.vr_controller_ != nullptr);
  return value;
}
inline const ::osirixgrpc::VRController& VRControllerDisplayROIVolumeRequest::_internal_vr_controller() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::VRController* p = _impl_.vr_controller_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::VRController&>(::osirixgrpc::_VRController_default_instance_);
}
inline const ::osirixgrpc::VRController& VRControllerDisplayROIVolumeRequest::vr_controller() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.VRControllerDisplayROIVolumeRequest.vr_controller)
  return _internal_vr_controller();
}
inline void VRControllerDisplayROIVolumeRequest::unsafe_arena_set_allocated_vr_controller(::osirixgrpc::VRController* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vr_controller_);
  }
  _impl_.vr_controller_ = reinterpret_cast<::osirixgrpc::VRController*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.VRControllerDisplayROIVolumeRequest.vr_controller)
}
inline ::osirixgrpc::VRController* VRControllerDisplayROIVolumeRequest::release_vr_controller() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::VRController* released = _impl_.vr_controller_;
  _impl_.vr_controller_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::VRController* VRControllerDisplayROIVolumeRequest::unsafe_arena_release_vr_controller() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.VRControllerDisplayROIVolumeRequest.vr_controller)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::VRController* temp = _impl_.vr_controller_;
  _impl_.vr_controller_ = nullptr;
  return temp;
}
inline ::osirixgrpc::VRController* VRControllerDisplayROIVolumeRequest::_internal_mutable_vr_controller() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.vr_controller_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::VRController>(GetArena());
    _impl_.vr_controller_ = reinterpret_cast<::osirixgrpc::VRController*>(p);
  }
  return _impl_.vr_controller_;
}
inline ::osirixgrpc::VRController* VRControllerDisplayROIVolumeRequest::mutable_vr_controller() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::VRController* _msg = _internal_mutable_vr_controller();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.VRControllerDisplayROIVolumeRequest.vr_controller)
  return _msg;
}
inline void VRControllerDisplayROIVolumeRequest::set_allocated_vr_controller(::osirixgrpc::VRController* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vr_controller_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.vr_controller_ = reinterpret_cast<::osirixgrpc::VRController*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.VRControllerDisplayROIVolumeRequest.vr_controller)
}

// .osirixgrpc.ROIVolume roi_volume = 2;
inline bool VRControllerDisplayROIVolumeRequest::has_roi_volume() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.roi_volume_ != nullptr);
  return value;
}
inline const ::osirixgrpc::ROIVolume& VRControllerDisplayROIVolumeRequest::_internal_roi_volume() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::ROIVolume* p = _impl_.roi_volume_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::ROIVolume&>(::osirixgrpc::_ROIVolume_default_instance_);
}
inline const ::osirixgrpc::ROIVolume& VRControllerDisplayROIVolumeRequest::roi_volume() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.VRControllerDisplayROIVolumeRequest.roi_volume)
  return _internal_roi_volume();
}
inline void VRControllerDisplayROIVolumeRequest::unsafe_arena_set_allocated_roi_volume(::osirixgrpc::ROIVolume* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.roi_volume_);
  }
  _impl_.roi_volume_ = reinterpret_cast<::osirixgrpc::ROIVolume*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.VRControllerDisplayROIVolumeRequest.roi_volume)
}
inline ::osirixgrpc::ROIVolume* VRControllerDisplayROIVolumeRequest::release_roi_volume() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::osirixgrpc::ROIVolume* released = _impl_.roi_volume_;
  _impl_.roi_volume_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::ROIVolume* VRControllerDisplayROIVolumeRequest::unsafe_arena_release_roi_volume() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.VRControllerDisplayROIVolumeRequest.roi_volume)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::osirixgrpc::ROIVolume* temp = _impl_.roi_volume_;
  _impl_.roi_volume_ = nullptr;
  return temp;
}
inline ::osirixgrpc::ROIVolume* VRControllerDisplayROIVolumeRequest::_internal_mutable_roi_volume() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.roi_volume_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::ROIVolume>(GetArena());
    _impl_.roi_volume_ = reinterpret_cast<::osirixgrpc::ROIVolume*>(p);
  }
  return _impl_.roi_volume_;
}
inline ::osirixgrpc::ROIVolume* VRControllerDisplayROIVolumeRequest::mutable_roi_volume() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::ROIVolume* _msg = _internal_mutable_roi_volume();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.VRControllerDisplayROIVolumeRequest.roi_volume)
  return _msg;
}
inline void VRControllerDisplayROIVolumeRequest::set_allocated_roi_volume(::osirixgrpc::ROIVolume* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.roi_volume_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.roi_volume_ = reinterpret_cast<::osirixgrpc::ROIVolume*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.VRControllerDisplayROIVolumeRequest.roi_volume)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace osirixgrpc


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_vrcontroller_2eproto_2epb_2eh
