// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dcmpix.proto
// Protobuf C++ Version: 4.25.0

#ifndef GOOGLE_PROTOBUF_INCLUDED_dcmpix_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_dcmpix_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "utilities.pb.h"
#include "types.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_dcmpix_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_dcmpix_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_dcmpix_2eproto;
namespace osirixgrpc {
class DCMPixComputeROIRequest;
struct DCMPixComputeROIRequestDefaultTypeInternal;
extern DCMPixComputeROIRequestDefaultTypeInternal _DCMPixComputeROIRequest_default_instance_;
class DCMPixComputeROIResponse;
struct DCMPixComputeROIResponseDefaultTypeInternal;
extern DCMPixComputeROIResponseDefaultTypeInternal _DCMPixComputeROIResponse_default_instance_;
class DCMPixConvertToBWRequest;
struct DCMPixConvertToBWRequestDefaultTypeInternal;
extern DCMPixConvertToBWRequestDefaultTypeInternal _DCMPixConvertToBWRequest_default_instance_;
class DCMPixConvertToRGBRequest;
struct DCMPixConvertToRGBRequestDefaultTypeInternal;
extern DCMPixConvertToRGBRequestDefaultTypeInternal _DCMPixConvertToRGBRequest_default_instance_;
class DCMPixDicomImageResponse;
struct DCMPixDicomImageResponseDefaultTypeInternal;
extern DCMPixDicomImageResponseDefaultTypeInternal _DCMPixDicomImageResponse_default_instance_;
class DCMPixDicomSeriesResponse;
struct DCMPixDicomSeriesResponseDefaultTypeInternal;
extern DCMPixDicomSeriesResponseDefaultTypeInternal _DCMPixDicomSeriesResponse_default_instance_;
class DCMPixDicomStudyResponse;
struct DCMPixDicomStudyResponseDefaultTypeInternal;
extern DCMPixDicomStudyResponseDefaultTypeInternal _DCMPixDicomStudyResponse_default_instance_;
class DCMPixGetMapFromROIRequest;
struct DCMPixGetMapFromROIRequestDefaultTypeInternal;
extern DCMPixGetMapFromROIRequestDefaultTypeInternal _DCMPixGetMapFromROIRequest_default_instance_;
class DCMPixGetMapFromROIResponse;
struct DCMPixGetMapFromROIResponseDefaultTypeInternal;
extern DCMPixGetMapFromROIResponseDefaultTypeInternal _DCMPixGetMapFromROIResponse_default_instance_;
class DCMPixImageResponse;
struct DCMPixImageResponseDefaultTypeInternal;
extern DCMPixImageResponseDefaultTypeInternal _DCMPixImageResponse_default_instance_;
class DCMPixIsRGBResponse;
struct DCMPixIsRGBResponseDefaultTypeInternal;
extern DCMPixIsRGBResponseDefaultTypeInternal _DCMPixIsRGBResponse_default_instance_;
class DCMPixOrientationResponse;
struct DCMPixOrientationResponseDefaultTypeInternal;
extern DCMPixOrientationResponseDefaultTypeInternal _DCMPixOrientationResponse_default_instance_;
class DCMPixOriginResponse;
struct DCMPixOriginResponseDefaultTypeInternal;
extern DCMPixOriginResponseDefaultTypeInternal _DCMPixOriginResponse_default_instance_;
class DCMPixROIValuesRequest;
struct DCMPixROIValuesRequestDefaultTypeInternal;
extern DCMPixROIValuesRequestDefaultTypeInternal _DCMPixROIValuesRequest_default_instance_;
class DCMPixROIValuesResponse;
struct DCMPixROIValuesResponseDefaultTypeInternal;
extern DCMPixROIValuesResponseDefaultTypeInternal _DCMPixROIValuesResponse_default_instance_;
class DCMPixSetImageRequest;
struct DCMPixSetImageRequestDefaultTypeInternal;
extern DCMPixSetImageRequestDefaultTypeInternal _DCMPixSetImageRequest_default_instance_;
class DCMPixShapeResponse;
struct DCMPixShapeResponseDefaultTypeInternal;
extern DCMPixShapeResponseDefaultTypeInternal _DCMPixShapeResponse_default_instance_;
class DCMPixSliceLocationResponse;
struct DCMPixSliceLocationResponseDefaultTypeInternal;
extern DCMPixSliceLocationResponseDefaultTypeInternal _DCMPixSliceLocationResponse_default_instance_;
class DCMPixSourceFileResponse;
struct DCMPixSourceFileResponseDefaultTypeInternal;
extern DCMPixSourceFileResponseDefaultTypeInternal _DCMPixSourceFileResponse_default_instance_;
class DCMPixSpacingResponse;
struct DCMPixSpacingResponseDefaultTypeInternal;
extern DCMPixSpacingResponseDefaultTypeInternal _DCMPixSpacingResponse_default_instance_;
}  // namespace osirixgrpc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace osirixgrpc {

// ===================================================================


// -------------------------------------------------------------------

class DCMPixSpacingResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DCMPixSpacingResponse) */ {
 public:
  inline DCMPixSpacingResponse() : DCMPixSpacingResponse(nullptr) {}
  ~DCMPixSpacingResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DCMPixSpacingResponse(::google::protobuf::internal::ConstantInitialized);

  inline DCMPixSpacingResponse(const DCMPixSpacingResponse& from)
      : DCMPixSpacingResponse(nullptr, from) {}
  DCMPixSpacingResponse(DCMPixSpacingResponse&& from) noexcept
    : DCMPixSpacingResponse() {
    *this = ::std::move(from);
  }

  inline DCMPixSpacingResponse& operator=(const DCMPixSpacingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DCMPixSpacingResponse& operator=(DCMPixSpacingResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DCMPixSpacingResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DCMPixSpacingResponse* internal_default_instance() {
    return reinterpret_cast<const DCMPixSpacingResponse*>(
               &_DCMPixSpacingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(DCMPixSpacingResponse& a, DCMPixSpacingResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DCMPixSpacingResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DCMPixSpacingResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DCMPixSpacingResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DCMPixSpacingResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DCMPixSpacingResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DCMPixSpacingResponse& from) {
    DCMPixSpacingResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DCMPixSpacingResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.DCMPixSpacingResponse";
  }
  protected:
  explicit DCMPixSpacingResponse(::google::protobuf::Arena* arena);
  DCMPixSpacingResponse(::google::protobuf::Arena* arena, const DCMPixSpacingResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kSpacingRowsFieldNumber = 2,
    kSpacingColumnsFieldNumber = 3,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::osirixgrpc::Status& status() const;
  PROTOBUF_NODISCARD ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* value);
  void unsafe_arena_set_allocated_status(::osirixgrpc::Status* value);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();

  public:
  // float spacing_rows = 2;
  void clear_spacing_rows() ;
  float spacing_rows() const;
  void set_spacing_rows(float value);

  private:
  float _internal_spacing_rows() const;
  void _internal_set_spacing_rows(float value);

  public:
  // float spacing_columns = 3;
  void clear_spacing_columns() ;
  float spacing_columns() const;
  void set_spacing_columns(float value);

  private:
  float _internal_spacing_columns() const;
  void _internal_set_spacing_columns(float value);

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.DCMPixSpacingResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::osirixgrpc::Status* status_;
    float spacing_rows_;
    float spacing_columns_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dcmpix_2eproto;
};// -------------------------------------------------------------------

class DCMPixSourceFileResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DCMPixSourceFileResponse) */ {
 public:
  inline DCMPixSourceFileResponse() : DCMPixSourceFileResponse(nullptr) {}
  ~DCMPixSourceFileResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DCMPixSourceFileResponse(::google::protobuf::internal::ConstantInitialized);

  inline DCMPixSourceFileResponse(const DCMPixSourceFileResponse& from)
      : DCMPixSourceFileResponse(nullptr, from) {}
  DCMPixSourceFileResponse(DCMPixSourceFileResponse&& from) noexcept
    : DCMPixSourceFileResponse() {
    *this = ::std::move(from);
  }

  inline DCMPixSourceFileResponse& operator=(const DCMPixSourceFileResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DCMPixSourceFileResponse& operator=(DCMPixSourceFileResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DCMPixSourceFileResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DCMPixSourceFileResponse* internal_default_instance() {
    return reinterpret_cast<const DCMPixSourceFileResponse*>(
               &_DCMPixSourceFileResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(DCMPixSourceFileResponse& a, DCMPixSourceFileResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DCMPixSourceFileResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DCMPixSourceFileResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DCMPixSourceFileResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DCMPixSourceFileResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DCMPixSourceFileResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DCMPixSourceFileResponse& from) {
    DCMPixSourceFileResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DCMPixSourceFileResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.DCMPixSourceFileResponse";
  }
  protected:
  explicit DCMPixSourceFileResponse(::google::protobuf::Arena* arena);
  DCMPixSourceFileResponse(::google::protobuf::Arena* arena, const DCMPixSourceFileResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSourceFileFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string source_file = 2;
  void clear_source_file() ;
  const std::string& source_file() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_source_file(Arg_&& arg, Args_... args);
  std::string* mutable_source_file();
  PROTOBUF_NODISCARD std::string* release_source_file();
  void set_allocated_source_file(std::string* value);

  private:
  const std::string& _internal_source_file() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_source_file(
      const std::string& value);
  std::string* _internal_mutable_source_file();

  public:
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::osirixgrpc::Status& status() const;
  PROTOBUF_NODISCARD ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* value);
  void unsafe_arena_set_allocated_status(::osirixgrpc::Status* value);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.DCMPixSourceFileResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      55, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr source_file_;
    ::osirixgrpc::Status* status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dcmpix_2eproto;
};// -------------------------------------------------------------------

class DCMPixSliceLocationResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DCMPixSliceLocationResponse) */ {
 public:
  inline DCMPixSliceLocationResponse() : DCMPixSliceLocationResponse(nullptr) {}
  ~DCMPixSliceLocationResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DCMPixSliceLocationResponse(::google::protobuf::internal::ConstantInitialized);

  inline DCMPixSliceLocationResponse(const DCMPixSliceLocationResponse& from)
      : DCMPixSliceLocationResponse(nullptr, from) {}
  DCMPixSliceLocationResponse(DCMPixSliceLocationResponse&& from) noexcept
    : DCMPixSliceLocationResponse() {
    *this = ::std::move(from);
  }

  inline DCMPixSliceLocationResponse& operator=(const DCMPixSliceLocationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DCMPixSliceLocationResponse& operator=(DCMPixSliceLocationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DCMPixSliceLocationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DCMPixSliceLocationResponse* internal_default_instance() {
    return reinterpret_cast<const DCMPixSliceLocationResponse*>(
               &_DCMPixSliceLocationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(DCMPixSliceLocationResponse& a, DCMPixSliceLocationResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DCMPixSliceLocationResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DCMPixSliceLocationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DCMPixSliceLocationResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DCMPixSliceLocationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DCMPixSliceLocationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DCMPixSliceLocationResponse& from) {
    DCMPixSliceLocationResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DCMPixSliceLocationResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.DCMPixSliceLocationResponse";
  }
  protected:
  explicit DCMPixSliceLocationResponse(::google::protobuf::Arena* arena);
  DCMPixSliceLocationResponse(::google::protobuf::Arena* arena, const DCMPixSliceLocationResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kSliceLocationFieldNumber = 2,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::osirixgrpc::Status& status() const;
  PROTOBUF_NODISCARD ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* value);
  void unsafe_arena_set_allocated_status(::osirixgrpc::Status* value);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();

  public:
  // float slice_location = 2;
  void clear_slice_location() ;
  float slice_location() const;
  void set_slice_location(float value);

  private:
  float _internal_slice_location() const;
  void _internal_set_slice_location(float value);

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.DCMPixSliceLocationResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::osirixgrpc::Status* status_;
    float slice_location_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dcmpix_2eproto;
};// -------------------------------------------------------------------

class DCMPixShapeResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DCMPixShapeResponse) */ {
 public:
  inline DCMPixShapeResponse() : DCMPixShapeResponse(nullptr) {}
  ~DCMPixShapeResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DCMPixShapeResponse(::google::protobuf::internal::ConstantInitialized);

  inline DCMPixShapeResponse(const DCMPixShapeResponse& from)
      : DCMPixShapeResponse(nullptr, from) {}
  DCMPixShapeResponse(DCMPixShapeResponse&& from) noexcept
    : DCMPixShapeResponse() {
    *this = ::std::move(from);
  }

  inline DCMPixShapeResponse& operator=(const DCMPixShapeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DCMPixShapeResponse& operator=(DCMPixShapeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DCMPixShapeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DCMPixShapeResponse* internal_default_instance() {
    return reinterpret_cast<const DCMPixShapeResponse*>(
               &_DCMPixShapeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(DCMPixShapeResponse& a, DCMPixShapeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DCMPixShapeResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DCMPixShapeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DCMPixShapeResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DCMPixShapeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DCMPixShapeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DCMPixShapeResponse& from) {
    DCMPixShapeResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DCMPixShapeResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.DCMPixShapeResponse";
  }
  protected:
  explicit DCMPixShapeResponse(::google::protobuf::Arena* arena);
  DCMPixShapeResponse(::google::protobuf::Arena* arena, const DCMPixShapeResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kRowsFieldNumber = 2,
    kColumnsFieldNumber = 3,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::osirixgrpc::Status& status() const;
  PROTOBUF_NODISCARD ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* value);
  void unsafe_arena_set_allocated_status(::osirixgrpc::Status* value);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();

  public:
  // int32 rows = 2;
  void clear_rows() ;
  ::int32_t rows() const;
  void set_rows(::int32_t value);

  private:
  ::int32_t _internal_rows() const;
  void _internal_set_rows(::int32_t value);

  public:
  // int32 columns = 3;
  void clear_columns() ;
  ::int32_t columns() const;
  void set_columns(::int32_t value);

  private:
  ::int32_t _internal_columns() const;
  void _internal_set_columns(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.DCMPixShapeResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::osirixgrpc::Status* status_;
    ::int32_t rows_;
    ::int32_t columns_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dcmpix_2eproto;
};// -------------------------------------------------------------------

class DCMPixSetImageRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DCMPixSetImageRequest) */ {
 public:
  inline DCMPixSetImageRequest() : DCMPixSetImageRequest(nullptr) {}
  ~DCMPixSetImageRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DCMPixSetImageRequest(::google::protobuf::internal::ConstantInitialized);

  inline DCMPixSetImageRequest(const DCMPixSetImageRequest& from)
      : DCMPixSetImageRequest(nullptr, from) {}
  DCMPixSetImageRequest(DCMPixSetImageRequest&& from) noexcept
    : DCMPixSetImageRequest() {
    *this = ::std::move(from);
  }

  inline DCMPixSetImageRequest& operator=(const DCMPixSetImageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DCMPixSetImageRequest& operator=(DCMPixSetImageRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DCMPixSetImageRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DCMPixSetImageRequest* internal_default_instance() {
    return reinterpret_cast<const DCMPixSetImageRequest*>(
               &_DCMPixSetImageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(DCMPixSetImageRequest& a, DCMPixSetImageRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DCMPixSetImageRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DCMPixSetImageRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DCMPixSetImageRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DCMPixSetImageRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DCMPixSetImageRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DCMPixSetImageRequest& from) {
    DCMPixSetImageRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DCMPixSetImageRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.DCMPixSetImageRequest";
  }
  protected:
  explicit DCMPixSetImageRequest(::google::protobuf::Arena* arena);
  DCMPixSetImageRequest(::google::protobuf::Arena* arena, const DCMPixSetImageRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kImageDataFloatFieldNumber = 2,
    kImageDataArgbFieldNumber = 3,
    kPixFieldNumber = 1,
  };
  // repeated float image_data_float = 2;
  int image_data_float_size() const;
  private:
  int _internal_image_data_float_size() const;

  public:
  void clear_image_data_float() ;
  float image_data_float(int index) const;
  void set_image_data_float(int index, float value);
  void add_image_data_float(float value);
  const ::google::protobuf::RepeatedField<float>& image_data_float() const;
  ::google::protobuf::RepeatedField<float>* mutable_image_data_float();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_image_data_float() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_image_data_float();

  public:
  // repeated int32 image_data_argb = 3;
  int image_data_argb_size() const;
  private:
  int _internal_image_data_argb_size() const;

  public:
  void clear_image_data_argb() ;
  ::int32_t image_data_argb(int index) const;
  void set_image_data_argb(int index, ::int32_t value);
  void add_image_data_argb(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& image_data_argb() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_image_data_argb();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_image_data_argb() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_image_data_argb();

  public:
  // .osirixgrpc.DCMPix pix = 1;
  bool has_pix() const;
  void clear_pix() ;
  const ::osirixgrpc::DCMPix& pix() const;
  PROTOBUF_NODISCARD ::osirixgrpc::DCMPix* release_pix();
  ::osirixgrpc::DCMPix* mutable_pix();
  void set_allocated_pix(::osirixgrpc::DCMPix* value);
  void unsafe_arena_set_allocated_pix(::osirixgrpc::DCMPix* value);
  ::osirixgrpc::DCMPix* unsafe_arena_release_pix();

  private:
  const ::osirixgrpc::DCMPix& _internal_pix() const;
  ::osirixgrpc::DCMPix* _internal_mutable_pix();

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.DCMPixSetImageRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<float> image_data_float_;
    ::google::protobuf::RepeatedField<::int32_t> image_data_argb_;
    mutable ::google::protobuf::internal::CachedSize _image_data_argb_cached_byte_size_;
    ::osirixgrpc::DCMPix* pix_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dcmpix_2eproto;
};// -------------------------------------------------------------------

class DCMPixROIValuesResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DCMPixROIValuesResponse) */ {
 public:
  inline DCMPixROIValuesResponse() : DCMPixROIValuesResponse(nullptr) {}
  ~DCMPixROIValuesResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DCMPixROIValuesResponse(::google::protobuf::internal::ConstantInitialized);

  inline DCMPixROIValuesResponse(const DCMPixROIValuesResponse& from)
      : DCMPixROIValuesResponse(nullptr, from) {}
  DCMPixROIValuesResponse(DCMPixROIValuesResponse&& from) noexcept
    : DCMPixROIValuesResponse() {
    *this = ::std::move(from);
  }

  inline DCMPixROIValuesResponse& operator=(const DCMPixROIValuesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DCMPixROIValuesResponse& operator=(DCMPixROIValuesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DCMPixROIValuesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DCMPixROIValuesResponse* internal_default_instance() {
    return reinterpret_cast<const DCMPixROIValuesResponse*>(
               &_DCMPixROIValuesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(DCMPixROIValuesResponse& a, DCMPixROIValuesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DCMPixROIValuesResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DCMPixROIValuesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DCMPixROIValuesResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DCMPixROIValuesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DCMPixROIValuesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DCMPixROIValuesResponse& from) {
    DCMPixROIValuesResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DCMPixROIValuesResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.DCMPixROIValuesResponse";
  }
  protected:
  explicit DCMPixROIValuesResponse(::google::protobuf::Arena* arena);
  DCMPixROIValuesResponse(::google::protobuf::Arena* arena, const DCMPixROIValuesResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValuesFieldNumber = 2,
    kRowIndicesFieldNumber = 3,
    kColumnIndicesFieldNumber = 4,
    kStatusFieldNumber = 1,
  };
  // repeated float values = 2;
  int values_size() const;
  private:
  int _internal_values_size() const;

  public:
  void clear_values() ;
  float values(int index) const;
  void set_values(int index, float value);
  void add_values(float value);
  const ::google::protobuf::RepeatedField<float>& values() const;
  ::google::protobuf::RepeatedField<float>* mutable_values();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_values() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_values();

  public:
  // repeated int32 row_indices = 3;
  int row_indices_size() const;
  private:
  int _internal_row_indices_size() const;

  public:
  void clear_row_indices() ;
  ::int32_t row_indices(int index) const;
  void set_row_indices(int index, ::int32_t value);
  void add_row_indices(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& row_indices() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_row_indices();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_row_indices() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_row_indices();

  public:
  // repeated int32 column_indices = 4;
  int column_indices_size() const;
  private:
  int _internal_column_indices_size() const;

  public:
  void clear_column_indices() ;
  ::int32_t column_indices(int index) const;
  void set_column_indices(int index, ::int32_t value);
  void add_column_indices(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& column_indices() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_column_indices();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_column_indices() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_column_indices();

  public:
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::osirixgrpc::Status& status() const;
  PROTOBUF_NODISCARD ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* value);
  void unsafe_arena_set_allocated_status(::osirixgrpc::Status* value);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.DCMPixROIValuesResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<float> values_;
    ::google::protobuf::RepeatedField<::int32_t> row_indices_;
    mutable ::google::protobuf::internal::CachedSize _row_indices_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int32_t> column_indices_;
    mutable ::google::protobuf::internal::CachedSize _column_indices_cached_byte_size_;
    ::osirixgrpc::Status* status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dcmpix_2eproto;
};// -------------------------------------------------------------------

class DCMPixROIValuesRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DCMPixROIValuesRequest) */ {
 public:
  inline DCMPixROIValuesRequest() : DCMPixROIValuesRequest(nullptr) {}
  ~DCMPixROIValuesRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DCMPixROIValuesRequest(::google::protobuf::internal::ConstantInitialized);

  inline DCMPixROIValuesRequest(const DCMPixROIValuesRequest& from)
      : DCMPixROIValuesRequest(nullptr, from) {}
  DCMPixROIValuesRequest(DCMPixROIValuesRequest&& from) noexcept
    : DCMPixROIValuesRequest() {
    *this = ::std::move(from);
  }

  inline DCMPixROIValuesRequest& operator=(const DCMPixROIValuesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DCMPixROIValuesRequest& operator=(DCMPixROIValuesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DCMPixROIValuesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DCMPixROIValuesRequest* internal_default_instance() {
    return reinterpret_cast<const DCMPixROIValuesRequest*>(
               &_DCMPixROIValuesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(DCMPixROIValuesRequest& a, DCMPixROIValuesRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DCMPixROIValuesRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DCMPixROIValuesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DCMPixROIValuesRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DCMPixROIValuesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DCMPixROIValuesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DCMPixROIValuesRequest& from) {
    DCMPixROIValuesRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DCMPixROIValuesRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.DCMPixROIValuesRequest";
  }
  protected:
  explicit DCMPixROIValuesRequest(::google::protobuf::Arena* arena);
  DCMPixROIValuesRequest(::google::protobuf::Arena* arena, const DCMPixROIValuesRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPixFieldNumber = 1,
    kRoiFieldNumber = 2,
  };
  // .osirixgrpc.DCMPix pix = 1;
  bool has_pix() const;
  void clear_pix() ;
  const ::osirixgrpc::DCMPix& pix() const;
  PROTOBUF_NODISCARD ::osirixgrpc::DCMPix* release_pix();
  ::osirixgrpc::DCMPix* mutable_pix();
  void set_allocated_pix(::osirixgrpc::DCMPix* value);
  void unsafe_arena_set_allocated_pix(::osirixgrpc::DCMPix* value);
  ::osirixgrpc::DCMPix* unsafe_arena_release_pix();

  private:
  const ::osirixgrpc::DCMPix& _internal_pix() const;
  ::osirixgrpc::DCMPix* _internal_mutable_pix();

  public:
  // .osirixgrpc.ROI roi = 2;
  bool has_roi() const;
  void clear_roi() ;
  const ::osirixgrpc::ROI& roi() const;
  PROTOBUF_NODISCARD ::osirixgrpc::ROI* release_roi();
  ::osirixgrpc::ROI* mutable_roi();
  void set_allocated_roi(::osirixgrpc::ROI* value);
  void unsafe_arena_set_allocated_roi(::osirixgrpc::ROI* value);
  ::osirixgrpc::ROI* unsafe_arena_release_roi();

  private:
  const ::osirixgrpc::ROI& _internal_roi() const;
  ::osirixgrpc::ROI* _internal_mutable_roi();

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.DCMPixROIValuesRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::osirixgrpc::DCMPix* pix_;
    ::osirixgrpc::ROI* roi_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dcmpix_2eproto;
};// -------------------------------------------------------------------

class DCMPixOriginResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DCMPixOriginResponse) */ {
 public:
  inline DCMPixOriginResponse() : DCMPixOriginResponse(nullptr) {}
  ~DCMPixOriginResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DCMPixOriginResponse(::google::protobuf::internal::ConstantInitialized);

  inline DCMPixOriginResponse(const DCMPixOriginResponse& from)
      : DCMPixOriginResponse(nullptr, from) {}
  DCMPixOriginResponse(DCMPixOriginResponse&& from) noexcept
    : DCMPixOriginResponse() {
    *this = ::std::move(from);
  }

  inline DCMPixOriginResponse& operator=(const DCMPixOriginResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DCMPixOriginResponse& operator=(DCMPixOriginResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DCMPixOriginResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DCMPixOriginResponse* internal_default_instance() {
    return reinterpret_cast<const DCMPixOriginResponse*>(
               &_DCMPixOriginResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(DCMPixOriginResponse& a, DCMPixOriginResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DCMPixOriginResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DCMPixOriginResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DCMPixOriginResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DCMPixOriginResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DCMPixOriginResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DCMPixOriginResponse& from) {
    DCMPixOriginResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DCMPixOriginResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.DCMPixOriginResponse";
  }
  protected:
  explicit DCMPixOriginResponse(::google::protobuf::Arena* arena);
  DCMPixOriginResponse(::google::protobuf::Arena* arena, const DCMPixOriginResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kOriginRowsFieldNumber = 2,
    kOriginColumnsFieldNumber = 3,
    kOriginSlicesFieldNumber = 4,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::osirixgrpc::Status& status() const;
  PROTOBUF_NODISCARD ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* value);
  void unsafe_arena_set_allocated_status(::osirixgrpc::Status* value);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();

  public:
  // float origin_rows = 2;
  void clear_origin_rows() ;
  float origin_rows() const;
  void set_origin_rows(float value);

  private:
  float _internal_origin_rows() const;
  void _internal_set_origin_rows(float value);

  public:
  // float origin_columns = 3;
  void clear_origin_columns() ;
  float origin_columns() const;
  void set_origin_columns(float value);

  private:
  float _internal_origin_columns() const;
  void _internal_set_origin_columns(float value);

  public:
  // float origin_slices = 4;
  void clear_origin_slices() ;
  float origin_slices() const;
  void set_origin_slices(float value);

  private:
  float _internal_origin_slices() const;
  void _internal_set_origin_slices(float value);

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.DCMPixOriginResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::osirixgrpc::Status* status_;
    float origin_rows_;
    float origin_columns_;
    float origin_slices_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dcmpix_2eproto;
};// -------------------------------------------------------------------

class DCMPixOrientationResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DCMPixOrientationResponse) */ {
 public:
  inline DCMPixOrientationResponse() : DCMPixOrientationResponse(nullptr) {}
  ~DCMPixOrientationResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DCMPixOrientationResponse(::google::protobuf::internal::ConstantInitialized);

  inline DCMPixOrientationResponse(const DCMPixOrientationResponse& from)
      : DCMPixOrientationResponse(nullptr, from) {}
  DCMPixOrientationResponse(DCMPixOrientationResponse&& from) noexcept
    : DCMPixOrientationResponse() {
    *this = ::std::move(from);
  }

  inline DCMPixOrientationResponse& operator=(const DCMPixOrientationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DCMPixOrientationResponse& operator=(DCMPixOrientationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DCMPixOrientationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DCMPixOrientationResponse* internal_default_instance() {
    return reinterpret_cast<const DCMPixOrientationResponse*>(
               &_DCMPixOrientationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(DCMPixOrientationResponse& a, DCMPixOrientationResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DCMPixOrientationResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DCMPixOrientationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DCMPixOrientationResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DCMPixOrientationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DCMPixOrientationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DCMPixOrientationResponse& from) {
    DCMPixOrientationResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DCMPixOrientationResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.DCMPixOrientationResponse";
  }
  protected:
  explicit DCMPixOrientationResponse(::google::protobuf::Arena* arena);
  DCMPixOrientationResponse(::google::protobuf::Arena* arena, const DCMPixOrientationResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOrientationFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // repeated float orientation = 2;
  int orientation_size() const;
  private:
  int _internal_orientation_size() const;

  public:
  void clear_orientation() ;
  float orientation(int index) const;
  void set_orientation(int index, float value);
  void add_orientation(float value);
  const ::google::protobuf::RepeatedField<float>& orientation() const;
  ::google::protobuf::RepeatedField<float>* mutable_orientation();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_orientation() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_orientation();

  public:
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::osirixgrpc::Status& status() const;
  PROTOBUF_NODISCARD ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* value);
  void unsafe_arena_set_allocated_status(::osirixgrpc::Status* value);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.DCMPixOrientationResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<float> orientation_;
    ::osirixgrpc::Status* status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dcmpix_2eproto;
};// -------------------------------------------------------------------

class DCMPixIsRGBResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DCMPixIsRGBResponse) */ {
 public:
  inline DCMPixIsRGBResponse() : DCMPixIsRGBResponse(nullptr) {}
  ~DCMPixIsRGBResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DCMPixIsRGBResponse(::google::protobuf::internal::ConstantInitialized);

  inline DCMPixIsRGBResponse(const DCMPixIsRGBResponse& from)
      : DCMPixIsRGBResponse(nullptr, from) {}
  DCMPixIsRGBResponse(DCMPixIsRGBResponse&& from) noexcept
    : DCMPixIsRGBResponse() {
    *this = ::std::move(from);
  }

  inline DCMPixIsRGBResponse& operator=(const DCMPixIsRGBResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DCMPixIsRGBResponse& operator=(DCMPixIsRGBResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DCMPixIsRGBResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DCMPixIsRGBResponse* internal_default_instance() {
    return reinterpret_cast<const DCMPixIsRGBResponse*>(
               &_DCMPixIsRGBResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(DCMPixIsRGBResponse& a, DCMPixIsRGBResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DCMPixIsRGBResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DCMPixIsRGBResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DCMPixIsRGBResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DCMPixIsRGBResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DCMPixIsRGBResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DCMPixIsRGBResponse& from) {
    DCMPixIsRGBResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DCMPixIsRGBResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.DCMPixIsRGBResponse";
  }
  protected:
  explicit DCMPixIsRGBResponse(::google::protobuf::Arena* arena);
  DCMPixIsRGBResponse(::google::protobuf::Arena* arena, const DCMPixIsRGBResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kIsRgbFieldNumber = 2,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::osirixgrpc::Status& status() const;
  PROTOBUF_NODISCARD ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* value);
  void unsafe_arena_set_allocated_status(::osirixgrpc::Status* value);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();

  public:
  // bool is_rgb = 2;
  void clear_is_rgb() ;
  bool is_rgb() const;
  void set_is_rgb(bool value);

  private:
  bool _internal_is_rgb() const;
  void _internal_set_is_rgb(bool value);

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.DCMPixIsRGBResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::osirixgrpc::Status* status_;
    bool is_rgb_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dcmpix_2eproto;
};// -------------------------------------------------------------------

class DCMPixImageResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DCMPixImageResponse) */ {
 public:
  inline DCMPixImageResponse() : DCMPixImageResponse(nullptr) {}
  ~DCMPixImageResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DCMPixImageResponse(::google::protobuf::internal::ConstantInitialized);

  inline DCMPixImageResponse(const DCMPixImageResponse& from)
      : DCMPixImageResponse(nullptr, from) {}
  DCMPixImageResponse(DCMPixImageResponse&& from) noexcept
    : DCMPixImageResponse() {
    *this = ::std::move(from);
  }

  inline DCMPixImageResponse& operator=(const DCMPixImageResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DCMPixImageResponse& operator=(DCMPixImageResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DCMPixImageResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DCMPixImageResponse* internal_default_instance() {
    return reinterpret_cast<const DCMPixImageResponse*>(
               &_DCMPixImageResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(DCMPixImageResponse& a, DCMPixImageResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DCMPixImageResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DCMPixImageResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DCMPixImageResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DCMPixImageResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DCMPixImageResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DCMPixImageResponse& from) {
    DCMPixImageResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DCMPixImageResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.DCMPixImageResponse";
  }
  protected:
  explicit DCMPixImageResponse(::google::protobuf::Arena* arena);
  DCMPixImageResponse(::google::protobuf::Arena* arena, const DCMPixImageResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kImageDataFloatFieldNumber = 5,
    kImageDataArgbFieldNumber = 6,
    kStatusFieldNumber = 1,
    kRowsFieldNumber = 2,
    kColumnsFieldNumber = 3,
    kIsArgbFieldNumber = 4,
  };
  // repeated float image_data_float = 5;
  int image_data_float_size() const;
  private:
  int _internal_image_data_float_size() const;

  public:
  void clear_image_data_float() ;
  float image_data_float(int index) const;
  void set_image_data_float(int index, float value);
  void add_image_data_float(float value);
  const ::google::protobuf::RepeatedField<float>& image_data_float() const;
  ::google::protobuf::RepeatedField<float>* mutable_image_data_float();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_image_data_float() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_image_data_float();

  public:
  // repeated int32 image_data_argb = 6;
  int image_data_argb_size() const;
  private:
  int _internal_image_data_argb_size() const;

  public:
  void clear_image_data_argb() ;
  ::int32_t image_data_argb(int index) const;
  void set_image_data_argb(int index, ::int32_t value);
  void add_image_data_argb(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& image_data_argb() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_image_data_argb();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_image_data_argb() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_image_data_argb();

  public:
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::osirixgrpc::Status& status() const;
  PROTOBUF_NODISCARD ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* value);
  void unsafe_arena_set_allocated_status(::osirixgrpc::Status* value);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();

  public:
  // int32 rows = 2;
  void clear_rows() ;
  ::int32_t rows() const;
  void set_rows(::int32_t value);

  private:
  ::int32_t _internal_rows() const;
  void _internal_set_rows(::int32_t value);

  public:
  // int32 columns = 3;
  void clear_columns() ;
  ::int32_t columns() const;
  void set_columns(::int32_t value);

  private:
  ::int32_t _internal_columns() const;
  void _internal_set_columns(::int32_t value);

  public:
  // bool is_argb = 4;
  void clear_is_argb() ;
  bool is_argb() const;
  void set_is_argb(bool value);

  private:
  bool _internal_is_argb() const;
  void _internal_set_is_argb(bool value);

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.DCMPixImageResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<float> image_data_float_;
    ::google::protobuf::RepeatedField<::int32_t> image_data_argb_;
    mutable ::google::protobuf::internal::CachedSize _image_data_argb_cached_byte_size_;
    ::osirixgrpc::Status* status_;
    ::int32_t rows_;
    ::int32_t columns_;
    bool is_argb_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dcmpix_2eproto;
};// -------------------------------------------------------------------

class DCMPixGetMapFromROIResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DCMPixGetMapFromROIResponse) */ {
 public:
  inline DCMPixGetMapFromROIResponse() : DCMPixGetMapFromROIResponse(nullptr) {}
  ~DCMPixGetMapFromROIResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DCMPixGetMapFromROIResponse(::google::protobuf::internal::ConstantInitialized);

  inline DCMPixGetMapFromROIResponse(const DCMPixGetMapFromROIResponse& from)
      : DCMPixGetMapFromROIResponse(nullptr, from) {}
  DCMPixGetMapFromROIResponse(DCMPixGetMapFromROIResponse&& from) noexcept
    : DCMPixGetMapFromROIResponse() {
    *this = ::std::move(from);
  }

  inline DCMPixGetMapFromROIResponse& operator=(const DCMPixGetMapFromROIResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DCMPixGetMapFromROIResponse& operator=(DCMPixGetMapFromROIResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DCMPixGetMapFromROIResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DCMPixGetMapFromROIResponse* internal_default_instance() {
    return reinterpret_cast<const DCMPixGetMapFromROIResponse*>(
               &_DCMPixGetMapFromROIResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(DCMPixGetMapFromROIResponse& a, DCMPixGetMapFromROIResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DCMPixGetMapFromROIResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DCMPixGetMapFromROIResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DCMPixGetMapFromROIResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DCMPixGetMapFromROIResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DCMPixGetMapFromROIResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DCMPixGetMapFromROIResponse& from) {
    DCMPixGetMapFromROIResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DCMPixGetMapFromROIResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.DCMPixGetMapFromROIResponse";
  }
  protected:
  explicit DCMPixGetMapFromROIResponse(::google::protobuf::Arena* arena);
  DCMPixGetMapFromROIResponse(::google::protobuf::Arena* arena, const DCMPixGetMapFromROIResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMapFieldNumber = 4,
    kStatusFieldNumber = 1,
    kRowsFieldNumber = 2,
    kColumnsFieldNumber = 3,
  };
  // repeated bool map = 4;
  int map_size() const;
  private:
  int _internal_map_size() const;

  public:
  void clear_map() ;
  bool map(int index) const;
  void set_map(int index, bool value);
  void add_map(bool value);
  const ::google::protobuf::RepeatedField<bool>& map() const;
  ::google::protobuf::RepeatedField<bool>* mutable_map();

  private:
  const ::google::protobuf::RepeatedField<bool>& _internal_map() const;
  ::google::protobuf::RepeatedField<bool>* _internal_mutable_map();

  public:
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::osirixgrpc::Status& status() const;
  PROTOBUF_NODISCARD ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* value);
  void unsafe_arena_set_allocated_status(::osirixgrpc::Status* value);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();

  public:
  // int32 rows = 2;
  void clear_rows() ;
  ::int32_t rows() const;
  void set_rows(::int32_t value);

  private:
  ::int32_t _internal_rows() const;
  void _internal_set_rows(::int32_t value);

  public:
  // int32 columns = 3;
  void clear_columns() ;
  ::int32_t columns() const;
  void set_columns(::int32_t value);

  private:
  ::int32_t _internal_columns() const;
  void _internal_set_columns(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.DCMPixGetMapFromROIResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<bool> map_;
    ::osirixgrpc::Status* status_;
    ::int32_t rows_;
    ::int32_t columns_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dcmpix_2eproto;
};// -------------------------------------------------------------------

class DCMPixGetMapFromROIRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DCMPixGetMapFromROIRequest) */ {
 public:
  inline DCMPixGetMapFromROIRequest() : DCMPixGetMapFromROIRequest(nullptr) {}
  ~DCMPixGetMapFromROIRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DCMPixGetMapFromROIRequest(::google::protobuf::internal::ConstantInitialized);

  inline DCMPixGetMapFromROIRequest(const DCMPixGetMapFromROIRequest& from)
      : DCMPixGetMapFromROIRequest(nullptr, from) {}
  DCMPixGetMapFromROIRequest(DCMPixGetMapFromROIRequest&& from) noexcept
    : DCMPixGetMapFromROIRequest() {
    *this = ::std::move(from);
  }

  inline DCMPixGetMapFromROIRequest& operator=(const DCMPixGetMapFromROIRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DCMPixGetMapFromROIRequest& operator=(DCMPixGetMapFromROIRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DCMPixGetMapFromROIRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DCMPixGetMapFromROIRequest* internal_default_instance() {
    return reinterpret_cast<const DCMPixGetMapFromROIRequest*>(
               &_DCMPixGetMapFromROIRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(DCMPixGetMapFromROIRequest& a, DCMPixGetMapFromROIRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DCMPixGetMapFromROIRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DCMPixGetMapFromROIRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DCMPixGetMapFromROIRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DCMPixGetMapFromROIRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DCMPixGetMapFromROIRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DCMPixGetMapFromROIRequest& from) {
    DCMPixGetMapFromROIRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DCMPixGetMapFromROIRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.DCMPixGetMapFromROIRequest";
  }
  protected:
  explicit DCMPixGetMapFromROIRequest(::google::protobuf::Arena* arena);
  DCMPixGetMapFromROIRequest(::google::protobuf::Arena* arena, const DCMPixGetMapFromROIRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPixFieldNumber = 1,
    kRoiFieldNumber = 2,
  };
  // .osirixgrpc.DCMPix pix = 1;
  bool has_pix() const;
  void clear_pix() ;
  const ::osirixgrpc::DCMPix& pix() const;
  PROTOBUF_NODISCARD ::osirixgrpc::DCMPix* release_pix();
  ::osirixgrpc::DCMPix* mutable_pix();
  void set_allocated_pix(::osirixgrpc::DCMPix* value);
  void unsafe_arena_set_allocated_pix(::osirixgrpc::DCMPix* value);
  ::osirixgrpc::DCMPix* unsafe_arena_release_pix();

  private:
  const ::osirixgrpc::DCMPix& _internal_pix() const;
  ::osirixgrpc::DCMPix* _internal_mutable_pix();

  public:
  // .osirixgrpc.ROI roi = 2;
  bool has_roi() const;
  void clear_roi() ;
  const ::osirixgrpc::ROI& roi() const;
  PROTOBUF_NODISCARD ::osirixgrpc::ROI* release_roi();
  ::osirixgrpc::ROI* mutable_roi();
  void set_allocated_roi(::osirixgrpc::ROI* value);
  void unsafe_arena_set_allocated_roi(::osirixgrpc::ROI* value);
  ::osirixgrpc::ROI* unsafe_arena_release_roi();

  private:
  const ::osirixgrpc::ROI& _internal_roi() const;
  ::osirixgrpc::ROI* _internal_mutable_roi();

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.DCMPixGetMapFromROIRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::osirixgrpc::DCMPix* pix_;
    ::osirixgrpc::ROI* roi_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dcmpix_2eproto;
};// -------------------------------------------------------------------

class DCMPixDicomStudyResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DCMPixDicomStudyResponse) */ {
 public:
  inline DCMPixDicomStudyResponse() : DCMPixDicomStudyResponse(nullptr) {}
  ~DCMPixDicomStudyResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DCMPixDicomStudyResponse(::google::protobuf::internal::ConstantInitialized);

  inline DCMPixDicomStudyResponse(const DCMPixDicomStudyResponse& from)
      : DCMPixDicomStudyResponse(nullptr, from) {}
  DCMPixDicomStudyResponse(DCMPixDicomStudyResponse&& from) noexcept
    : DCMPixDicomStudyResponse() {
    *this = ::std::move(from);
  }

  inline DCMPixDicomStudyResponse& operator=(const DCMPixDicomStudyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DCMPixDicomStudyResponse& operator=(DCMPixDicomStudyResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DCMPixDicomStudyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DCMPixDicomStudyResponse* internal_default_instance() {
    return reinterpret_cast<const DCMPixDicomStudyResponse*>(
               &_DCMPixDicomStudyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(DCMPixDicomStudyResponse& a, DCMPixDicomStudyResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DCMPixDicomStudyResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DCMPixDicomStudyResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DCMPixDicomStudyResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DCMPixDicomStudyResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DCMPixDicomStudyResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DCMPixDicomStudyResponse& from) {
    DCMPixDicomStudyResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DCMPixDicomStudyResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.DCMPixDicomStudyResponse";
  }
  protected:
  explicit DCMPixDicomStudyResponse(::google::protobuf::Arena* arena);
  DCMPixDicomStudyResponse(::google::protobuf::Arena* arena, const DCMPixDicomStudyResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kDicomStudyFieldNumber = 2,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::osirixgrpc::Status& status() const;
  PROTOBUF_NODISCARD ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* value);
  void unsafe_arena_set_allocated_status(::osirixgrpc::Status* value);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();

  public:
  // .osirixgrpc.DicomStudy dicom_study = 2;
  bool has_dicom_study() const;
  void clear_dicom_study() ;
  const ::osirixgrpc::DicomStudy& dicom_study() const;
  PROTOBUF_NODISCARD ::osirixgrpc::DicomStudy* release_dicom_study();
  ::osirixgrpc::DicomStudy* mutable_dicom_study();
  void set_allocated_dicom_study(::osirixgrpc::DicomStudy* value);
  void unsafe_arena_set_allocated_dicom_study(::osirixgrpc::DicomStudy* value);
  ::osirixgrpc::DicomStudy* unsafe_arena_release_dicom_study();

  private:
  const ::osirixgrpc::DicomStudy& _internal_dicom_study() const;
  ::osirixgrpc::DicomStudy* _internal_mutable_dicom_study();

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.DCMPixDicomStudyResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::osirixgrpc::Status* status_;
    ::osirixgrpc::DicomStudy* dicom_study_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dcmpix_2eproto;
};// -------------------------------------------------------------------

class DCMPixDicomSeriesResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DCMPixDicomSeriesResponse) */ {
 public:
  inline DCMPixDicomSeriesResponse() : DCMPixDicomSeriesResponse(nullptr) {}
  ~DCMPixDicomSeriesResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DCMPixDicomSeriesResponse(::google::protobuf::internal::ConstantInitialized);

  inline DCMPixDicomSeriesResponse(const DCMPixDicomSeriesResponse& from)
      : DCMPixDicomSeriesResponse(nullptr, from) {}
  DCMPixDicomSeriesResponse(DCMPixDicomSeriesResponse&& from) noexcept
    : DCMPixDicomSeriesResponse() {
    *this = ::std::move(from);
  }

  inline DCMPixDicomSeriesResponse& operator=(const DCMPixDicomSeriesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DCMPixDicomSeriesResponse& operator=(DCMPixDicomSeriesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DCMPixDicomSeriesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DCMPixDicomSeriesResponse* internal_default_instance() {
    return reinterpret_cast<const DCMPixDicomSeriesResponse*>(
               &_DCMPixDicomSeriesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(DCMPixDicomSeriesResponse& a, DCMPixDicomSeriesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DCMPixDicomSeriesResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DCMPixDicomSeriesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DCMPixDicomSeriesResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DCMPixDicomSeriesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DCMPixDicomSeriesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DCMPixDicomSeriesResponse& from) {
    DCMPixDicomSeriesResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DCMPixDicomSeriesResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.DCMPixDicomSeriesResponse";
  }
  protected:
  explicit DCMPixDicomSeriesResponse(::google::protobuf::Arena* arena);
  DCMPixDicomSeriesResponse(::google::protobuf::Arena* arena, const DCMPixDicomSeriesResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kDicomSeriesFieldNumber = 2,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::osirixgrpc::Status& status() const;
  PROTOBUF_NODISCARD ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* value);
  void unsafe_arena_set_allocated_status(::osirixgrpc::Status* value);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();

  public:
  // .osirixgrpc.DicomSeries dicom_series = 2;
  bool has_dicom_series() const;
  void clear_dicom_series() ;
  const ::osirixgrpc::DicomSeries& dicom_series() const;
  PROTOBUF_NODISCARD ::osirixgrpc::DicomSeries* release_dicom_series();
  ::osirixgrpc::DicomSeries* mutable_dicom_series();
  void set_allocated_dicom_series(::osirixgrpc::DicomSeries* value);
  void unsafe_arena_set_allocated_dicom_series(::osirixgrpc::DicomSeries* value);
  ::osirixgrpc::DicomSeries* unsafe_arena_release_dicom_series();

  private:
  const ::osirixgrpc::DicomSeries& _internal_dicom_series() const;
  ::osirixgrpc::DicomSeries* _internal_mutable_dicom_series();

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.DCMPixDicomSeriesResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::osirixgrpc::Status* status_;
    ::osirixgrpc::DicomSeries* dicom_series_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dcmpix_2eproto;
};// -------------------------------------------------------------------

class DCMPixDicomImageResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DCMPixDicomImageResponse) */ {
 public:
  inline DCMPixDicomImageResponse() : DCMPixDicomImageResponse(nullptr) {}
  ~DCMPixDicomImageResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DCMPixDicomImageResponse(::google::protobuf::internal::ConstantInitialized);

  inline DCMPixDicomImageResponse(const DCMPixDicomImageResponse& from)
      : DCMPixDicomImageResponse(nullptr, from) {}
  DCMPixDicomImageResponse(DCMPixDicomImageResponse&& from) noexcept
    : DCMPixDicomImageResponse() {
    *this = ::std::move(from);
  }

  inline DCMPixDicomImageResponse& operator=(const DCMPixDicomImageResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DCMPixDicomImageResponse& operator=(DCMPixDicomImageResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DCMPixDicomImageResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DCMPixDicomImageResponse* internal_default_instance() {
    return reinterpret_cast<const DCMPixDicomImageResponse*>(
               &_DCMPixDicomImageResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(DCMPixDicomImageResponse& a, DCMPixDicomImageResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DCMPixDicomImageResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DCMPixDicomImageResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DCMPixDicomImageResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DCMPixDicomImageResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DCMPixDicomImageResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DCMPixDicomImageResponse& from) {
    DCMPixDicomImageResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DCMPixDicomImageResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.DCMPixDicomImageResponse";
  }
  protected:
  explicit DCMPixDicomImageResponse(::google::protobuf::Arena* arena);
  DCMPixDicomImageResponse(::google::protobuf::Arena* arena, const DCMPixDicomImageResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kDicomImageFieldNumber = 2,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::osirixgrpc::Status& status() const;
  PROTOBUF_NODISCARD ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* value);
  void unsafe_arena_set_allocated_status(::osirixgrpc::Status* value);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();

  public:
  // .osirixgrpc.DicomImage dicom_image = 2;
  bool has_dicom_image() const;
  void clear_dicom_image() ;
  const ::osirixgrpc::DicomImage& dicom_image() const;
  PROTOBUF_NODISCARD ::osirixgrpc::DicomImage* release_dicom_image();
  ::osirixgrpc::DicomImage* mutable_dicom_image();
  void set_allocated_dicom_image(::osirixgrpc::DicomImage* value);
  void unsafe_arena_set_allocated_dicom_image(::osirixgrpc::DicomImage* value);
  ::osirixgrpc::DicomImage* unsafe_arena_release_dicom_image();

  private:
  const ::osirixgrpc::DicomImage& _internal_dicom_image() const;
  ::osirixgrpc::DicomImage* _internal_mutable_dicom_image();

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.DCMPixDicomImageResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::osirixgrpc::Status* status_;
    ::osirixgrpc::DicomImage* dicom_image_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dcmpix_2eproto;
};// -------------------------------------------------------------------

class DCMPixConvertToRGBRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DCMPixConvertToRGBRequest) */ {
 public:
  inline DCMPixConvertToRGBRequest() : DCMPixConvertToRGBRequest(nullptr) {}
  ~DCMPixConvertToRGBRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DCMPixConvertToRGBRequest(::google::protobuf::internal::ConstantInitialized);

  inline DCMPixConvertToRGBRequest(const DCMPixConvertToRGBRequest& from)
      : DCMPixConvertToRGBRequest(nullptr, from) {}
  DCMPixConvertToRGBRequest(DCMPixConvertToRGBRequest&& from) noexcept
    : DCMPixConvertToRGBRequest() {
    *this = ::std::move(from);
  }

  inline DCMPixConvertToRGBRequest& operator=(const DCMPixConvertToRGBRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DCMPixConvertToRGBRequest& operator=(DCMPixConvertToRGBRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DCMPixConvertToRGBRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DCMPixConvertToRGBRequest* internal_default_instance() {
    return reinterpret_cast<const DCMPixConvertToRGBRequest*>(
               &_DCMPixConvertToRGBRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(DCMPixConvertToRGBRequest& a, DCMPixConvertToRGBRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DCMPixConvertToRGBRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DCMPixConvertToRGBRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DCMPixConvertToRGBRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DCMPixConvertToRGBRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DCMPixConvertToRGBRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DCMPixConvertToRGBRequest& from) {
    DCMPixConvertToRGBRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DCMPixConvertToRGBRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.DCMPixConvertToRGBRequest";
  }
  protected:
  explicit DCMPixConvertToRGBRequest(::google::protobuf::Arena* arena);
  DCMPixConvertToRGBRequest(::google::protobuf::Arena* arena, const DCMPixConvertToRGBRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPixFieldNumber = 1,
    kRgbChannelFieldNumber = 2,
  };
  // .osirixgrpc.DCMPix pix = 1;
  bool has_pix() const;
  void clear_pix() ;
  const ::osirixgrpc::DCMPix& pix() const;
  PROTOBUF_NODISCARD ::osirixgrpc::DCMPix* release_pix();
  ::osirixgrpc::DCMPix* mutable_pix();
  void set_allocated_pix(::osirixgrpc::DCMPix* value);
  void unsafe_arena_set_allocated_pix(::osirixgrpc::DCMPix* value);
  ::osirixgrpc::DCMPix* unsafe_arena_release_pix();

  private:
  const ::osirixgrpc::DCMPix& _internal_pix() const;
  ::osirixgrpc::DCMPix* _internal_mutable_pix();

  public:
  // int32 rgb_channel = 2;
  void clear_rgb_channel() ;
  ::int32_t rgb_channel() const;
  void set_rgb_channel(::int32_t value);

  private:
  ::int32_t _internal_rgb_channel() const;
  void _internal_set_rgb_channel(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.DCMPixConvertToRGBRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::osirixgrpc::DCMPix* pix_;
    ::int32_t rgb_channel_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dcmpix_2eproto;
};// -------------------------------------------------------------------

class DCMPixConvertToBWRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DCMPixConvertToBWRequest) */ {
 public:
  inline DCMPixConvertToBWRequest() : DCMPixConvertToBWRequest(nullptr) {}
  ~DCMPixConvertToBWRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DCMPixConvertToBWRequest(::google::protobuf::internal::ConstantInitialized);

  inline DCMPixConvertToBWRequest(const DCMPixConvertToBWRequest& from)
      : DCMPixConvertToBWRequest(nullptr, from) {}
  DCMPixConvertToBWRequest(DCMPixConvertToBWRequest&& from) noexcept
    : DCMPixConvertToBWRequest() {
    *this = ::std::move(from);
  }

  inline DCMPixConvertToBWRequest& operator=(const DCMPixConvertToBWRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DCMPixConvertToBWRequest& operator=(DCMPixConvertToBWRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DCMPixConvertToBWRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DCMPixConvertToBWRequest* internal_default_instance() {
    return reinterpret_cast<const DCMPixConvertToBWRequest*>(
               &_DCMPixConvertToBWRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(DCMPixConvertToBWRequest& a, DCMPixConvertToBWRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DCMPixConvertToBWRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DCMPixConvertToBWRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DCMPixConvertToBWRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DCMPixConvertToBWRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DCMPixConvertToBWRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DCMPixConvertToBWRequest& from) {
    DCMPixConvertToBWRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DCMPixConvertToBWRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.DCMPixConvertToBWRequest";
  }
  protected:
  explicit DCMPixConvertToBWRequest(::google::protobuf::Arena* arena);
  DCMPixConvertToBWRequest(::google::protobuf::Arena* arena, const DCMPixConvertToBWRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPixFieldNumber = 1,
    kBwChannelFieldNumber = 2,
  };
  // .osirixgrpc.DCMPix pix = 1;
  bool has_pix() const;
  void clear_pix() ;
  const ::osirixgrpc::DCMPix& pix() const;
  PROTOBUF_NODISCARD ::osirixgrpc::DCMPix* release_pix();
  ::osirixgrpc::DCMPix* mutable_pix();
  void set_allocated_pix(::osirixgrpc::DCMPix* value);
  void unsafe_arena_set_allocated_pix(::osirixgrpc::DCMPix* value);
  ::osirixgrpc::DCMPix* unsafe_arena_release_pix();

  private:
  const ::osirixgrpc::DCMPix& _internal_pix() const;
  ::osirixgrpc::DCMPix* _internal_mutable_pix();

  public:
  // int32 bw_channel = 2;
  void clear_bw_channel() ;
  ::int32_t bw_channel() const;
  void set_bw_channel(::int32_t value);

  private:
  ::int32_t _internal_bw_channel() const;
  void _internal_set_bw_channel(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.DCMPixConvertToBWRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::osirixgrpc::DCMPix* pix_;
    ::int32_t bw_channel_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dcmpix_2eproto;
};// -------------------------------------------------------------------

class DCMPixComputeROIResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DCMPixComputeROIResponse) */ {
 public:
  inline DCMPixComputeROIResponse() : DCMPixComputeROIResponse(nullptr) {}
  ~DCMPixComputeROIResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DCMPixComputeROIResponse(::google::protobuf::internal::ConstantInitialized);

  inline DCMPixComputeROIResponse(const DCMPixComputeROIResponse& from)
      : DCMPixComputeROIResponse(nullptr, from) {}
  DCMPixComputeROIResponse(DCMPixComputeROIResponse&& from) noexcept
    : DCMPixComputeROIResponse() {
    *this = ::std::move(from);
  }

  inline DCMPixComputeROIResponse& operator=(const DCMPixComputeROIResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DCMPixComputeROIResponse& operator=(DCMPixComputeROIResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DCMPixComputeROIResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DCMPixComputeROIResponse* internal_default_instance() {
    return reinterpret_cast<const DCMPixComputeROIResponse*>(
               &_DCMPixComputeROIResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(DCMPixComputeROIResponse& a, DCMPixComputeROIResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DCMPixComputeROIResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DCMPixComputeROIResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DCMPixComputeROIResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DCMPixComputeROIResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DCMPixComputeROIResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DCMPixComputeROIResponse& from) {
    DCMPixComputeROIResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DCMPixComputeROIResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.DCMPixComputeROIResponse";
  }
  protected:
  explicit DCMPixComputeROIResponse(::google::protobuf::Arena* arena);
  DCMPixComputeROIResponse(::google::protobuf::Arena* arena, const DCMPixComputeROIResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kMeanFieldNumber = 2,
    kTotalFieldNumber = 3,
    kStdDevFieldNumber = 4,
    kMinFieldNumber = 5,
    kMaxFieldNumber = 6,
    kSkewnessFieldNumber = 7,
    kKurtosisFieldNumber = 8,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::osirixgrpc::Status& status() const;
  PROTOBUF_NODISCARD ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* value);
  void unsafe_arena_set_allocated_status(::osirixgrpc::Status* value);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();

  public:
  // float mean = 2;
  void clear_mean() ;
  float mean() const;
  void set_mean(float value);

  private:
  float _internal_mean() const;
  void _internal_set_mean(float value);

  public:
  // float total = 3;
  void clear_total() ;
  float total() const;
  void set_total(float value);

  private:
  float _internal_total() const;
  void _internal_set_total(float value);

  public:
  // float std_dev = 4;
  void clear_std_dev() ;
  float std_dev() const;
  void set_std_dev(float value);

  private:
  float _internal_std_dev() const;
  void _internal_set_std_dev(float value);

  public:
  // float min = 5;
  void clear_min() ;
  float min() const;
  void set_min(float value);

  private:
  float _internal_min() const;
  void _internal_set_min(float value);

  public:
  // float max = 6;
  void clear_max() ;
  float max() const;
  void set_max(float value);

  private:
  float _internal_max() const;
  void _internal_set_max(float value);

  public:
  // float skewness = 7;
  void clear_skewness() ;
  float skewness() const;
  void set_skewness(float value);

  private:
  float _internal_skewness() const;
  void _internal_set_skewness(float value);

  public:
  // float kurtosis = 8;
  void clear_kurtosis() ;
  float kurtosis() const;
  void set_kurtosis(float value);

  private:
  float _internal_kurtosis() const;
  void _internal_set_kurtosis(float value);

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.DCMPixComputeROIResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::osirixgrpc::Status* status_;
    float mean_;
    float total_;
    float std_dev_;
    float min_;
    float max_;
    float skewness_;
    float kurtosis_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dcmpix_2eproto;
};// -------------------------------------------------------------------

class DCMPixComputeROIRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DCMPixComputeROIRequest) */ {
 public:
  inline DCMPixComputeROIRequest() : DCMPixComputeROIRequest(nullptr) {}
  ~DCMPixComputeROIRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DCMPixComputeROIRequest(::google::protobuf::internal::ConstantInitialized);

  inline DCMPixComputeROIRequest(const DCMPixComputeROIRequest& from)
      : DCMPixComputeROIRequest(nullptr, from) {}
  DCMPixComputeROIRequest(DCMPixComputeROIRequest&& from) noexcept
    : DCMPixComputeROIRequest() {
    *this = ::std::move(from);
  }

  inline DCMPixComputeROIRequest& operator=(const DCMPixComputeROIRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DCMPixComputeROIRequest& operator=(DCMPixComputeROIRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DCMPixComputeROIRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DCMPixComputeROIRequest* internal_default_instance() {
    return reinterpret_cast<const DCMPixComputeROIRequest*>(
               &_DCMPixComputeROIRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(DCMPixComputeROIRequest& a, DCMPixComputeROIRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DCMPixComputeROIRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DCMPixComputeROIRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DCMPixComputeROIRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DCMPixComputeROIRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DCMPixComputeROIRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DCMPixComputeROIRequest& from) {
    DCMPixComputeROIRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DCMPixComputeROIRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "osirixgrpc.DCMPixComputeROIRequest";
  }
  protected:
  explicit DCMPixComputeROIRequest(::google::protobuf::Arena* arena);
  DCMPixComputeROIRequest(::google::protobuf::Arena* arena, const DCMPixComputeROIRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPixFieldNumber = 1,
    kRoiFieldNumber = 2,
  };
  // .osirixgrpc.DCMPix pix = 1;
  bool has_pix() const;
  void clear_pix() ;
  const ::osirixgrpc::DCMPix& pix() const;
  PROTOBUF_NODISCARD ::osirixgrpc::DCMPix* release_pix();
  ::osirixgrpc::DCMPix* mutable_pix();
  void set_allocated_pix(::osirixgrpc::DCMPix* value);
  void unsafe_arena_set_allocated_pix(::osirixgrpc::DCMPix* value);
  ::osirixgrpc::DCMPix* unsafe_arena_release_pix();

  private:
  const ::osirixgrpc::DCMPix& _internal_pix() const;
  ::osirixgrpc::DCMPix* _internal_mutable_pix();

  public:
  // .osirixgrpc.ROI roi = 2;
  bool has_roi() const;
  void clear_roi() ;
  const ::osirixgrpc::ROI& roi() const;
  PROTOBUF_NODISCARD ::osirixgrpc::ROI* release_roi();
  ::osirixgrpc::ROI* mutable_roi();
  void set_allocated_roi(::osirixgrpc::ROI* value);
  void unsafe_arena_set_allocated_roi(::osirixgrpc::ROI* value);
  ::osirixgrpc::ROI* unsafe_arena_release_roi();

  private:
  const ::osirixgrpc::ROI& _internal_roi() const;
  ::osirixgrpc::ROI* _internal_mutable_roi();

  public:
  // @@protoc_insertion_point(class_scope:osirixgrpc.DCMPixComputeROIRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::osirixgrpc::DCMPix* pix_;
    ::osirixgrpc::ROI* roi_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dcmpix_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// DCMPixIsRGBResponse

// .osirixgrpc.Status status = 1;
inline bool DCMPixIsRGBResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::osirixgrpc::Status& DCMPixIsRGBResponse::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DCMPixIsRGBResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixIsRGBResponse.status)
  return _internal_status();
}
inline void DCMPixIsRGBResponse::unsafe_arena_set_allocated_status(::osirixgrpc::Status* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DCMPixIsRGBResponse.status)
}
inline ::osirixgrpc::Status* DCMPixIsRGBResponse::release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* released = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::Status* DCMPixIsRGBResponse::unsafe_arena_release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.DCMPixIsRGBResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DCMPixIsRGBResponse::_internal_mutable_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(p);
  }
  return _impl_.status_;
}
inline ::osirixgrpc::Status* DCMPixIsRGBResponse::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DCMPixIsRGBResponse.status)
  return _msg;
}
inline void DCMPixIsRGBResponse::set_allocated_status(::osirixgrpc::Status* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DCMPixIsRGBResponse.status)
}

// bool is_rgb = 2;
inline void DCMPixIsRGBResponse::clear_is_rgb() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.is_rgb_ = false;
}
inline bool DCMPixIsRGBResponse::is_rgb() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixIsRGBResponse.is_rgb)
  return _internal_is_rgb();
}
inline void DCMPixIsRGBResponse::set_is_rgb(bool value) {
  _internal_set_is_rgb(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DCMPixIsRGBResponse.is_rgb)
}
inline bool DCMPixIsRGBResponse::_internal_is_rgb() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.is_rgb_;
}
inline void DCMPixIsRGBResponse::_internal_set_is_rgb(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.is_rgb_ = value;
}

// -------------------------------------------------------------------

// DCMPixComputeROIResponse

// .osirixgrpc.Status status = 1;
inline bool DCMPixComputeROIResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::osirixgrpc::Status& DCMPixComputeROIResponse::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DCMPixComputeROIResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixComputeROIResponse.status)
  return _internal_status();
}
inline void DCMPixComputeROIResponse::unsafe_arena_set_allocated_status(::osirixgrpc::Status* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DCMPixComputeROIResponse.status)
}
inline ::osirixgrpc::Status* DCMPixComputeROIResponse::release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* released = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::Status* DCMPixComputeROIResponse::unsafe_arena_release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.DCMPixComputeROIResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DCMPixComputeROIResponse::_internal_mutable_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(p);
  }
  return _impl_.status_;
}
inline ::osirixgrpc::Status* DCMPixComputeROIResponse::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DCMPixComputeROIResponse.status)
  return _msg;
}
inline void DCMPixComputeROIResponse::set_allocated_status(::osirixgrpc::Status* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DCMPixComputeROIResponse.status)
}

// float mean = 2;
inline void DCMPixComputeROIResponse::clear_mean() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mean_ = 0;
}
inline float DCMPixComputeROIResponse::mean() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixComputeROIResponse.mean)
  return _internal_mean();
}
inline void DCMPixComputeROIResponse::set_mean(float value) {
  _internal_set_mean(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DCMPixComputeROIResponse.mean)
}
inline float DCMPixComputeROIResponse::_internal_mean() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mean_;
}
inline void DCMPixComputeROIResponse::_internal_set_mean(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mean_ = value;
}

// float total = 3;
inline void DCMPixComputeROIResponse::clear_total() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.total_ = 0;
}
inline float DCMPixComputeROIResponse::total() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixComputeROIResponse.total)
  return _internal_total();
}
inline void DCMPixComputeROIResponse::set_total(float value) {
  _internal_set_total(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DCMPixComputeROIResponse.total)
}
inline float DCMPixComputeROIResponse::_internal_total() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.total_;
}
inline void DCMPixComputeROIResponse::_internal_set_total(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.total_ = value;
}

// float std_dev = 4;
inline void DCMPixComputeROIResponse::clear_std_dev() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.std_dev_ = 0;
}
inline float DCMPixComputeROIResponse::std_dev() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixComputeROIResponse.std_dev)
  return _internal_std_dev();
}
inline void DCMPixComputeROIResponse::set_std_dev(float value) {
  _internal_set_std_dev(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DCMPixComputeROIResponse.std_dev)
}
inline float DCMPixComputeROIResponse::_internal_std_dev() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.std_dev_;
}
inline void DCMPixComputeROIResponse::_internal_set_std_dev(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.std_dev_ = value;
}

// float min = 5;
inline void DCMPixComputeROIResponse::clear_min() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.min_ = 0;
}
inline float DCMPixComputeROIResponse::min() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixComputeROIResponse.min)
  return _internal_min();
}
inline void DCMPixComputeROIResponse::set_min(float value) {
  _internal_set_min(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DCMPixComputeROIResponse.min)
}
inline float DCMPixComputeROIResponse::_internal_min() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.min_;
}
inline void DCMPixComputeROIResponse::_internal_set_min(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.min_ = value;
}

// float max = 6;
inline void DCMPixComputeROIResponse::clear_max() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.max_ = 0;
}
inline float DCMPixComputeROIResponse::max() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixComputeROIResponse.max)
  return _internal_max();
}
inline void DCMPixComputeROIResponse::set_max(float value) {
  _internal_set_max(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DCMPixComputeROIResponse.max)
}
inline float DCMPixComputeROIResponse::_internal_max() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.max_;
}
inline void DCMPixComputeROIResponse::_internal_set_max(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.max_ = value;
}

// float skewness = 7;
inline void DCMPixComputeROIResponse::clear_skewness() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.skewness_ = 0;
}
inline float DCMPixComputeROIResponse::skewness() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixComputeROIResponse.skewness)
  return _internal_skewness();
}
inline void DCMPixComputeROIResponse::set_skewness(float value) {
  _internal_set_skewness(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DCMPixComputeROIResponse.skewness)
}
inline float DCMPixComputeROIResponse::_internal_skewness() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.skewness_;
}
inline void DCMPixComputeROIResponse::_internal_set_skewness(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.skewness_ = value;
}

// float kurtosis = 8;
inline void DCMPixComputeROIResponse::clear_kurtosis() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.kurtosis_ = 0;
}
inline float DCMPixComputeROIResponse::kurtosis() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixComputeROIResponse.kurtosis)
  return _internal_kurtosis();
}
inline void DCMPixComputeROIResponse::set_kurtosis(float value) {
  _internal_set_kurtosis(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DCMPixComputeROIResponse.kurtosis)
}
inline float DCMPixComputeROIResponse::_internal_kurtosis() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kurtosis_;
}
inline void DCMPixComputeROIResponse::_internal_set_kurtosis(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.kurtosis_ = value;
}

// -------------------------------------------------------------------

// DCMPixROIValuesResponse

// .osirixgrpc.Status status = 1;
inline bool DCMPixROIValuesResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::osirixgrpc::Status& DCMPixROIValuesResponse::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DCMPixROIValuesResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixROIValuesResponse.status)
  return _internal_status();
}
inline void DCMPixROIValuesResponse::unsafe_arena_set_allocated_status(::osirixgrpc::Status* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DCMPixROIValuesResponse.status)
}
inline ::osirixgrpc::Status* DCMPixROIValuesResponse::release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* released = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::Status* DCMPixROIValuesResponse::unsafe_arena_release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.DCMPixROIValuesResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DCMPixROIValuesResponse::_internal_mutable_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(p);
  }
  return _impl_.status_;
}
inline ::osirixgrpc::Status* DCMPixROIValuesResponse::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DCMPixROIValuesResponse.status)
  return _msg;
}
inline void DCMPixROIValuesResponse::set_allocated_status(::osirixgrpc::Status* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DCMPixROIValuesResponse.status)
}

// repeated float values = 2;
inline int DCMPixROIValuesResponse::_internal_values_size() const {
  return _internal_values().size();
}
inline int DCMPixROIValuesResponse::values_size() const {
  return _internal_values_size();
}
inline void DCMPixROIValuesResponse::clear_values() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.values_.Clear();
}
inline float DCMPixROIValuesResponse::values(int index) const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixROIValuesResponse.values)
  return _internal_values().Get(index);
}
inline void DCMPixROIValuesResponse::set_values(int index, float value) {
  _internal_mutable_values()->Set(index, value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DCMPixROIValuesResponse.values)
}
inline void DCMPixROIValuesResponse::add_values(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_values()->Add(value);
  // @@protoc_insertion_point(field_add:osirixgrpc.DCMPixROIValuesResponse.values)
}
inline const ::google::protobuf::RepeatedField<float>& DCMPixROIValuesResponse::values() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:osirixgrpc.DCMPixROIValuesResponse.values)
  return _internal_values();
}
inline ::google::protobuf::RepeatedField<float>* DCMPixROIValuesResponse::mutable_values()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:osirixgrpc.DCMPixROIValuesResponse.values)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_values();
}
inline const ::google::protobuf::RepeatedField<float>& DCMPixROIValuesResponse::_internal_values()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.values_;
}
inline ::google::protobuf::RepeatedField<float>* DCMPixROIValuesResponse::_internal_mutable_values() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.values_;
}

// repeated int32 row_indices = 3;
inline int DCMPixROIValuesResponse::_internal_row_indices_size() const {
  return _internal_row_indices().size();
}
inline int DCMPixROIValuesResponse::row_indices_size() const {
  return _internal_row_indices_size();
}
inline void DCMPixROIValuesResponse::clear_row_indices() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.row_indices_.Clear();
}
inline ::int32_t DCMPixROIValuesResponse::row_indices(int index) const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixROIValuesResponse.row_indices)
  return _internal_row_indices().Get(index);
}
inline void DCMPixROIValuesResponse::set_row_indices(int index, ::int32_t value) {
  _internal_mutable_row_indices()->Set(index, value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DCMPixROIValuesResponse.row_indices)
}
inline void DCMPixROIValuesResponse::add_row_indices(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_row_indices()->Add(value);
  // @@protoc_insertion_point(field_add:osirixgrpc.DCMPixROIValuesResponse.row_indices)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& DCMPixROIValuesResponse::row_indices() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:osirixgrpc.DCMPixROIValuesResponse.row_indices)
  return _internal_row_indices();
}
inline ::google::protobuf::RepeatedField<::int32_t>* DCMPixROIValuesResponse::mutable_row_indices()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:osirixgrpc.DCMPixROIValuesResponse.row_indices)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_row_indices();
}
inline const ::google::protobuf::RepeatedField<::int32_t>& DCMPixROIValuesResponse::_internal_row_indices()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.row_indices_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* DCMPixROIValuesResponse::_internal_mutable_row_indices() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.row_indices_;
}

// repeated int32 column_indices = 4;
inline int DCMPixROIValuesResponse::_internal_column_indices_size() const {
  return _internal_column_indices().size();
}
inline int DCMPixROIValuesResponse::column_indices_size() const {
  return _internal_column_indices_size();
}
inline void DCMPixROIValuesResponse::clear_column_indices() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.column_indices_.Clear();
}
inline ::int32_t DCMPixROIValuesResponse::column_indices(int index) const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixROIValuesResponse.column_indices)
  return _internal_column_indices().Get(index);
}
inline void DCMPixROIValuesResponse::set_column_indices(int index, ::int32_t value) {
  _internal_mutable_column_indices()->Set(index, value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DCMPixROIValuesResponse.column_indices)
}
inline void DCMPixROIValuesResponse::add_column_indices(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_column_indices()->Add(value);
  // @@protoc_insertion_point(field_add:osirixgrpc.DCMPixROIValuesResponse.column_indices)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& DCMPixROIValuesResponse::column_indices() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:osirixgrpc.DCMPixROIValuesResponse.column_indices)
  return _internal_column_indices();
}
inline ::google::protobuf::RepeatedField<::int32_t>* DCMPixROIValuesResponse::mutable_column_indices()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:osirixgrpc.DCMPixROIValuesResponse.column_indices)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_column_indices();
}
inline const ::google::protobuf::RepeatedField<::int32_t>& DCMPixROIValuesResponse::_internal_column_indices()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.column_indices_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* DCMPixROIValuesResponse::_internal_mutable_column_indices() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.column_indices_;
}

// -------------------------------------------------------------------

// DCMPixDicomImageResponse

// .osirixgrpc.Status status = 1;
inline bool DCMPixDicomImageResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::osirixgrpc::Status& DCMPixDicomImageResponse::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DCMPixDicomImageResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixDicomImageResponse.status)
  return _internal_status();
}
inline void DCMPixDicomImageResponse::unsafe_arena_set_allocated_status(::osirixgrpc::Status* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DCMPixDicomImageResponse.status)
}
inline ::osirixgrpc::Status* DCMPixDicomImageResponse::release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* released = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::Status* DCMPixDicomImageResponse::unsafe_arena_release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.DCMPixDicomImageResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DCMPixDicomImageResponse::_internal_mutable_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(p);
  }
  return _impl_.status_;
}
inline ::osirixgrpc::Status* DCMPixDicomImageResponse::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DCMPixDicomImageResponse.status)
  return _msg;
}
inline void DCMPixDicomImageResponse::set_allocated_status(::osirixgrpc::Status* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DCMPixDicomImageResponse.status)
}

// .osirixgrpc.DicomImage dicom_image = 2;
inline bool DCMPixDicomImageResponse::has_dicom_image() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.dicom_image_ != nullptr);
  return value;
}
inline const ::osirixgrpc::DicomImage& DCMPixDicomImageResponse::_internal_dicom_image() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::DicomImage* p = _impl_.dicom_image_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::DicomImage&>(::osirixgrpc::_DicomImage_default_instance_);
}
inline const ::osirixgrpc::DicomImage& DCMPixDicomImageResponse::dicom_image() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixDicomImageResponse.dicom_image)
  return _internal_dicom_image();
}
inline void DCMPixDicomImageResponse::unsafe_arena_set_allocated_dicom_image(::osirixgrpc::DicomImage* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.dicom_image_);
  }
  _impl_.dicom_image_ = reinterpret_cast<::osirixgrpc::DicomImage*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DCMPixDicomImageResponse.dicom_image)
}
inline ::osirixgrpc::DicomImage* DCMPixDicomImageResponse::release_dicom_image() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::osirixgrpc::DicomImage* released = _impl_.dicom_image_;
  _impl_.dicom_image_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::DicomImage* DCMPixDicomImageResponse::unsafe_arena_release_dicom_image() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.DCMPixDicomImageResponse.dicom_image)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::osirixgrpc::DicomImage* temp = _impl_.dicom_image_;
  _impl_.dicom_image_ = nullptr;
  return temp;
}
inline ::osirixgrpc::DicomImage* DCMPixDicomImageResponse::_internal_mutable_dicom_image() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.dicom_image_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::DicomImage>(GetArena());
    _impl_.dicom_image_ = reinterpret_cast<::osirixgrpc::DicomImage*>(p);
  }
  return _impl_.dicom_image_;
}
inline ::osirixgrpc::DicomImage* DCMPixDicomImageResponse::mutable_dicom_image() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::DicomImage* _msg = _internal_mutable_dicom_image();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DCMPixDicomImageResponse.dicom_image)
  return _msg;
}
inline void DCMPixDicomImageResponse::set_allocated_dicom_image(::osirixgrpc::DicomImage* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.dicom_image_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.dicom_image_ = reinterpret_cast<::osirixgrpc::DicomImage*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DCMPixDicomImageResponse.dicom_image)
}

// -------------------------------------------------------------------

// DCMPixDicomSeriesResponse

// .osirixgrpc.Status status = 1;
inline bool DCMPixDicomSeriesResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::osirixgrpc::Status& DCMPixDicomSeriesResponse::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DCMPixDicomSeriesResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixDicomSeriesResponse.status)
  return _internal_status();
}
inline void DCMPixDicomSeriesResponse::unsafe_arena_set_allocated_status(::osirixgrpc::Status* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DCMPixDicomSeriesResponse.status)
}
inline ::osirixgrpc::Status* DCMPixDicomSeriesResponse::release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* released = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::Status* DCMPixDicomSeriesResponse::unsafe_arena_release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.DCMPixDicomSeriesResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DCMPixDicomSeriesResponse::_internal_mutable_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(p);
  }
  return _impl_.status_;
}
inline ::osirixgrpc::Status* DCMPixDicomSeriesResponse::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DCMPixDicomSeriesResponse.status)
  return _msg;
}
inline void DCMPixDicomSeriesResponse::set_allocated_status(::osirixgrpc::Status* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DCMPixDicomSeriesResponse.status)
}

// .osirixgrpc.DicomSeries dicom_series = 2;
inline bool DCMPixDicomSeriesResponse::has_dicom_series() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.dicom_series_ != nullptr);
  return value;
}
inline const ::osirixgrpc::DicomSeries& DCMPixDicomSeriesResponse::_internal_dicom_series() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::DicomSeries* p = _impl_.dicom_series_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::DicomSeries&>(::osirixgrpc::_DicomSeries_default_instance_);
}
inline const ::osirixgrpc::DicomSeries& DCMPixDicomSeriesResponse::dicom_series() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixDicomSeriesResponse.dicom_series)
  return _internal_dicom_series();
}
inline void DCMPixDicomSeriesResponse::unsafe_arena_set_allocated_dicom_series(::osirixgrpc::DicomSeries* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.dicom_series_);
  }
  _impl_.dicom_series_ = reinterpret_cast<::osirixgrpc::DicomSeries*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DCMPixDicomSeriesResponse.dicom_series)
}
inline ::osirixgrpc::DicomSeries* DCMPixDicomSeriesResponse::release_dicom_series() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::osirixgrpc::DicomSeries* released = _impl_.dicom_series_;
  _impl_.dicom_series_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::DicomSeries* DCMPixDicomSeriesResponse::unsafe_arena_release_dicom_series() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.DCMPixDicomSeriesResponse.dicom_series)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::osirixgrpc::DicomSeries* temp = _impl_.dicom_series_;
  _impl_.dicom_series_ = nullptr;
  return temp;
}
inline ::osirixgrpc::DicomSeries* DCMPixDicomSeriesResponse::_internal_mutable_dicom_series() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.dicom_series_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::DicomSeries>(GetArena());
    _impl_.dicom_series_ = reinterpret_cast<::osirixgrpc::DicomSeries*>(p);
  }
  return _impl_.dicom_series_;
}
inline ::osirixgrpc::DicomSeries* DCMPixDicomSeriesResponse::mutable_dicom_series() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::DicomSeries* _msg = _internal_mutable_dicom_series();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DCMPixDicomSeriesResponse.dicom_series)
  return _msg;
}
inline void DCMPixDicomSeriesResponse::set_allocated_dicom_series(::osirixgrpc::DicomSeries* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.dicom_series_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.dicom_series_ = reinterpret_cast<::osirixgrpc::DicomSeries*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DCMPixDicomSeriesResponse.dicom_series)
}

// -------------------------------------------------------------------

// DCMPixDicomStudyResponse

// .osirixgrpc.Status status = 1;
inline bool DCMPixDicomStudyResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::osirixgrpc::Status& DCMPixDicomStudyResponse::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DCMPixDicomStudyResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixDicomStudyResponse.status)
  return _internal_status();
}
inline void DCMPixDicomStudyResponse::unsafe_arena_set_allocated_status(::osirixgrpc::Status* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DCMPixDicomStudyResponse.status)
}
inline ::osirixgrpc::Status* DCMPixDicomStudyResponse::release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* released = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::Status* DCMPixDicomStudyResponse::unsafe_arena_release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.DCMPixDicomStudyResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DCMPixDicomStudyResponse::_internal_mutable_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(p);
  }
  return _impl_.status_;
}
inline ::osirixgrpc::Status* DCMPixDicomStudyResponse::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DCMPixDicomStudyResponse.status)
  return _msg;
}
inline void DCMPixDicomStudyResponse::set_allocated_status(::osirixgrpc::Status* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DCMPixDicomStudyResponse.status)
}

// .osirixgrpc.DicomStudy dicom_study = 2;
inline bool DCMPixDicomStudyResponse::has_dicom_study() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.dicom_study_ != nullptr);
  return value;
}
inline const ::osirixgrpc::DicomStudy& DCMPixDicomStudyResponse::_internal_dicom_study() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::DicomStudy* p = _impl_.dicom_study_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::DicomStudy&>(::osirixgrpc::_DicomStudy_default_instance_);
}
inline const ::osirixgrpc::DicomStudy& DCMPixDicomStudyResponse::dicom_study() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixDicomStudyResponse.dicom_study)
  return _internal_dicom_study();
}
inline void DCMPixDicomStudyResponse::unsafe_arena_set_allocated_dicom_study(::osirixgrpc::DicomStudy* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.dicom_study_);
  }
  _impl_.dicom_study_ = reinterpret_cast<::osirixgrpc::DicomStudy*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DCMPixDicomStudyResponse.dicom_study)
}
inline ::osirixgrpc::DicomStudy* DCMPixDicomStudyResponse::release_dicom_study() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::osirixgrpc::DicomStudy* released = _impl_.dicom_study_;
  _impl_.dicom_study_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::DicomStudy* DCMPixDicomStudyResponse::unsafe_arena_release_dicom_study() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.DCMPixDicomStudyResponse.dicom_study)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::osirixgrpc::DicomStudy* temp = _impl_.dicom_study_;
  _impl_.dicom_study_ = nullptr;
  return temp;
}
inline ::osirixgrpc::DicomStudy* DCMPixDicomStudyResponse::_internal_mutable_dicom_study() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.dicom_study_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::DicomStudy>(GetArena());
    _impl_.dicom_study_ = reinterpret_cast<::osirixgrpc::DicomStudy*>(p);
  }
  return _impl_.dicom_study_;
}
inline ::osirixgrpc::DicomStudy* DCMPixDicomStudyResponse::mutable_dicom_study() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::DicomStudy* _msg = _internal_mutable_dicom_study();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DCMPixDicomStudyResponse.dicom_study)
  return _msg;
}
inline void DCMPixDicomStudyResponse::set_allocated_dicom_study(::osirixgrpc::DicomStudy* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.dicom_study_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.dicom_study_ = reinterpret_cast<::osirixgrpc::DicomStudy*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DCMPixDicomStudyResponse.dicom_study)
}

// -------------------------------------------------------------------

// DCMPixImageResponse

// .osirixgrpc.Status status = 1;
inline bool DCMPixImageResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::osirixgrpc::Status& DCMPixImageResponse::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DCMPixImageResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixImageResponse.status)
  return _internal_status();
}
inline void DCMPixImageResponse::unsafe_arena_set_allocated_status(::osirixgrpc::Status* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DCMPixImageResponse.status)
}
inline ::osirixgrpc::Status* DCMPixImageResponse::release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* released = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::Status* DCMPixImageResponse::unsafe_arena_release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.DCMPixImageResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DCMPixImageResponse::_internal_mutable_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(p);
  }
  return _impl_.status_;
}
inline ::osirixgrpc::Status* DCMPixImageResponse::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DCMPixImageResponse.status)
  return _msg;
}
inline void DCMPixImageResponse::set_allocated_status(::osirixgrpc::Status* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DCMPixImageResponse.status)
}

// int32 rows = 2;
inline void DCMPixImageResponse::clear_rows() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rows_ = 0;
}
inline ::int32_t DCMPixImageResponse::rows() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixImageResponse.rows)
  return _internal_rows();
}
inline void DCMPixImageResponse::set_rows(::int32_t value) {
  _internal_set_rows(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DCMPixImageResponse.rows)
}
inline ::int32_t DCMPixImageResponse::_internal_rows() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rows_;
}
inline void DCMPixImageResponse::_internal_set_rows(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rows_ = value;
}

// int32 columns = 3;
inline void DCMPixImageResponse::clear_columns() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.columns_ = 0;
}
inline ::int32_t DCMPixImageResponse::columns() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixImageResponse.columns)
  return _internal_columns();
}
inline void DCMPixImageResponse::set_columns(::int32_t value) {
  _internal_set_columns(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DCMPixImageResponse.columns)
}
inline ::int32_t DCMPixImageResponse::_internal_columns() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.columns_;
}
inline void DCMPixImageResponse::_internal_set_columns(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.columns_ = value;
}

// bool is_argb = 4;
inline void DCMPixImageResponse::clear_is_argb() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.is_argb_ = false;
}
inline bool DCMPixImageResponse::is_argb() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixImageResponse.is_argb)
  return _internal_is_argb();
}
inline void DCMPixImageResponse::set_is_argb(bool value) {
  _internal_set_is_argb(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DCMPixImageResponse.is_argb)
}
inline bool DCMPixImageResponse::_internal_is_argb() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.is_argb_;
}
inline void DCMPixImageResponse::_internal_set_is_argb(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.is_argb_ = value;
}

// repeated float image_data_float = 5;
inline int DCMPixImageResponse::_internal_image_data_float_size() const {
  return _internal_image_data_float().size();
}
inline int DCMPixImageResponse::image_data_float_size() const {
  return _internal_image_data_float_size();
}
inline void DCMPixImageResponse::clear_image_data_float() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.image_data_float_.Clear();
}
inline float DCMPixImageResponse::image_data_float(int index) const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixImageResponse.image_data_float)
  return _internal_image_data_float().Get(index);
}
inline void DCMPixImageResponse::set_image_data_float(int index, float value) {
  _internal_mutable_image_data_float()->Set(index, value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DCMPixImageResponse.image_data_float)
}
inline void DCMPixImageResponse::add_image_data_float(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_image_data_float()->Add(value);
  // @@protoc_insertion_point(field_add:osirixgrpc.DCMPixImageResponse.image_data_float)
}
inline const ::google::protobuf::RepeatedField<float>& DCMPixImageResponse::image_data_float() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:osirixgrpc.DCMPixImageResponse.image_data_float)
  return _internal_image_data_float();
}
inline ::google::protobuf::RepeatedField<float>* DCMPixImageResponse::mutable_image_data_float()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:osirixgrpc.DCMPixImageResponse.image_data_float)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_image_data_float();
}
inline const ::google::protobuf::RepeatedField<float>& DCMPixImageResponse::_internal_image_data_float()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.image_data_float_;
}
inline ::google::protobuf::RepeatedField<float>* DCMPixImageResponse::_internal_mutable_image_data_float() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.image_data_float_;
}

// repeated int32 image_data_argb = 6;
inline int DCMPixImageResponse::_internal_image_data_argb_size() const {
  return _internal_image_data_argb().size();
}
inline int DCMPixImageResponse::image_data_argb_size() const {
  return _internal_image_data_argb_size();
}
inline void DCMPixImageResponse::clear_image_data_argb() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.image_data_argb_.Clear();
}
inline ::int32_t DCMPixImageResponse::image_data_argb(int index) const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixImageResponse.image_data_argb)
  return _internal_image_data_argb().Get(index);
}
inline void DCMPixImageResponse::set_image_data_argb(int index, ::int32_t value) {
  _internal_mutable_image_data_argb()->Set(index, value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DCMPixImageResponse.image_data_argb)
}
inline void DCMPixImageResponse::add_image_data_argb(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_image_data_argb()->Add(value);
  // @@protoc_insertion_point(field_add:osirixgrpc.DCMPixImageResponse.image_data_argb)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& DCMPixImageResponse::image_data_argb() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:osirixgrpc.DCMPixImageResponse.image_data_argb)
  return _internal_image_data_argb();
}
inline ::google::protobuf::RepeatedField<::int32_t>* DCMPixImageResponse::mutable_image_data_argb()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:osirixgrpc.DCMPixImageResponse.image_data_argb)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_image_data_argb();
}
inline const ::google::protobuf::RepeatedField<::int32_t>& DCMPixImageResponse::_internal_image_data_argb()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.image_data_argb_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* DCMPixImageResponse::_internal_mutable_image_data_argb() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.image_data_argb_;
}

// -------------------------------------------------------------------

// DCMPixGetMapFromROIResponse

// .osirixgrpc.Status status = 1;
inline bool DCMPixGetMapFromROIResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::osirixgrpc::Status& DCMPixGetMapFromROIResponse::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DCMPixGetMapFromROIResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixGetMapFromROIResponse.status)
  return _internal_status();
}
inline void DCMPixGetMapFromROIResponse::unsafe_arena_set_allocated_status(::osirixgrpc::Status* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DCMPixGetMapFromROIResponse.status)
}
inline ::osirixgrpc::Status* DCMPixGetMapFromROIResponse::release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* released = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::Status* DCMPixGetMapFromROIResponse::unsafe_arena_release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.DCMPixGetMapFromROIResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DCMPixGetMapFromROIResponse::_internal_mutable_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(p);
  }
  return _impl_.status_;
}
inline ::osirixgrpc::Status* DCMPixGetMapFromROIResponse::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DCMPixGetMapFromROIResponse.status)
  return _msg;
}
inline void DCMPixGetMapFromROIResponse::set_allocated_status(::osirixgrpc::Status* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DCMPixGetMapFromROIResponse.status)
}

// int32 rows = 2;
inline void DCMPixGetMapFromROIResponse::clear_rows() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rows_ = 0;
}
inline ::int32_t DCMPixGetMapFromROIResponse::rows() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixGetMapFromROIResponse.rows)
  return _internal_rows();
}
inline void DCMPixGetMapFromROIResponse::set_rows(::int32_t value) {
  _internal_set_rows(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DCMPixGetMapFromROIResponse.rows)
}
inline ::int32_t DCMPixGetMapFromROIResponse::_internal_rows() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rows_;
}
inline void DCMPixGetMapFromROIResponse::_internal_set_rows(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rows_ = value;
}

// int32 columns = 3;
inline void DCMPixGetMapFromROIResponse::clear_columns() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.columns_ = 0;
}
inline ::int32_t DCMPixGetMapFromROIResponse::columns() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixGetMapFromROIResponse.columns)
  return _internal_columns();
}
inline void DCMPixGetMapFromROIResponse::set_columns(::int32_t value) {
  _internal_set_columns(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DCMPixGetMapFromROIResponse.columns)
}
inline ::int32_t DCMPixGetMapFromROIResponse::_internal_columns() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.columns_;
}
inline void DCMPixGetMapFromROIResponse::_internal_set_columns(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.columns_ = value;
}

// repeated bool map = 4;
inline int DCMPixGetMapFromROIResponse::_internal_map_size() const {
  return _internal_map().size();
}
inline int DCMPixGetMapFromROIResponse::map_size() const {
  return _internal_map_size();
}
inline void DCMPixGetMapFromROIResponse::clear_map() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.map_.Clear();
}
inline bool DCMPixGetMapFromROIResponse::map(int index) const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixGetMapFromROIResponse.map)
  return _internal_map().Get(index);
}
inline void DCMPixGetMapFromROIResponse::set_map(int index, bool value) {
  _internal_mutable_map()->Set(index, value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DCMPixGetMapFromROIResponse.map)
}
inline void DCMPixGetMapFromROIResponse::add_map(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_map()->Add(value);
  // @@protoc_insertion_point(field_add:osirixgrpc.DCMPixGetMapFromROIResponse.map)
}
inline const ::google::protobuf::RepeatedField<bool>& DCMPixGetMapFromROIResponse::map() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:osirixgrpc.DCMPixGetMapFromROIResponse.map)
  return _internal_map();
}
inline ::google::protobuf::RepeatedField<bool>* DCMPixGetMapFromROIResponse::mutable_map()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:osirixgrpc.DCMPixGetMapFromROIResponse.map)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_map();
}
inline const ::google::protobuf::RepeatedField<bool>& DCMPixGetMapFromROIResponse::_internal_map()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_;
}
inline ::google::protobuf::RepeatedField<bool>* DCMPixGetMapFromROIResponse::_internal_mutable_map() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.map_;
}

// -------------------------------------------------------------------

// DCMPixShapeResponse

// .osirixgrpc.Status status = 1;
inline bool DCMPixShapeResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::osirixgrpc::Status& DCMPixShapeResponse::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DCMPixShapeResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixShapeResponse.status)
  return _internal_status();
}
inline void DCMPixShapeResponse::unsafe_arena_set_allocated_status(::osirixgrpc::Status* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DCMPixShapeResponse.status)
}
inline ::osirixgrpc::Status* DCMPixShapeResponse::release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* released = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::Status* DCMPixShapeResponse::unsafe_arena_release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.DCMPixShapeResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DCMPixShapeResponse::_internal_mutable_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(p);
  }
  return _impl_.status_;
}
inline ::osirixgrpc::Status* DCMPixShapeResponse::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DCMPixShapeResponse.status)
  return _msg;
}
inline void DCMPixShapeResponse::set_allocated_status(::osirixgrpc::Status* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DCMPixShapeResponse.status)
}

// int32 rows = 2;
inline void DCMPixShapeResponse::clear_rows() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rows_ = 0;
}
inline ::int32_t DCMPixShapeResponse::rows() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixShapeResponse.rows)
  return _internal_rows();
}
inline void DCMPixShapeResponse::set_rows(::int32_t value) {
  _internal_set_rows(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DCMPixShapeResponse.rows)
}
inline ::int32_t DCMPixShapeResponse::_internal_rows() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rows_;
}
inline void DCMPixShapeResponse::_internal_set_rows(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rows_ = value;
}

// int32 columns = 3;
inline void DCMPixShapeResponse::clear_columns() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.columns_ = 0;
}
inline ::int32_t DCMPixShapeResponse::columns() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixShapeResponse.columns)
  return _internal_columns();
}
inline void DCMPixShapeResponse::set_columns(::int32_t value) {
  _internal_set_columns(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DCMPixShapeResponse.columns)
}
inline ::int32_t DCMPixShapeResponse::_internal_columns() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.columns_;
}
inline void DCMPixShapeResponse::_internal_set_columns(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.columns_ = value;
}

// -------------------------------------------------------------------

// DCMPixSpacingResponse

// .osirixgrpc.Status status = 1;
inline bool DCMPixSpacingResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::osirixgrpc::Status& DCMPixSpacingResponse::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DCMPixSpacingResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixSpacingResponse.status)
  return _internal_status();
}
inline void DCMPixSpacingResponse::unsafe_arena_set_allocated_status(::osirixgrpc::Status* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DCMPixSpacingResponse.status)
}
inline ::osirixgrpc::Status* DCMPixSpacingResponse::release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* released = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::Status* DCMPixSpacingResponse::unsafe_arena_release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.DCMPixSpacingResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DCMPixSpacingResponse::_internal_mutable_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(p);
  }
  return _impl_.status_;
}
inline ::osirixgrpc::Status* DCMPixSpacingResponse::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DCMPixSpacingResponse.status)
  return _msg;
}
inline void DCMPixSpacingResponse::set_allocated_status(::osirixgrpc::Status* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DCMPixSpacingResponse.status)
}

// float spacing_rows = 2;
inline void DCMPixSpacingResponse::clear_spacing_rows() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.spacing_rows_ = 0;
}
inline float DCMPixSpacingResponse::spacing_rows() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixSpacingResponse.spacing_rows)
  return _internal_spacing_rows();
}
inline void DCMPixSpacingResponse::set_spacing_rows(float value) {
  _internal_set_spacing_rows(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DCMPixSpacingResponse.spacing_rows)
}
inline float DCMPixSpacingResponse::_internal_spacing_rows() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.spacing_rows_;
}
inline void DCMPixSpacingResponse::_internal_set_spacing_rows(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.spacing_rows_ = value;
}

// float spacing_columns = 3;
inline void DCMPixSpacingResponse::clear_spacing_columns() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.spacing_columns_ = 0;
}
inline float DCMPixSpacingResponse::spacing_columns() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixSpacingResponse.spacing_columns)
  return _internal_spacing_columns();
}
inline void DCMPixSpacingResponse::set_spacing_columns(float value) {
  _internal_set_spacing_columns(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DCMPixSpacingResponse.spacing_columns)
}
inline float DCMPixSpacingResponse::_internal_spacing_columns() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.spacing_columns_;
}
inline void DCMPixSpacingResponse::_internal_set_spacing_columns(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.spacing_columns_ = value;
}

// -------------------------------------------------------------------

// DCMPixOriginResponse

// .osirixgrpc.Status status = 1;
inline bool DCMPixOriginResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::osirixgrpc::Status& DCMPixOriginResponse::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DCMPixOriginResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixOriginResponse.status)
  return _internal_status();
}
inline void DCMPixOriginResponse::unsafe_arena_set_allocated_status(::osirixgrpc::Status* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DCMPixOriginResponse.status)
}
inline ::osirixgrpc::Status* DCMPixOriginResponse::release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* released = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::Status* DCMPixOriginResponse::unsafe_arena_release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.DCMPixOriginResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DCMPixOriginResponse::_internal_mutable_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(p);
  }
  return _impl_.status_;
}
inline ::osirixgrpc::Status* DCMPixOriginResponse::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DCMPixOriginResponse.status)
  return _msg;
}
inline void DCMPixOriginResponse::set_allocated_status(::osirixgrpc::Status* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DCMPixOriginResponse.status)
}

// float origin_rows = 2;
inline void DCMPixOriginResponse::clear_origin_rows() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.origin_rows_ = 0;
}
inline float DCMPixOriginResponse::origin_rows() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixOriginResponse.origin_rows)
  return _internal_origin_rows();
}
inline void DCMPixOriginResponse::set_origin_rows(float value) {
  _internal_set_origin_rows(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DCMPixOriginResponse.origin_rows)
}
inline float DCMPixOriginResponse::_internal_origin_rows() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.origin_rows_;
}
inline void DCMPixOriginResponse::_internal_set_origin_rows(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.origin_rows_ = value;
}

// float origin_columns = 3;
inline void DCMPixOriginResponse::clear_origin_columns() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.origin_columns_ = 0;
}
inline float DCMPixOriginResponse::origin_columns() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixOriginResponse.origin_columns)
  return _internal_origin_columns();
}
inline void DCMPixOriginResponse::set_origin_columns(float value) {
  _internal_set_origin_columns(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DCMPixOriginResponse.origin_columns)
}
inline float DCMPixOriginResponse::_internal_origin_columns() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.origin_columns_;
}
inline void DCMPixOriginResponse::_internal_set_origin_columns(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.origin_columns_ = value;
}

// float origin_slices = 4;
inline void DCMPixOriginResponse::clear_origin_slices() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.origin_slices_ = 0;
}
inline float DCMPixOriginResponse::origin_slices() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixOriginResponse.origin_slices)
  return _internal_origin_slices();
}
inline void DCMPixOriginResponse::set_origin_slices(float value) {
  _internal_set_origin_slices(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DCMPixOriginResponse.origin_slices)
}
inline float DCMPixOriginResponse::_internal_origin_slices() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.origin_slices_;
}
inline void DCMPixOriginResponse::_internal_set_origin_slices(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.origin_slices_ = value;
}

// -------------------------------------------------------------------

// DCMPixOrientationResponse

// .osirixgrpc.Status status = 1;
inline bool DCMPixOrientationResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::osirixgrpc::Status& DCMPixOrientationResponse::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DCMPixOrientationResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixOrientationResponse.status)
  return _internal_status();
}
inline void DCMPixOrientationResponse::unsafe_arena_set_allocated_status(::osirixgrpc::Status* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DCMPixOrientationResponse.status)
}
inline ::osirixgrpc::Status* DCMPixOrientationResponse::release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* released = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::Status* DCMPixOrientationResponse::unsafe_arena_release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.DCMPixOrientationResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DCMPixOrientationResponse::_internal_mutable_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(p);
  }
  return _impl_.status_;
}
inline ::osirixgrpc::Status* DCMPixOrientationResponse::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DCMPixOrientationResponse.status)
  return _msg;
}
inline void DCMPixOrientationResponse::set_allocated_status(::osirixgrpc::Status* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DCMPixOrientationResponse.status)
}

// repeated float orientation = 2;
inline int DCMPixOrientationResponse::_internal_orientation_size() const {
  return _internal_orientation().size();
}
inline int DCMPixOrientationResponse::orientation_size() const {
  return _internal_orientation_size();
}
inline void DCMPixOrientationResponse::clear_orientation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.orientation_.Clear();
}
inline float DCMPixOrientationResponse::orientation(int index) const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixOrientationResponse.orientation)
  return _internal_orientation().Get(index);
}
inline void DCMPixOrientationResponse::set_orientation(int index, float value) {
  _internal_mutable_orientation()->Set(index, value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DCMPixOrientationResponse.orientation)
}
inline void DCMPixOrientationResponse::add_orientation(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_orientation()->Add(value);
  // @@protoc_insertion_point(field_add:osirixgrpc.DCMPixOrientationResponse.orientation)
}
inline const ::google::protobuf::RepeatedField<float>& DCMPixOrientationResponse::orientation() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:osirixgrpc.DCMPixOrientationResponse.orientation)
  return _internal_orientation();
}
inline ::google::protobuf::RepeatedField<float>* DCMPixOrientationResponse::mutable_orientation()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:osirixgrpc.DCMPixOrientationResponse.orientation)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_orientation();
}
inline const ::google::protobuf::RepeatedField<float>& DCMPixOrientationResponse::_internal_orientation()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.orientation_;
}
inline ::google::protobuf::RepeatedField<float>* DCMPixOrientationResponse::_internal_mutable_orientation() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.orientation_;
}

// -------------------------------------------------------------------

// DCMPixSliceLocationResponse

// .osirixgrpc.Status status = 1;
inline bool DCMPixSliceLocationResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::osirixgrpc::Status& DCMPixSliceLocationResponse::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DCMPixSliceLocationResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixSliceLocationResponse.status)
  return _internal_status();
}
inline void DCMPixSliceLocationResponse::unsafe_arena_set_allocated_status(::osirixgrpc::Status* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DCMPixSliceLocationResponse.status)
}
inline ::osirixgrpc::Status* DCMPixSliceLocationResponse::release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* released = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::Status* DCMPixSliceLocationResponse::unsafe_arena_release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.DCMPixSliceLocationResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DCMPixSliceLocationResponse::_internal_mutable_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(p);
  }
  return _impl_.status_;
}
inline ::osirixgrpc::Status* DCMPixSliceLocationResponse::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DCMPixSliceLocationResponse.status)
  return _msg;
}
inline void DCMPixSliceLocationResponse::set_allocated_status(::osirixgrpc::Status* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DCMPixSliceLocationResponse.status)
}

// float slice_location = 2;
inline void DCMPixSliceLocationResponse::clear_slice_location() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.slice_location_ = 0;
}
inline float DCMPixSliceLocationResponse::slice_location() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixSliceLocationResponse.slice_location)
  return _internal_slice_location();
}
inline void DCMPixSliceLocationResponse::set_slice_location(float value) {
  _internal_set_slice_location(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DCMPixSliceLocationResponse.slice_location)
}
inline float DCMPixSliceLocationResponse::_internal_slice_location() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.slice_location_;
}
inline void DCMPixSliceLocationResponse::_internal_set_slice_location(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.slice_location_ = value;
}

// -------------------------------------------------------------------

// DCMPixSourceFileResponse

// .osirixgrpc.Status status = 1;
inline bool DCMPixSourceFileResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::osirixgrpc::Status& DCMPixSourceFileResponse::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DCMPixSourceFileResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixSourceFileResponse.status)
  return _internal_status();
}
inline void DCMPixSourceFileResponse::unsafe_arena_set_allocated_status(::osirixgrpc::Status* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DCMPixSourceFileResponse.status)
}
inline ::osirixgrpc::Status* DCMPixSourceFileResponse::release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* released = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::Status* DCMPixSourceFileResponse::unsafe_arena_release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.DCMPixSourceFileResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DCMPixSourceFileResponse::_internal_mutable_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(p);
  }
  return _impl_.status_;
}
inline ::osirixgrpc::Status* DCMPixSourceFileResponse::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DCMPixSourceFileResponse.status)
  return _msg;
}
inline void DCMPixSourceFileResponse::set_allocated_status(::osirixgrpc::Status* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::osirixgrpc::Status*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DCMPixSourceFileResponse.status)
}

// string source_file = 2;
inline void DCMPixSourceFileResponse::clear_source_file() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.source_file_.ClearToEmpty();
}
inline const std::string& DCMPixSourceFileResponse::source_file() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixSourceFileResponse.source_file)
  return _internal_source_file();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DCMPixSourceFileResponse::set_source_file(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.source_file_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:osirixgrpc.DCMPixSourceFileResponse.source_file)
}
inline std::string* DCMPixSourceFileResponse::mutable_source_file() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_source_file();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DCMPixSourceFileResponse.source_file)
  return _s;
}
inline const std::string& DCMPixSourceFileResponse::_internal_source_file() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.source_file_.Get();
}
inline void DCMPixSourceFileResponse::_internal_set_source_file(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.source_file_.Set(value, GetArena());
}
inline std::string* DCMPixSourceFileResponse::_internal_mutable_source_file() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.source_file_.Mutable( GetArena());
}
inline std::string* DCMPixSourceFileResponse::release_source_file() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.DCMPixSourceFileResponse.source_file)
  return _impl_.source_file_.Release();
}
inline void DCMPixSourceFileResponse::set_allocated_source_file(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.source_file_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.source_file_.IsDefault()) {
          _impl_.source_file_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DCMPixSourceFileResponse.source_file)
}

// -------------------------------------------------------------------

// DCMPixConvertToRGBRequest

// .osirixgrpc.DCMPix pix = 1;
inline bool DCMPixConvertToRGBRequest::has_pix() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pix_ != nullptr);
  return value;
}
inline const ::osirixgrpc::DCMPix& DCMPixConvertToRGBRequest::_internal_pix() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::DCMPix* p = _impl_.pix_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::DCMPix&>(::osirixgrpc::_DCMPix_default_instance_);
}
inline const ::osirixgrpc::DCMPix& DCMPixConvertToRGBRequest::pix() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixConvertToRGBRequest.pix)
  return _internal_pix();
}
inline void DCMPixConvertToRGBRequest::unsafe_arena_set_allocated_pix(::osirixgrpc::DCMPix* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pix_);
  }
  _impl_.pix_ = reinterpret_cast<::osirixgrpc::DCMPix*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DCMPixConvertToRGBRequest.pix)
}
inline ::osirixgrpc::DCMPix* DCMPixConvertToRGBRequest::release_pix() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::DCMPix* released = _impl_.pix_;
  _impl_.pix_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::DCMPix* DCMPixConvertToRGBRequest::unsafe_arena_release_pix() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.DCMPixConvertToRGBRequest.pix)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::DCMPix* temp = _impl_.pix_;
  _impl_.pix_ = nullptr;
  return temp;
}
inline ::osirixgrpc::DCMPix* DCMPixConvertToRGBRequest::_internal_mutable_pix() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.pix_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::DCMPix>(GetArena());
    _impl_.pix_ = reinterpret_cast<::osirixgrpc::DCMPix*>(p);
  }
  return _impl_.pix_;
}
inline ::osirixgrpc::DCMPix* DCMPixConvertToRGBRequest::mutable_pix() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::DCMPix* _msg = _internal_mutable_pix();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DCMPixConvertToRGBRequest.pix)
  return _msg;
}
inline void DCMPixConvertToRGBRequest::set_allocated_pix(::osirixgrpc::DCMPix* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pix_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pix_ = reinterpret_cast<::osirixgrpc::DCMPix*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DCMPixConvertToRGBRequest.pix)
}

// int32 rgb_channel = 2;
inline void DCMPixConvertToRGBRequest::clear_rgb_channel() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rgb_channel_ = 0;
}
inline ::int32_t DCMPixConvertToRGBRequest::rgb_channel() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixConvertToRGBRequest.rgb_channel)
  return _internal_rgb_channel();
}
inline void DCMPixConvertToRGBRequest::set_rgb_channel(::int32_t value) {
  _internal_set_rgb_channel(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DCMPixConvertToRGBRequest.rgb_channel)
}
inline ::int32_t DCMPixConvertToRGBRequest::_internal_rgb_channel() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rgb_channel_;
}
inline void DCMPixConvertToRGBRequest::_internal_set_rgb_channel(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rgb_channel_ = value;
}

// -------------------------------------------------------------------

// DCMPixConvertToBWRequest

// .osirixgrpc.DCMPix pix = 1;
inline bool DCMPixConvertToBWRequest::has_pix() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pix_ != nullptr);
  return value;
}
inline const ::osirixgrpc::DCMPix& DCMPixConvertToBWRequest::_internal_pix() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::DCMPix* p = _impl_.pix_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::DCMPix&>(::osirixgrpc::_DCMPix_default_instance_);
}
inline const ::osirixgrpc::DCMPix& DCMPixConvertToBWRequest::pix() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixConvertToBWRequest.pix)
  return _internal_pix();
}
inline void DCMPixConvertToBWRequest::unsafe_arena_set_allocated_pix(::osirixgrpc::DCMPix* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pix_);
  }
  _impl_.pix_ = reinterpret_cast<::osirixgrpc::DCMPix*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DCMPixConvertToBWRequest.pix)
}
inline ::osirixgrpc::DCMPix* DCMPixConvertToBWRequest::release_pix() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::DCMPix* released = _impl_.pix_;
  _impl_.pix_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::DCMPix* DCMPixConvertToBWRequest::unsafe_arena_release_pix() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.DCMPixConvertToBWRequest.pix)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::DCMPix* temp = _impl_.pix_;
  _impl_.pix_ = nullptr;
  return temp;
}
inline ::osirixgrpc::DCMPix* DCMPixConvertToBWRequest::_internal_mutable_pix() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.pix_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::DCMPix>(GetArena());
    _impl_.pix_ = reinterpret_cast<::osirixgrpc::DCMPix*>(p);
  }
  return _impl_.pix_;
}
inline ::osirixgrpc::DCMPix* DCMPixConvertToBWRequest::mutable_pix() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::DCMPix* _msg = _internal_mutable_pix();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DCMPixConvertToBWRequest.pix)
  return _msg;
}
inline void DCMPixConvertToBWRequest::set_allocated_pix(::osirixgrpc::DCMPix* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pix_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pix_ = reinterpret_cast<::osirixgrpc::DCMPix*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DCMPixConvertToBWRequest.pix)
}

// int32 bw_channel = 2;
inline void DCMPixConvertToBWRequest::clear_bw_channel() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.bw_channel_ = 0;
}
inline ::int32_t DCMPixConvertToBWRequest::bw_channel() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixConvertToBWRequest.bw_channel)
  return _internal_bw_channel();
}
inline void DCMPixConvertToBWRequest::set_bw_channel(::int32_t value) {
  _internal_set_bw_channel(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DCMPixConvertToBWRequest.bw_channel)
}
inline ::int32_t DCMPixConvertToBWRequest::_internal_bw_channel() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.bw_channel_;
}
inline void DCMPixConvertToBWRequest::_internal_set_bw_channel(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.bw_channel_ = value;
}

// -------------------------------------------------------------------

// DCMPixComputeROIRequest

// .osirixgrpc.DCMPix pix = 1;
inline bool DCMPixComputeROIRequest::has_pix() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pix_ != nullptr);
  return value;
}
inline const ::osirixgrpc::DCMPix& DCMPixComputeROIRequest::_internal_pix() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::DCMPix* p = _impl_.pix_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::DCMPix&>(::osirixgrpc::_DCMPix_default_instance_);
}
inline const ::osirixgrpc::DCMPix& DCMPixComputeROIRequest::pix() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixComputeROIRequest.pix)
  return _internal_pix();
}
inline void DCMPixComputeROIRequest::unsafe_arena_set_allocated_pix(::osirixgrpc::DCMPix* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pix_);
  }
  _impl_.pix_ = reinterpret_cast<::osirixgrpc::DCMPix*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DCMPixComputeROIRequest.pix)
}
inline ::osirixgrpc::DCMPix* DCMPixComputeROIRequest::release_pix() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::DCMPix* released = _impl_.pix_;
  _impl_.pix_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::DCMPix* DCMPixComputeROIRequest::unsafe_arena_release_pix() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.DCMPixComputeROIRequest.pix)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::DCMPix* temp = _impl_.pix_;
  _impl_.pix_ = nullptr;
  return temp;
}
inline ::osirixgrpc::DCMPix* DCMPixComputeROIRequest::_internal_mutable_pix() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.pix_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::DCMPix>(GetArena());
    _impl_.pix_ = reinterpret_cast<::osirixgrpc::DCMPix*>(p);
  }
  return _impl_.pix_;
}
inline ::osirixgrpc::DCMPix* DCMPixComputeROIRequest::mutable_pix() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::DCMPix* _msg = _internal_mutable_pix();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DCMPixComputeROIRequest.pix)
  return _msg;
}
inline void DCMPixComputeROIRequest::set_allocated_pix(::osirixgrpc::DCMPix* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pix_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pix_ = reinterpret_cast<::osirixgrpc::DCMPix*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DCMPixComputeROIRequest.pix)
}

// .osirixgrpc.ROI roi = 2;
inline bool DCMPixComputeROIRequest::has_roi() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.roi_ != nullptr);
  return value;
}
inline const ::osirixgrpc::ROI& DCMPixComputeROIRequest::_internal_roi() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::ROI* p = _impl_.roi_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::ROI&>(::osirixgrpc::_ROI_default_instance_);
}
inline const ::osirixgrpc::ROI& DCMPixComputeROIRequest::roi() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixComputeROIRequest.roi)
  return _internal_roi();
}
inline void DCMPixComputeROIRequest::unsafe_arena_set_allocated_roi(::osirixgrpc::ROI* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.roi_);
  }
  _impl_.roi_ = reinterpret_cast<::osirixgrpc::ROI*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DCMPixComputeROIRequest.roi)
}
inline ::osirixgrpc::ROI* DCMPixComputeROIRequest::release_roi() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::osirixgrpc::ROI* released = _impl_.roi_;
  _impl_.roi_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::ROI* DCMPixComputeROIRequest::unsafe_arena_release_roi() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.DCMPixComputeROIRequest.roi)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::osirixgrpc::ROI* temp = _impl_.roi_;
  _impl_.roi_ = nullptr;
  return temp;
}
inline ::osirixgrpc::ROI* DCMPixComputeROIRequest::_internal_mutable_roi() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.roi_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::ROI>(GetArena());
    _impl_.roi_ = reinterpret_cast<::osirixgrpc::ROI*>(p);
  }
  return _impl_.roi_;
}
inline ::osirixgrpc::ROI* DCMPixComputeROIRequest::mutable_roi() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::ROI* _msg = _internal_mutable_roi();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DCMPixComputeROIRequest.roi)
  return _msg;
}
inline void DCMPixComputeROIRequest::set_allocated_roi(::osirixgrpc::ROI* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.roi_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.roi_ = reinterpret_cast<::osirixgrpc::ROI*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DCMPixComputeROIRequest.roi)
}

// -------------------------------------------------------------------

// DCMPixROIValuesRequest

// .osirixgrpc.DCMPix pix = 1;
inline bool DCMPixROIValuesRequest::has_pix() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pix_ != nullptr);
  return value;
}
inline const ::osirixgrpc::DCMPix& DCMPixROIValuesRequest::_internal_pix() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::DCMPix* p = _impl_.pix_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::DCMPix&>(::osirixgrpc::_DCMPix_default_instance_);
}
inline const ::osirixgrpc::DCMPix& DCMPixROIValuesRequest::pix() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixROIValuesRequest.pix)
  return _internal_pix();
}
inline void DCMPixROIValuesRequest::unsafe_arena_set_allocated_pix(::osirixgrpc::DCMPix* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pix_);
  }
  _impl_.pix_ = reinterpret_cast<::osirixgrpc::DCMPix*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DCMPixROIValuesRequest.pix)
}
inline ::osirixgrpc::DCMPix* DCMPixROIValuesRequest::release_pix() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::DCMPix* released = _impl_.pix_;
  _impl_.pix_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::DCMPix* DCMPixROIValuesRequest::unsafe_arena_release_pix() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.DCMPixROIValuesRequest.pix)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::DCMPix* temp = _impl_.pix_;
  _impl_.pix_ = nullptr;
  return temp;
}
inline ::osirixgrpc::DCMPix* DCMPixROIValuesRequest::_internal_mutable_pix() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.pix_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::DCMPix>(GetArena());
    _impl_.pix_ = reinterpret_cast<::osirixgrpc::DCMPix*>(p);
  }
  return _impl_.pix_;
}
inline ::osirixgrpc::DCMPix* DCMPixROIValuesRequest::mutable_pix() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::DCMPix* _msg = _internal_mutable_pix();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DCMPixROIValuesRequest.pix)
  return _msg;
}
inline void DCMPixROIValuesRequest::set_allocated_pix(::osirixgrpc::DCMPix* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pix_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pix_ = reinterpret_cast<::osirixgrpc::DCMPix*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DCMPixROIValuesRequest.pix)
}

// .osirixgrpc.ROI roi = 2;
inline bool DCMPixROIValuesRequest::has_roi() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.roi_ != nullptr);
  return value;
}
inline const ::osirixgrpc::ROI& DCMPixROIValuesRequest::_internal_roi() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::ROI* p = _impl_.roi_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::ROI&>(::osirixgrpc::_ROI_default_instance_);
}
inline const ::osirixgrpc::ROI& DCMPixROIValuesRequest::roi() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixROIValuesRequest.roi)
  return _internal_roi();
}
inline void DCMPixROIValuesRequest::unsafe_arena_set_allocated_roi(::osirixgrpc::ROI* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.roi_);
  }
  _impl_.roi_ = reinterpret_cast<::osirixgrpc::ROI*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DCMPixROIValuesRequest.roi)
}
inline ::osirixgrpc::ROI* DCMPixROIValuesRequest::release_roi() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::osirixgrpc::ROI* released = _impl_.roi_;
  _impl_.roi_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::ROI* DCMPixROIValuesRequest::unsafe_arena_release_roi() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.DCMPixROIValuesRequest.roi)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::osirixgrpc::ROI* temp = _impl_.roi_;
  _impl_.roi_ = nullptr;
  return temp;
}
inline ::osirixgrpc::ROI* DCMPixROIValuesRequest::_internal_mutable_roi() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.roi_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::ROI>(GetArena());
    _impl_.roi_ = reinterpret_cast<::osirixgrpc::ROI*>(p);
  }
  return _impl_.roi_;
}
inline ::osirixgrpc::ROI* DCMPixROIValuesRequest::mutable_roi() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::ROI* _msg = _internal_mutable_roi();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DCMPixROIValuesRequest.roi)
  return _msg;
}
inline void DCMPixROIValuesRequest::set_allocated_roi(::osirixgrpc::ROI* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.roi_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.roi_ = reinterpret_cast<::osirixgrpc::ROI*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DCMPixROIValuesRequest.roi)
}

// -------------------------------------------------------------------

// DCMPixSetImageRequest

// .osirixgrpc.DCMPix pix = 1;
inline bool DCMPixSetImageRequest::has_pix() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pix_ != nullptr);
  return value;
}
inline const ::osirixgrpc::DCMPix& DCMPixSetImageRequest::_internal_pix() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::DCMPix* p = _impl_.pix_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::DCMPix&>(::osirixgrpc::_DCMPix_default_instance_);
}
inline const ::osirixgrpc::DCMPix& DCMPixSetImageRequest::pix() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixSetImageRequest.pix)
  return _internal_pix();
}
inline void DCMPixSetImageRequest::unsafe_arena_set_allocated_pix(::osirixgrpc::DCMPix* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pix_);
  }
  _impl_.pix_ = reinterpret_cast<::osirixgrpc::DCMPix*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DCMPixSetImageRequest.pix)
}
inline ::osirixgrpc::DCMPix* DCMPixSetImageRequest::release_pix() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::DCMPix* released = _impl_.pix_;
  _impl_.pix_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::DCMPix* DCMPixSetImageRequest::unsafe_arena_release_pix() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.DCMPixSetImageRequest.pix)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::DCMPix* temp = _impl_.pix_;
  _impl_.pix_ = nullptr;
  return temp;
}
inline ::osirixgrpc::DCMPix* DCMPixSetImageRequest::_internal_mutable_pix() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.pix_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::DCMPix>(GetArena());
    _impl_.pix_ = reinterpret_cast<::osirixgrpc::DCMPix*>(p);
  }
  return _impl_.pix_;
}
inline ::osirixgrpc::DCMPix* DCMPixSetImageRequest::mutable_pix() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::DCMPix* _msg = _internal_mutable_pix();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DCMPixSetImageRequest.pix)
  return _msg;
}
inline void DCMPixSetImageRequest::set_allocated_pix(::osirixgrpc::DCMPix* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pix_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pix_ = reinterpret_cast<::osirixgrpc::DCMPix*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DCMPixSetImageRequest.pix)
}

// repeated float image_data_float = 2;
inline int DCMPixSetImageRequest::_internal_image_data_float_size() const {
  return _internal_image_data_float().size();
}
inline int DCMPixSetImageRequest::image_data_float_size() const {
  return _internal_image_data_float_size();
}
inline void DCMPixSetImageRequest::clear_image_data_float() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.image_data_float_.Clear();
}
inline float DCMPixSetImageRequest::image_data_float(int index) const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixSetImageRequest.image_data_float)
  return _internal_image_data_float().Get(index);
}
inline void DCMPixSetImageRequest::set_image_data_float(int index, float value) {
  _internal_mutable_image_data_float()->Set(index, value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DCMPixSetImageRequest.image_data_float)
}
inline void DCMPixSetImageRequest::add_image_data_float(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_image_data_float()->Add(value);
  // @@protoc_insertion_point(field_add:osirixgrpc.DCMPixSetImageRequest.image_data_float)
}
inline const ::google::protobuf::RepeatedField<float>& DCMPixSetImageRequest::image_data_float() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:osirixgrpc.DCMPixSetImageRequest.image_data_float)
  return _internal_image_data_float();
}
inline ::google::protobuf::RepeatedField<float>* DCMPixSetImageRequest::mutable_image_data_float()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:osirixgrpc.DCMPixSetImageRequest.image_data_float)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_image_data_float();
}
inline const ::google::protobuf::RepeatedField<float>& DCMPixSetImageRequest::_internal_image_data_float()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.image_data_float_;
}
inline ::google::protobuf::RepeatedField<float>* DCMPixSetImageRequest::_internal_mutable_image_data_float() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.image_data_float_;
}

// repeated int32 image_data_argb = 3;
inline int DCMPixSetImageRequest::_internal_image_data_argb_size() const {
  return _internal_image_data_argb().size();
}
inline int DCMPixSetImageRequest::image_data_argb_size() const {
  return _internal_image_data_argb_size();
}
inline void DCMPixSetImageRequest::clear_image_data_argb() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.image_data_argb_.Clear();
}
inline ::int32_t DCMPixSetImageRequest::image_data_argb(int index) const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixSetImageRequest.image_data_argb)
  return _internal_image_data_argb().Get(index);
}
inline void DCMPixSetImageRequest::set_image_data_argb(int index, ::int32_t value) {
  _internal_mutable_image_data_argb()->Set(index, value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DCMPixSetImageRequest.image_data_argb)
}
inline void DCMPixSetImageRequest::add_image_data_argb(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_image_data_argb()->Add(value);
  // @@protoc_insertion_point(field_add:osirixgrpc.DCMPixSetImageRequest.image_data_argb)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& DCMPixSetImageRequest::image_data_argb() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:osirixgrpc.DCMPixSetImageRequest.image_data_argb)
  return _internal_image_data_argb();
}
inline ::google::protobuf::RepeatedField<::int32_t>* DCMPixSetImageRequest::mutable_image_data_argb()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:osirixgrpc.DCMPixSetImageRequest.image_data_argb)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_image_data_argb();
}
inline const ::google::protobuf::RepeatedField<::int32_t>& DCMPixSetImageRequest::_internal_image_data_argb()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.image_data_argb_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* DCMPixSetImageRequest::_internal_mutable_image_data_argb() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.image_data_argb_;
}

// -------------------------------------------------------------------

// DCMPixGetMapFromROIRequest

// .osirixgrpc.DCMPix pix = 1;
inline bool DCMPixGetMapFromROIRequest::has_pix() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pix_ != nullptr);
  return value;
}
inline const ::osirixgrpc::DCMPix& DCMPixGetMapFromROIRequest::_internal_pix() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::DCMPix* p = _impl_.pix_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::DCMPix&>(::osirixgrpc::_DCMPix_default_instance_);
}
inline const ::osirixgrpc::DCMPix& DCMPixGetMapFromROIRequest::pix() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixGetMapFromROIRequest.pix)
  return _internal_pix();
}
inline void DCMPixGetMapFromROIRequest::unsafe_arena_set_allocated_pix(::osirixgrpc::DCMPix* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pix_);
  }
  _impl_.pix_ = reinterpret_cast<::osirixgrpc::DCMPix*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DCMPixGetMapFromROIRequest.pix)
}
inline ::osirixgrpc::DCMPix* DCMPixGetMapFromROIRequest::release_pix() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::DCMPix* released = _impl_.pix_;
  _impl_.pix_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::DCMPix* DCMPixGetMapFromROIRequest::unsafe_arena_release_pix() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.DCMPixGetMapFromROIRequest.pix)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osirixgrpc::DCMPix* temp = _impl_.pix_;
  _impl_.pix_ = nullptr;
  return temp;
}
inline ::osirixgrpc::DCMPix* DCMPixGetMapFromROIRequest::_internal_mutable_pix() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.pix_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::DCMPix>(GetArena());
    _impl_.pix_ = reinterpret_cast<::osirixgrpc::DCMPix*>(p);
  }
  return _impl_.pix_;
}
inline ::osirixgrpc::DCMPix* DCMPixGetMapFromROIRequest::mutable_pix() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::DCMPix* _msg = _internal_mutable_pix();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DCMPixGetMapFromROIRequest.pix)
  return _msg;
}
inline void DCMPixGetMapFromROIRequest::set_allocated_pix(::osirixgrpc::DCMPix* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pix_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pix_ = reinterpret_cast<::osirixgrpc::DCMPix*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DCMPixGetMapFromROIRequest.pix)
}

// .osirixgrpc.ROI roi = 2;
inline bool DCMPixGetMapFromROIRequest::has_roi() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.roi_ != nullptr);
  return value;
}
inline const ::osirixgrpc::ROI& DCMPixGetMapFromROIRequest::_internal_roi() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::osirixgrpc::ROI* p = _impl_.roi_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::ROI&>(::osirixgrpc::_ROI_default_instance_);
}
inline const ::osirixgrpc::ROI& DCMPixGetMapFromROIRequest::roi() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osirixgrpc.DCMPixGetMapFromROIRequest.roi)
  return _internal_roi();
}
inline void DCMPixGetMapFromROIRequest::unsafe_arena_set_allocated_roi(::osirixgrpc::ROI* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.roi_);
  }
  _impl_.roi_ = reinterpret_cast<::osirixgrpc::ROI*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DCMPixGetMapFromROIRequest.roi)
}
inline ::osirixgrpc::ROI* DCMPixGetMapFromROIRequest::release_roi() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::osirixgrpc::ROI* released = _impl_.roi_;
  _impl_.roi_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::osirixgrpc::ROI* DCMPixGetMapFromROIRequest::unsafe_arena_release_roi() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:osirixgrpc.DCMPixGetMapFromROIRequest.roi)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::osirixgrpc::ROI* temp = _impl_.roi_;
  _impl_.roi_ = nullptr;
  return temp;
}
inline ::osirixgrpc::ROI* DCMPixGetMapFromROIRequest::_internal_mutable_roi() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.roi_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::ROI>(GetArena());
    _impl_.roi_ = reinterpret_cast<::osirixgrpc::ROI*>(p);
  }
  return _impl_.roi_;
}
inline ::osirixgrpc::ROI* DCMPixGetMapFromROIRequest::mutable_roi() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::osirixgrpc::ROI* _msg = _internal_mutable_roi();
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DCMPixGetMapFromROIRequest.roi)
  return _msg;
}
inline void DCMPixGetMapFromROIRequest::set_allocated_roi(::osirixgrpc::ROI* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.roi_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.roi_ = reinterpret_cast<::osirixgrpc::ROI*>(value);
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DCMPixGetMapFromROIRequest.roi)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace osirixgrpc


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_dcmpix_2eproto_2epb_2eh
